{"version":3,"sources":["components/Toast.tsx","pages/MedicalRecords/MedicalRecords.tsx","pages/MedicalRecords/MedicalRecordsService.tsx","pages/MedicalRecords/Assessment/Assessment.tsx","pages/MedicalRecords/Assessment/AssessmentService.tsx","components/Loading.tsx","pages/Root/Root.tsx","pages/Home/Home.tsx","assets/fiocruzFrente.jpeg","assets/fiocruzCastelo.jpg","assets/fiocruzBanner.jpg","pages/Login/Login.tsx","pages/SignUp/SignUp.tsx","pages/Header/MyProfile/MyProfile.tsx","pages/Users/UsersService.tsx","pages/Users/Users.tsx","pages/Header/Notifications/NotificationsService.tsx","pages/Header/Notifications/Notifications.tsx","assets/logoFiocruz.png","pages/Header/HeaderNotLogin.tsx","pages/Header/Header.tsx","pages/Footer/Footer.tsx","pages/MedicalRecords/Create/CreateMedicalRecordsService.tsx","pages/Registrations/Diseases/DiseasesService.tsx","pages/Registrations/Medicines/MedicinesService.tsx","pages/MedicalRecords/Create/Create.tsx","pages/Registrations/Registrations.tsx","pages/Registrations/Patient/PatientService.tsx","pages/Registrations/Patient/Patient.tsx","pages/Registrations/Patient/Create/CreatePatientService.tsx","pages/Registrations/Patient/Create/Create.tsx","pages/Registrations/Diseases/Diseases.tsx","pages/Registrations/Diseases/create/CreateDiseaseService.tsx","pages/Registrations/Diseases/create/CreateDisease.tsx","pages/Registrations/Medicines/Medicines.tsx","pages/Registrations/Medicines/create/CreateMedicineService.tsx","pages/Registrations/Medicines/create/CreateMedicine.tsx","pages/History/History.tsx","pages/NotFound/NotFound.tsx","pages/UnderDevelopment/UnderDevelopment.tsx","pages/MedicalRecords/Assessment/Create/CreateAssessmentService.tsx","pages/MedicalRecords/Assessment/Create/Create.tsx","pages/Microbiology/MicrobiologyService.tsx","pages/Microbiology/MicrobiologyView/index.tsx","pages/Microbiology/MicrobiologyForm/index.tsx","pages/Microbiology/index.tsx","pages/Recomendations/Recomendations.tsx","pages/Logs/Logs.tsx","routes.tsx","App.tsx","index.tsx","services/api.ts"],"names":["ToastComponent","props","myToast","useRef","useEffect","messageType","messageTitle","messageContent","lifeTime","current","show","severity","summary","detail","life","ref","position","MedicalRecords","useState","getSeqProntuario","setSeqProntuario","getNroProntuario","setNroProntuario","getSeqPaciente","setSeqPaciente","getNomePaciente","setNomePaciente","getDataInternacao","setDataInternacao","getCodDoencaPrincipal","setCodDoencaPrincipal","getCodDoencaSecundario","setCodDoencaSecundario","getSistemaAcometido","setSistemaAcometido","getCodComorbidade","setCodComorbidade","getOrigem","setOrigem","getAlocacao","setAlocacao","getResultadoColeta","setResultadoColeta","getCodAtbPrimario","setCodAtbPrimario","getCodAtbSecundario","setCodAtbSecundario","getSitioInfeccaoPrimario","setSitioInfeccaoPrimario","getTratamento","setTratamento","getIndicacao","setIndicacao","getDisfuncao","setDisfuncao","getOrigemInfeccao","setOrigemInfeccao","getDose","setDose","getPosologia","setPosologia","getDesfecho","setDesfecho","getDataDesfecho","setDataDesfecho","getDataTratadaInternacao","setDataTratadaInternacao","getResultadoColetaString","setResultadoColetaString","getTratamentoCCIHString","setTratamentoCCIHString","getIndicacaoSepseString","setIndicacaoSepseString","getDisfuncaoRenalString","setDisfuncaoRenalString","getDoseCorretaString","setDoseCorretaString","getPosologiaCorretaString","setPosologiaCorretaString","getDataTratadaDesfecho","setDataTratadaDesfecho","setMedicalRecords","datasource","setDatasource","loading","setLoading","loading1","setLoading1","getFirst","setFirst","totalRecords","setTotalRecords","searchInput","setSearchInput","open","setOpen","getMode","setMode","selectedMedicalRecord","setSelectedMedicalRecord","getOptionState","setOptionState","getUserChange","setMedicalRecordChange","getToast","setToast","getMessageType","setMessageType","getMessageTitle","setMessageTitle","getMessageContent","setMessageContent","displayDialog","setDisplayDialog","displayDialog1","setDisplayDialog1","displayDialog2","setDisplayDialog2","displayDialog3","setDisplayDialog3","displayDialog4","setDisplayDialog4","history","useHistory","medicalRecordsService","MedicalRecordsService","medicalRecordData","email","localStorage","getItem","rows","options","label","value","options2","name","cod","options3","addLocale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","onResultadoChange","e","onTratamentoChange","onIndicacaoChange","onDisfuncaoChange","onDoseChange","onPosologiaChange","onDesfechoChange","checkInput","type","onOptionChange","getMedicalRecordsFunction","data","medicalRecords","length","slice","getMedicalRecordsPaginate","then","setTimeout","onPage","event","startIndex","first","endIndex","header","style","textAlign","className","handleSearch","searchMedicalRecordsGlobal","showMedicalRecords","showToast","searchType","dataSize","handleSubmit","a","preventDefault","schema","Yup","shape","required","nullable","oneOf","validate","abortEarly","Update","response","updatedMedicalRecord","error","sqlMessage","sqlState","String","includes","newMedicalRecord","onMedicalRecordSelect","SeqProntuario","NroProntuario","SeqPaciente","NomePaciente","res","DataInternacao","split","newData","Date","CodDoencaPrincipal","CodDoencaSecundario","SistemaAcometido","CodComorbidade","Origem","Alocacao","tratarDados","ResultadoColeta","CodAtbPrimario","CodAtbSecundario","SitioInfeccaoPrimario","TratamentoCCIH","IndicacaoSepse","DisfuncaoRenal","OrigemInfeccao","DoseCorreta","PosologiaCorreta","Desfecho","DataDesfecho","res1","newData1","eval","monthNavigatorTemplate","onChange","originalEvent","lineHeight","yearNavigatorTemplate","onClickDelete","Delete","deletedMedicalRecord","handleSubmit1","SeqProntuarioBodyTemplate","rowData","Fragment","NroProntuarioBodyTemplate","SeqPacienteBodyTemplate","DataNascimentoBodyTemplate","DataNascimento","NomePacienteBodyTemplate","GeneroBodyTemplate","Genero","DataInternacaoBodyTemplate","DiagnosticoPrincipalBodyTemplate","DiagnosticoPrincipal","AlocacaoBodyTemplate","DesfechoBodyTemplate","fontColor","verifyStatus","color","to","location","pathname","variant","borderRadius","height","onClick","in","timeout","id","target","onKeyPress","ev","key","minWidth","size","htmlFor","placeholder","optionLabel","width","tabIndex","paginator","emptyMessage","resizableColumns","lazy","selectionMode","selection","onSelectionChange","dataKey","onRowSelect","field","body","visible","modal","onHide","push","onSubmit","locale","dateFormat","showButtonBar","monthNavigator","yearNavigator","yearRange","showIcon","showOnFocus","touchUI","maximizable","keyfilter","defaultValue","Number","min","max","readOnly","autoFocus","api","get","searchKey","searchCode","put","post","Assessment","query","URLSearchParams","useLocation","search","queryResponse","getNroAvaliacao","setNroAvaliacao","getDataAvaliacao","setDataAvaliacao","getResultadoCulturas","setResultadoCulturas","getResCulturasAcao","setResCulturasAcao","getDoseCorreta","setDoseCorreta","getPosologiaCorreta","setPosologiaCorreta","getAlertaDot","setAlertaDot","getAlertaDotString","setAlertaDotString","getAlertaDotDescricao","setAlertaDotDescricao","getDisfuncaoRenal","setDisfuncaoRenal","getAtbContraindicacao","setAtbContraindicacao","getAlteracaoPrescricao","setAlteracaoPrescricao","getAlteracaoPrescricaoString","setAlteracaoPrescricaoString","getAtbDiluicaoInfusao","setAtbDiluicaoInfusao","getAtbDiluicaoInfusaoString","setAtbDiluicaoInfusaoString","getInteracaoAtbMedicamento","setInteracaoAtbMedicamento","getInteracaoAtbMedicamentoString","setInteracaoAtbMedicamentoString","getHemodialise","setHemodialise","getHemodialiseString","setHemodialiseString","getAtbOral","setAtbOral","getTrocaAtb","setTrocaAtb","getNovoAtb","setNovoAtb","getDataAvaliacaoTratada","setDataAvaliacaoTratada","assessment","setAssessment","totalAssessment","setTotalAssessment","selectedAssessment","setSelectedAssessment","getAssessmentChange","setAssessmentChange","assessmentService","AssessmentService","assessmentData","getAssessmentFunction","showAssessments","assessments","getAssessmentPaginate","Verify","verifyMR","searchAssessmentGlobal","onDoseCorretaChange","onPosologiaCorretaChange","onAlertaDotChange","onAlteracaoPrescricaoChange","onAtbContraindicacaoChange","onAtbDiluicaoInfusaoChange","onInteracaoAtbMedicamentoChange","onHemodialiseChange","onAtbOralChange","onTrocaAtbChange","options4","options5","updatedAssessment","deletedAssessment","newAssessment","onAssessmentSelect","NroAvaliacao","DataAvaliacao","ResultadoCulturas","ResCulturasAcao","AlertaDot","AlertaDotDescricao","AtbContraindicacao","AlteracaoPrescricao","AtbDiluicaoInfusao","InteracaoAtbMedicamento","Hemodialise","AtbOral","TrocaAtb","NovoAtb","NroAvaliacaoBodyTemplate","DataAvaliacaoBodyTemplate","AtbOralBodyTemplate","AtbContraindicacaoBodyTemplate","TrocaAtbBodyTemplate","IdProntuario","seqProntuario","Loading","strokeWidth","animationDuration","Root","Home","document","title","Login","useCookies","setCookies","getEmail","setEmail","getPassword","setPassword","index","setIndex","setItem","senha","userLogin","tokenLoginResponse","jwt","decode","userToken","setCookiesLogin","Email","Nome","TipoUsuario","CodUsuario","message","nome","tipoUsuario","codUsuario","nomeArray","Carousel","activeIndex","onSelect","selectedIndex","Item","src","loginFiocruzCustomImage","alt","loginFiocruzCasteloImage","loginBanner","autoComplete","minLength","disabled","Toast","SignUp","getNome","setNome","getMatricula","setMatricula","getSenha","setSenha","getRedefinirSenha","setRedefinirSenha","matricula","confirmarSenha","createdUser","status","MyProfile","cookies","setEditable","pharmaceuticalStatus","setPharmaceuticalStatus","initData","setInitData","formData","setFormData","handleInputChange","updatedUser","response1","showUsers","Matricula","userData","catch","err","alert","stateMethod","setPosition","displayPosition","setDisplayPosition","Button","footer","TipoNotificacao","requestChangeUserType","UsersService","userId","newUserType","incomingUserId","verifyUserOption","Users","cookie","prontuario","setProntuario","getEnd","setEnd","selectedUser","setSelectedUser","getUser","setUser","setUserChange","getUserVerifyOption","setUserVerifyOption","usersService","dt","getUsersPaginate","getUsersFunction","userFound","users","i","searchUserGlobal","Spinner","as","animation","role","dialogFooter","dialogCancel","Object","assign","isVerified","blockScroll","currentUserId","changeUserType","Dropdown","Divider","changeVerifyUser","verifyUser","showData","codUsuarioDelete","deleteUser","deletedUser","NotificationsService","Notifications","getNotifications","setNotifications","responseDataStatus","setResponseDataStatus","responseData","setResponseData","notificationsService","getNotificationFunction","notifications","column","NotificationId","tipoNotificacao","notificationType","updatedStatusNotification","Header","serverRunning","errorType","code","href","logo","goBack","removeCookie","userName","setUserName","setTipoUsuario","notificationsLength","setNotificationsLength","getError","setError","getLifeTime","setLifeTime","notificationFound","Badge","Toggle","Menu","removeItem","text","left","top","Footer","rel","CreateMedicalRecordsService","DiseasesService","codDoenca","delete","updatedDiseasesDB","currentDiseasesDB","MedicinesService","ean","MedicalRecordsForm","diseases","setDiseases","setDiseasesChange","selectedDiseases","setSelectedDiseases","getType","setType","diseasesService","medicines","setMedicines","totalRecords2","setTotalRecords2","first2","setFirst2","searchInput2","setSearchInput2","getOptionState2","setOptionState2","setMode2","open2","setOpen2","setMedicinesChange","selectedMedicines","setSelectedMedicines","medicinesService","createMedicalRecordsService","DiseasesData","MedicinesData","Create","CreatedMedicalRecord","header2","getDiseasesFunction","getDiseasesPaginate","searchDiseasesGlobal","getMedicinesFunction","getMedicinesPaginate","handleSearch2","searchMedicineGlobal","Collapse","margin","CodDoenca","onDiseasesSelect","startIndex2","endIndex2","EAN","onMedicinesSelect","Registrations","PatientService","idPatient","IdPaciente","Patient","paciente","setPaciente","setPacienteSelect","getPacienteSeq","setPacienteSeq","getPacienteNro","setPacienteNro","getPacienteGenero","setPacienteGenero","getPacienteNome","setPacienteNome","getPacienteDataNascimento","setPacienteDataNascimento","getPacienteProntuario","setPacienteProntuario","getPacienteAvalicao","setPacienteAvaliacao","getPacienteIdade","setPacienteIdade","patientService","getPacienteNomeUpdate","setPacienteNomeUpdate","getPacienteDataNascimentoUpdate","setPacienteDataNascimentoUpdate","getPacienteGeneroUpdate","setPacienteGeneroUpdate","getPatientFunction","getPatientFunction1","patients","getPatientPaginate","patientFound","tempoAtual","parseDataAniversario","dataAniversario","age","getFullYear","m","getMonth","getDate","getPatientInformation","medicalRecordsLength","assessmentLength","updatePatientInformation","updatedPatient","deletePatient","deletedPatient","console","log","searchPatientGlobal","pacienteData","NroPaciente","dataNascimento","getPatientInformationUpdate","maximized","CreatePatientService","GeneroPaciente","PatientCreate","getNroPaciente","setNroPaciente","getDataNascimentoPaciente","setDataNascimentoPaciente","getGeneroPaciente","setGeneroPaciente","undefined","createPatientService","create","createdPatient","Diseases","optionState","displayDialogs","setDisplayDialogs","setCodDoenca","diseaseData","updatedCodDoenca","setUpdatedCodDoenca","updatedNome","setUpdatedNome","selectedRow","setSelectedRow","setSelectedDisease","up","updateDisease","updatedDisease","deleteDisease","deletedDisease","onUserSelect","CreateDiseaseService","DiseasesCreate","setCodDoeca","toast","createDiseaseService","HandleToast","Medicines","setEan","medicineData","updatedEan","setUpdatedEan","setSelectedMedicine","deleteMedicine","deletedMedicine","CreateMedicineService","PrincipioAtivo","Registro","Laboratorio","Produto","Apresentacao","ClasseTerapeutica","CNPJ","MedicinesCreate","setEAN","principioAtivo","setPrincipioAtivo","registro","setRegistro","laboratorio","setLaboratorio","produto","setProduto","apresentacao","setApresentacao","classeTerapeutica","setClasseTerapeutica","setCNPJ","createMedicineService","History","setActiveIndex","items","command","item","maxWidth","model","NotFound","UnderDevelopment","CreateAssessmentService","AssessmentForm","createAssessmentService","CreatedAssessment","page","filter","filterValue","params","microbiologyData","MicrobiologyView","view","setView","IdMicrobiologia","setIdMicrobiologia","setIdPaciente","setIdProntuario","DataColeta","setDataColeta","DataResultado","setDataResultado","SwabNasalObservacoes","setSwabNasalObservacoes","SwabRetalObservacoes","setSwabRetalObservacoes","SangueObservacoes","setSangueObservacoes","UrinaObservacoes","setUrinaObservacoes","SecrecaoTraquealObservacoes","setSecrecaoTraquealObservacoes","OutrosObservacoes","setOutrosObservacoes","PerfilSensibilidade","setPerfilSensibilidade","MicrobiologyService","MicrobiologyForm","setTitle","buttonLabel","setButtonLabel","SwabNasal","setSwabNasal","SwabRetal","setSwabRetal","Sangue","setSangue","Urina","setUrina","SecrecaoTraqueal","setSecrecaoTraqueal","Outros","setOutros","viewNasal","setViewNasal","viewRetal","setViewRetal","viewSangue","setViewSangue","viewUrina","setViewUrina","viewSec","setViewSec","viewOutros","setViewOutros","update","formatDate","date","newDate","getById","microbiology","dataColeta","dataResultado","loadMicrobiologyInfo","showButtons","maxLength","autoResize","Microbiology","microbiologies","setMicrobiologies","records","setRecords","setId","setUpdate","deleteDialog","setDeleteDialog","selectedMicrobiology","setselectedMicrobiology","tableloading","setTableLoading","setFilter","setFilterValue","successfulSearch","setSuccessfulSearch","handleFormat","verifica","handleTableUpdate","getMicrobiologies","results","count","microbiologiesData","map","handleReset","onMicrobiologySelect","handleDelete","Recomendations","optionsLogType","menuPrincipal","menuMicrobiologia","menuPaciente","menuProntuario","Logs","microbiologyLogType","getContent","setContent","getLoading","getShowLogType1","setShowLogType1","getShowError","setShowError","getShowId","setShowId","getMicrobiologyLogType","setMicrobiologyLogType","getSpecificColumnHeader","setSpecificColumnHeader","getSpecificColumnField","setSpecificColumnField","getLogs","showLogs","logs","logType","ButtonGroup","filterMatchMode","filterPlaceholder","Routes","path","render","HeaderNotLogin","exact","CreateMedicine","CreateDisease","App","ReactDOM","StrictMode","getElementById","axios","baseURL"],"mappings":"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","file":"static/js/main.71cd3dd5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ToastComponent = (props: any) => {\r\n\r\n    const myToast: any = useRef(null);\r\n    useEffect(() => {\r\n        showToast(props.messageType, props.messageTitle, props.messageContent, props.lifeTime);\r\n    }, [])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string, lifeTime?: number) {\r\n        if (lifeTime) {\r\n            myToast.current.show({ severity: messageType, summary: messageTitle, detail: messageContent, life: lifeTime });\r\n        } else {\r\n            myToast.current.show({ severity: messageType, summary: messageTitle, detail: messageContent, life: 4000 });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={myToast} position=\"bottom-right\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToastComponent;","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../components/Toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport * as Yup from \"yup\";\r\n\r\nimport {MedicalRecordsService} from './MedicalRecordsService';\r\nimport Loading from '../../components/Loading';\r\nimport './MedicalRecords.css'\r\nimport { addLocale } from 'primereact/api';\r\n\r\nconst MedicalRecords = () => {\r\n    const [getSeqProntuario, setSeqProntuario] = useState<any>(null)\r\n    const [getNroProntuario, setNroProntuario] = useState<any>(null)\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>(null)\r\n    const [getNomePaciente, setNomePaciente] = useState<any>(null)\r\n    const [getDataInternacao, setDataInternacao] = useState<any>(null)\r\n    const [getCodDoencaPrincipal, setCodDoencaPrincipal] = useState<string>('')\r\n    const [getCodDoencaSecundario, setCodDoencaSecundario] = useState<any>(null)\r\n    const [getSistemaAcometido, setSistemaAcometido] = useState<string>('')\r\n    const [getCodComorbidade, setCodComorbidade] = useState<any>(null)\r\n    const [getOrigem, setOrigem] = useState<string>('')\r\n    const [getAlocacao, setAlocacao] = useState<string>('')\r\n    const [getResultadoColeta, setResultadoColeta] = useState<any>(null)\r\n    const [getCodAtbPrimario, setCodAtbPrimario] = useState<string>('')\r\n    const [getCodAtbSecundario, setCodAtbSecundario] = useState<any>(null)\r\n    const [getSitioInfeccaoPrimario, setSitioInfeccaoPrimario] = useState<any>(null)\r\n    const [getTratamento, setTratamento] = useState<string>('')\r\n    const [getIndicacao, setIndicacao] = useState<string>('')\r\n    const [getDisfuncao, setDisfuncao] = useState<string>('')\r\n    const [getOrigemInfeccao, setOrigemInfeccao] = useState<string>('')\r\n    const [getDose, setDose] = useState<any>(null)\r\n    const [getPosologia, setPosologia] = useState<any>(null)\r\n    const [getDesfecho, setDesfecho] = useState<any>(null)\r\n    const [getDataDesfecho, setDataDesfecho] = useState<any>(null)\r\n    \r\n    const [getDataTratadaInternacao, setDataTratadaInternacao] = useState<string>('')\r\n    const [getResultadoColetaString, setResultadoColetaString] = useState<string>('')\r\n    const [getTratamentoCCIHString, setTratamentoCCIHString] = useState<string>('')\r\n    const [getIndicacaoSepseString, setIndicacaoSepseString] = useState<string>('')\r\n    const [getDisfuncaoRenalString, setDisfuncaoRenalString] = useState<string>('')\r\n    const [getDoseCorretaString, setDoseCorretaString] = useState<string>('')\r\n    const [getPosologiaCorretaString, setPosologiaCorretaString] = useState<string>('')\r\n    const [getDataTratadaDesfecho, setDataTratadaDesfecho] = useState<string>('')\r\n    \r\n    const [MedicalRecords, setMedicalRecords] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [selectedMedicalRecord, setSelectedMedicalRecord] = useState<any>(null);\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getUserChange, setMedicalRecordChange] = useState();\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n    const [displayDialog4, setDisplayDialog4] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    const medicalRecordsService = new MedicalRecordsService()\r\n    var medicalRecordData:any = {};\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n    const rows = 10;\r\n\r\n    let options = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Não', value: 'N'},\r\n    ];\r\n\r\n    let options2 = [\r\n        {name: 'Nro Prontuário', cod: 'Pro'},\r\n        {name: 'Seq Paciente', cod: 'Pac'},\r\n        {name: 'Data Internação', cod: 'Int'}\r\n    ];\r\n\r\n    let options3 = [\r\n        {label: 'Óbito', value: 'Óbito'},\r\n        {label: 'Alta', value: 'Alta'},\r\n        {label: 'Tranferência', value: 'Transferência'}\r\n    ]\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n\r\n    const onResultadoChange = (e: { value: string }) => {\r\n        setResultadoColeta(e.value);\r\n    };\r\n\r\n    const onTratamentoChange = (e: { value: string }) => {\r\n        setTratamento(e.value);\r\n    };\r\n\r\n    const onIndicacaoChange = (e: { value: string }) => {\r\n        setIndicacao(e.value);\r\n    };\r\n\r\n    const onDisfuncaoChange = (e: { value: string }) => {\r\n        setDisfuncao(e.value);\r\n    };\r\n\r\n    const onDoseChange = (e: { value: string }) => {\r\n        setDose(e.value);\r\n    };\r\n\r\n    const onPosologiaChange = (e: { value: string }) => {\r\n        setPosologia(e.value);\r\n    };\r\n\r\n    const onDesfechoChange = (e: { value: string }) => {\r\n        setDesfecho(e.value);\r\n    };\r\n\r\n    function checkInput(type: number, e: any){\r\n        if(type == 1){\r\n            if(e === ''){\r\n                setCodDoencaSecundario(null);\r\n            }else{\r\n                setCodDoencaSecundario(e)\r\n            }\r\n        }\r\n        if(type == 2){\r\n            if(e === ''){\r\n                setCodComorbidade(null);\r\n            }else{\r\n                setCodComorbidade(e)\r\n            }\r\n        }\r\n        if(type == 3){\r\n            if(e === ''){\r\n                setCodAtbSecundario(null);\r\n            }else{\r\n                setCodAtbSecundario(e)\r\n            } \r\n        }\r\n        if(type == 4){\r\n            if(e === ''){\r\n                setSitioInfeccaoPrimario(null);\r\n            }else{\r\n                setSitioInfeccaoPrimario(e)\r\n            }  \r\n        }\r\n    }\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                getMedicalRecordsFunction(data)\r\n            });\r\n        }, 1000)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function getMedicalRecordsFunction(data?: any){\r\n        setLoading(true);\r\n        if(!data){\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                setDatasource(data.medicalRecords);\r\n                setTotalRecords(data.length);\r\n                data = data.medicalRecords;\r\n                \r\n                setMedicalRecords(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return\r\n            })\r\n        }else{\r\n            setDatasource(data.medicalRecords);\r\n            setTotalRecords(data.length);\r\n            data = data.medicalRecords;\r\n            \r\n            setMedicalRecords(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        \r\n        const startIndex = event.first;\r\n        const endIndex = event.first + rows;\r\n        medicalRecordsService.getMedicalRecordsPaginate(endIndex).then(data => {\r\n            getMedicalRecordsFunction(data);\r\n        });\r\n        setFirst(startIndex);\r\n        setMedicalRecords(datasource.slice(startIndex, endIndex));\r\n        setLoading(false);\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Prontuários</p>\r\n        </>;\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                getMedicalRecordsFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        medicalRecordsService.searchMedicalRecordsGlobal(searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.showMedicalRecords){\r\n                setLoading(false);\r\n                setMedicalRecords([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getMedicalRecordsFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nro Prontuário'){\r\n                searchType = 'NroProntuario';\r\n            }else if(getOptionState.name === 'Seq Paciente'){\r\n                searchType = 'SeqPaciente';\r\n            }else if(getOptionState.name === 'Data Internação'){\r\n                searchType = 'DataInternacao'\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroProntuario, getSeqPaciente,\r\n            getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n            getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n            getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n            getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n            getDisfuncao, getOrigemInfeccao, getDose, getPosologia\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroProntuario: Yup.number().required(),\r\n                getSeqPaciente: Yup.number().required(),\r\n                getDataInternacao: Yup.date().required(),\r\n                getCodDoencaPrincipal: Yup.string().required(),\r\n                getCodDoencaSecundario: Yup.string().nullable(),\r\n                getSistemaAcometido: Yup.string().required(),\r\n                getCodComorbidade: Yup.string().nullable(),\r\n                getOrigem: Yup.string().required(),\r\n                getAlocacao: Yup.string().required(),\r\n                getResultadoColeta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getCodAtbPrimario: Yup.string().required(),\r\n                getCodAtbSecundario: Yup.string().nullable(),\r\n                getSitioInfeccaoPrimario: Yup.string().nullable(),\r\n                getTratamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getIndicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getDisfuncao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getOrigemInfeccao: Yup.string().required(),\r\n                getDose: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologia: Yup.string().nullable().oneOf([null, \"S\", \"N\"])\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            medicalRecordsService.Update(getNroProntuario, getSeqPaciente,\r\n                getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n                getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n                getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n                getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n                getDisfuncao, getOrigemInfeccao, getDose, getPosologia, email\r\n            ).then((response) => {\r\n                if(response.updatedMedicalRecord){\r\n                    showToast('success', 'Sucesso!', `Prontuário atualizado com sucesso!`);\r\n                    getMedicalRecordsFunction()\r\n                    setDisplayDialog1(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        if(response.error.sqlState == 23000){\r\n                            if(String(response.error.sqlMessage).includes(\"(`CodDoencaPrincipal`)\") || String(response.error.sqlMessage).includes(\"(`CodDoencaSecundario`)\")){\r\n                                showToast('error', 'Erro!', `O campo código de doença está incorreto`);\r\n                            }\r\n                            else if(String(response.error.sqlMessage).includes(\"(`CodAtbPrimario`)\")  || String(response.error.sqlMessage).includes(\"(`CodAtbSecundario`)\")){\r\n                                showToast('error', 'Erro!', `O campo código de medicamento está incorreto`);\r\n                            }else{\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        }else{\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    let newMedicalRecord = true\r\n    function onMedicalRecordSelect (e: any) {\r\n        newMedicalRecord = false;\r\n        setMedicalRecordChange(e.value)\r\n        medicalRecordData = e.data;\r\n        \r\n        setSeqProntuario(medicalRecordData.SeqProntuario)\r\n        setNroProntuario(medicalRecordData.NroProntuario)\r\n        setSeqPaciente(medicalRecordData.SeqPaciente)\r\n        setNomePaciente(medicalRecordData.NomePaciente)\r\n        var res = medicalRecordData.DataInternacao.split(\"/\")\r\n        var newData = new Date(res[2], res[1]-1, res[0]);\r\n        setDataTratadaInternacao(medicalRecordData.DataInternacao)\r\n        setDataInternacao(newData)\r\n        setCodDoencaPrincipal(medicalRecordData.CodDoencaPrincipal)\r\n        setCodDoencaSecundario(medicalRecordData.CodDoencaSecundario)\r\n        setSistemaAcometido(medicalRecordData.SistemaAcometido)\r\n        setCodComorbidade(medicalRecordData.CodComorbidade)\r\n        setOrigem(medicalRecordData.Origem)\r\n        setAlocacao(medicalRecordData.Alocacao)\r\n        tratarDados(\"ResultadoColeta\")\r\n        setResultadoColeta(medicalRecordData.ResultadoColeta)\r\n        setCodAtbPrimario(medicalRecordData.CodAtbPrimario)\r\n        setCodAtbSecundario(medicalRecordData.CodAtbSecundario)\r\n        setSitioInfeccaoPrimario(medicalRecordData.SitioInfeccaoPrimario)\r\n        tratarDados(\"TratamentoCCIH\")\r\n        setTratamento(medicalRecordData.TratamentoCCIH)\r\n        tratarDados(\"IndicacaoSepse\")\r\n        setIndicacao(medicalRecordData.IndicacaoSepse)\r\n        tratarDados(\"DisfuncaoRenal\")\r\n        setDisfuncao(medicalRecordData.DisfuncaoRenal)\r\n        setOrigemInfeccao(medicalRecordData.OrigemInfeccao)\r\n        tratarDados(\"DoseCorreta\")\r\n        setDose(medicalRecordData.DoseCorreta)\r\n        tratarDados(\"PosologiaCorreta\")\r\n        setPosologia(medicalRecordData.PosologiaCorreta)\r\n        setDesfecho(medicalRecordData.Desfecho)\r\n        if(medicalRecordData.DataDesfecho == null){\r\n            setDataDesfecho(medicalRecordData.DataDesfecho)\r\n        }else{\r\n            setDataTratadaDesfecho(medicalRecordData.DataDesfecho)\r\n            var res1 = medicalRecordData.DataDesfecho.split(\"/\")\r\n            var newData1 = new Date(res1[2], res1[1]-1, res1[0]);\r\n            setDataDesfecho(newData1)\r\n        }\r\n\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    function tratarDados (e: string) {\r\n        if(eval(\"medicalRecordData.\" + e) == \"S\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim\"' + \")\")\r\n        if(eval(\"medicalRecordData.\" + e) == \"N\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não\"' + \")\")\r\n    }\r\n\r\n    const monthNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const yearNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    function onClickDelete(){\r\n        medicalRecordsService.Delete(getNroProntuario, email)\r\n        .then((response) => {\r\n            if(response.deletedMedicalRecord){\r\n                showToast('success', 'Sucesso!', `Prontuário deletado com sucesso!`);\r\n                getMedicalRecordsFunction()\r\n                setTimeout(() => {\r\n                    setDisplayDialog2(false)\r\n                }, 2500)\r\n            }else{\r\n                if(response.error.sqlMessage){\r\n                    showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.error));\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleSubmit1(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getDesfecho, getDataDesfecho\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getDesfecho: Yup.string().oneOf([\"Alta\", \"Transferência\", \"Óbito\"]).required(),\r\n                getDataDesfecho: Yup.date().required()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            medicalRecordsService.Desfecho(getNroProntuario, getDesfecho, getDataDesfecho, email\r\n            ).then((response) => {\r\n                if(response.updatedMedicalRecord){\r\n                    showToast('success', 'Sucesso!', `Desfecho atualizado com sucesso!`);\r\n                    getMedicalRecordsFunction()\r\n                    setDisplayDialog3(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    const SeqProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Seq Prontuário</span>\r\n                <a>{rowData.SeqProntuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const NroProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nro Prontuário</span>\r\n                <a>{rowData.NroProntuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const SeqPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Seq Paciente</span>\r\n                <a>{rowData.SeqPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataNascimentoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nascimento</span>\r\n                <a>{rowData.DataNascimento}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const NomePacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nome</span>\r\n                <a>{rowData.NomePaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const GeneroBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Gênero</span>\r\n                <a>{rowData.Genero}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataInternacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Data Internação</span>\r\n                <a>{rowData.DataInternacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DiagnosticoPrincipalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Diagnostico</span>\r\n                <a>{rowData.DiagnosticoPrincipal}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AlocacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Alocação</span>\r\n                <a>{rowData.Alocacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DesfechoBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.Desfecho;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Óbito')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Alta')\r\n            fontColor = \"#106b00\"\r\n        if(verifyStatus == 'Transferência')\r\n            fontColor = \"#0080FF\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Desfecho</span>\r\n                <a style={{color: fontColor}}>{rowData.Desfecho}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({...location, pathname: '/medicalRecords/create'})}><Button variant=\"outline-dark\" className=\"mb-2\" style={{borderRadius: '0', height:'41.5px'}}>Cadastrar Prontuário</Button></Link>\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar prontuário específico</Button>\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-2\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                {getOptionState === null\r\n                                    ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                    : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {searchInput === ''\r\n                                ? <></>\r\n                                :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getMedicalRecordsFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                        <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n                <div className=\"ml-auto\"></div>\r\n                \r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable value={MedicalRecords} paginator={true} rows={rows} header={header} totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                        onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedMedicalRecord} onSelectionChange={e => setSelectedMedicalRecord(e.value)} dataKey=\"id\"\r\n                        onRowSelect={(e) => {onMedicalRecordSelect(e);}}>\r\n                        <Column field=\"SeqProntuario\" header=\"Seq Prontuário\" body={SeqProntuarioBodyTemplate}/>\r\n                        <Column field=\"NroProntuario\" header=\"Nro Prontuário\" body={NroProntuarioBodyTemplate}/>\r\n                        <Column field=\"SeqPaciente\" header=\"Seq Paciente\" body={SeqPacienteBodyTemplate}/>\r\n                        <Column field=\"DataNascimento\" header=\"Nascimento\" body={DataNascimentoBodyTemplate}/>\r\n                        <Column field=\"NomePaciente\" header=\"Nome\" body={NomePacienteBodyTemplate}/>\r\n                        <Column field=\"Genero\" header=\"Gênero\" body={GeneroBodyTemplate}/>\r\n                        <Column field=\"DataInternacao\" header=\"Data Internação\" body={DataInternacaoBodyTemplate}/>\r\n                        <Column field=\"DiagnosticoPrincipal\" header=\"Diagnostico\" body={DiagnosticoPrincipalBodyTemplate}/>\r\n                        <Column field=\"Alocacao\" header=\"Alocação\" body={AlocacaoBodyTemplate}/>\r\n                        <Column field=\"Desfecho\" header=\"Desfecho\" body={DesfechoBodyTemplate}/>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Dialog visible={displayDialog} style={{width: '50%'}} header=\"Ações\" modal={true} onHide={() => {setDisplayDialog(false); setSelectedMedicalRecord(null)} }>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog4(true); setDisplayDialog(false); setSelectedMedicalRecord(null)}}>Visualizar prontuário</Button>\r\n                        </div>\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog1(true); setDisplayDialog(false); setSelectedMedicalRecord(null)}}>Atualizar prontuário</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-3\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog3(true); setDisplayDialog(false); setSelectedMedicalRecord(null)}}>Atualizar desfecho</Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog2(true); setDisplayDialog(false); setSelectedMedicalRecord(null)}}>Excluir prontuário</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-3\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); history.push(`/medicalRecords/assessment/create/?seqProntuario=${getSeqProntuario}`); setSelectedMedicalRecord(null)}}>Cadastrar avaliação</Button>\r\n                        </div>\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); history.push(`/medicalRecords/assessment/?seqProntuario=${getSeqProntuario}`); setSelectedMedicalRecord(null)}}>Visualizar avaliação</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog2} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                    <p className=\"h5 mx-2\">Deseja realmente excluir o prontuário {getNroProntuario} do paciente {getNomePaciente} do sistema?</p>\r\n                    <Button className=\"mx-2 mt-2 mb-2 mr-3 pr-3 pl-3\" variant=\"outline-danger\" onClick={() => {onClickDelete(); setDisplayDialog2(false)}}>Sim</Button>\r\n                    <Button className=\"mx-2 mt-2 mb-2 pr-3 pl-3\" variant=\"outline-success\"onClick={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>Não</Button>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog3} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.')}}>\r\n                    <div className=\"\">\r\n                        <p className=\"text-dark h3 text-center\">Atualização de Desfecho</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit1}>\r\n                            <DropdownReact/>\r\n                                <label htmlFor=\"Desfecho\" className=\"mt-4\">Desfecho</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDesfecho} options={options3} onChange={onDesfechoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                            <DropdownReact/>\r\n                            \r\n                            <label htmlFor=\"DataDesfecho\" className=\"mt-4\">Data do Desfecho</label>\r\n                            <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataDesfecho} \r\n                                    onChange={(e) => setDataDesfecho(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\" \r\n                                    placeholder=\"Selecione a data do desfecho\" showButtonBar monthNavigator yearNavigator\r\n                                    yearRange=\"1910:2021\" monthNavigatorTemplate={monthNavigatorTemplate} yearNavigatorTemplate={yearNavigatorTemplate} \r\n                                    showIcon showOnFocus={false} required touchUI/>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-4 mb-4\">Atualizar</button>\r\n                        </form>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog4} style={{width: '50%'}} modal={true} onHide={() => setDisplayDialog4(false)} maximizable>\r\n                    <p className=\"text-dark h3 text-center mr-5 mb-2\">Prontuário {getNroProntuario} do paciente {getNomePaciente}</p>\r\n                    <p className=\"text-dark h5 mt-5\">Origem: {getOrigem}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Alocação: {getAlocacao}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Data da Internação: {getDataTratadaInternacao}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Código de Doença Primário: {getCodDoencaPrincipal}</p>\r\n                    {getCodDoencaSecundario  &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Doença Secundário: {getCodDoencaSecundario}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Sistema Acometido: {getSistemaAcometido}</p>\r\n                    {getCodComorbidade &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Comorbidade: {getCodComorbidade}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Código de Medicamento Primário: {getCodAtbPrimario}</p>\r\n                    {getCodAtbSecundario &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Medicamento Secundário: {getCodAtbSecundario}</p>\r\n                    }\r\n                    {getSitioInfeccaoPrimario &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Sítio de Infecção Primário: {getSitioInfeccaoPrimario}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Origem da Infecção: {getOrigemInfeccao}</p>\r\n                    {getResultadoColeta &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Resultado Coleta: {getResultadoColetaString}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Tratamento CCIH: {getTratamentoCCIHString}</p>\r\n                    <p className=\"text-dark h5 text-left mt-3\">Indicação Sepse: {getIndicacaoSepseString}</p>\r\n                    <p className=\"text-dark h5 text-left mt-3\">Disfunção Renal: {getDisfuncaoRenalString}</p>\r\n                    {getDose &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Dose Correta: {getDoseCorretaString}</p>\r\n                    }\r\n                    {getPosologia &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Posologia Correta: {getPosologiaCorretaString}</p>\r\n                    }\r\n                    {getDataDesfecho &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Data do Desfecho: {getDataTratadaDesfecho}</p>\r\n                    }\r\n                    {getDesfecho != \"Sem desfecho\" &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Desfecho: {getDesfecho}</p>\r\n                    }\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog1} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog1(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}} maximizable>\r\n                    <div className=\"\">\r\n                    <p className=\"text-dark h3 text-center\">Atualização de Prontuário</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"NroProntuario\">Número do Prontuário</label>\r\n                                        <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroProntuario\" name=\"NroProntuario\"\r\n                                            defaultValue={getNroProntuario} onChange={(e) => setNroProntuario(Number((e.target as HTMLInputElement).value))}\r\n                                            placeholder=\"Digite o número do prontuário\" min=\"1\" max=\"999999999\" readOnly required autoFocus/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"SeqPaciente\">Sequência do Paciente</label>\r\n                                        <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"SeqPaciente\" name=\"SeqPaciente\"\r\n                                        defaultValue={getSeqPaciente} onChange={(e) => setSeqPaciente(Number((e.target as HTMLInputElement).value))}\r\n                                        placeholder=\"Digite o número do paciente\" min=\"1\" max=\"999999999\" required/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"Origem\">Origem</label>\r\n                                        <InputText style={{width: '100%'}} id=\"Origem\" name=\"Origem\"\r\n                                            defaultValue={getOrigem} onChange={(e) => setOrigem((e.target as HTMLInputElement).value)}\r\n                                            placeholder=\"Digite a origem\" required/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"Alocacao\">Alocação</label>\r\n                                        <InputText style={{width: '100%'}} id=\"Alocacao\" name=\"Alocacao\"\r\n                                            defaultValue={getAlocacao} onChange={(e) => setAlocacao((e.target as HTMLInputElement).value)}\r\n                                            placeholder=\"Digite a alocação\" required/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <label htmlFor=\"DataInternacao\" className=\"mt-4\">Data da Internação</label>\r\n                                <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataInternacao} \r\n                                    onChange={(e) => setDataInternacao(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\" \r\n                                    placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator yearNavigator\r\n                                    yearRange=\"1910:2021\" monthNavigatorTemplate={monthNavigatorTemplate} yearNavigatorTemplate={yearNavigatorTemplate}\r\n                                    touchUI showIcon showOnFocus={false} required/>\r\n                                \r\n                                <label htmlFor=\"CodDoencaPrincipal\" className=\"mt-4\">Código de Doença Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodDoencaPrincipal\" name=\"CodDoencaPrincipal\"\r\n                                    defaultValue={getCodDoencaPrincipal} onChange={(e) => setCodDoencaPrincipal((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o código de doença primário\" required/>\r\n                                \r\n                                <label htmlFor=\"CodDoencaSecundario\" className=\"mt-4\">Código de Doença Secundário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodDoencaSecundario\" name=\"CodDoencaSecundario\"\r\n                                    defaultValue={getCodDoencaSecundario} onChange={(e) => {checkInput(1, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de doença secundário\" />\r\n                                \r\n                                <label htmlFor=\"SistemaAcometido\" className=\"mt-4\">Sistema Acometido</label>\r\n                                <InputText style={{width: '100%'}} id=\"SistemaAcometido\" name=\"SistemaAcometido\"\r\n                                    defaultValue={getSistemaAcometido} onChange={(e) => setSistemaAcometido((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o sistema acometido\" required/>\r\n                                \r\n                                <label htmlFor=\"CodComorbidade\" className=\"mt-4\">Código de Comorbidade</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodComorbidade\" name=\"CodComorbidade\"\r\n                                    defaultValue={getCodComorbidade} onChange={(e) => {checkInput(2, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de comorbidade\" />\r\n                                \r\n                                <label htmlFor=\"CodAtbPrimario\" className=\"mt-4\">Código de Medicamento Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodAtbPrimario\" name=\"CodAtbPrimario\"\r\n                                    defaultValue={getCodAtbPrimario} onChange={(e) => setCodAtbPrimario((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o código de medicamento primário\" required/>\r\n\r\n                                <label htmlFor=\"CodAtbSecundario\" className=\"mt-4\">Código de Medicamento Secundário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodAtbSecundario\" name=\"CodAtbSecundario\"\r\n                                    defaultValue={getCodAtbSecundario} onChange={(e) => {checkInput(3, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de medicamento secundário\" />\r\n\r\n                                <label htmlFor=\"SitioInfeccaoPrimario\" className=\"mt-4\">Sítio de Infecção Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"SitioInfeccaoPrimario\" name=\"SitioInfeccaoPrimario\"\r\n                                    defaultValue={getSitioInfeccaoPrimario} onChange={(e) => {checkInput(4, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o sítio de infecção primário\" />\r\n\r\n                                <label htmlFor=\"OrigemInfeccao\" className=\"mt-4\">Origem da Infecção</label>\r\n                                <InputText style={{width: '100%'}} id=\"OrigemInfeccao\" name=\"OrigemInfeccao\"\r\n                                    defaultValue={getOrigemInfeccao} onChange={(e) => setOrigemInfeccao((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a origem da infecção\" required/>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"ResultadoColeta\">Resultado Coleta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getResultadoColeta} options={options} onChange={onResultadoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"TratamentoCCIH\">Tratamento CCIH</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getTratamento} options={options} onChange={onTratamentoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"IndicacaoSepse\">Indicação Sepse</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getIndicacao} options={options} onChange={onIndicacaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"DisfuncaoRenal\">Disfunção Renal</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getDisfuncao} options={options} onChange={onDisfuncaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getDose} options={options} onChange={onDoseChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getPosologia} options={options} onChange={onPosologiaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Atualizar</button>\r\n                        </form>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MedicalRecords;","import api from '../../services/api';\r\n\r\nclass MedicalRecordsService {\r\n    async getMedicalRecordsPaginate(endIndex: Number) {\r\n        return await api.get(`medicalRecords/paginate/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchMedicalRecordsGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'Pro') {\r\n            return await api.get(`medicalRecords/nroProntuario/?nroProntuario=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Pac') {\r\n            return await api.get(`medicalRecords/seqPaciente/?seqPaciente=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Int') {\r\n            return await api.get(`medicalRecords/dataInternacao/?dataInternacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async Update(getNroProntuario: any, getSeqPaciente: any, getDataInternacao: string, getCodDoencaPrincipal: string,\r\n        getCodDoencaSecundario: any, getSistemaAcometido: string, getCodComorbidade: any, getOrigem: string, getAlocacao: string,\r\n        getResultadoColeta: any, getCodAtbPrimario: string, getCodAtbSecundario: any, getSitioInfeccaoPrimario: any,\r\n        getTratamento: string, getIndicacao: string, getDisfuncao: string, getOrigemInfeccao: string, \r\n        getDose: any, getPosologia: any, email:any) {\r\n            return await api.put('medicalRecords/update', {\r\n            NroProntuario: getNroProntuario, SeqPaciente: getSeqPaciente, DataInternacao: getDataInternacao,\r\n            CodDoencaPrincipal: getCodDoencaPrincipal, CodDoencaSecundario: getCodDoencaSecundario,\r\n            SistemaAcometido: getSistemaAcometido, CodComorbidade: getCodComorbidade, Origem: getOrigem, \r\n            Alocacao: getAlocacao, ResultadoColeta: getResultadoColeta, CodAtbPrimario: getCodAtbPrimario,\r\n            CodAtbSecundario: getCodAtbSecundario, SitioInfeccaoPrimario: getSitioInfeccaoPrimario, \r\n            TratamentoCCIH: getTratamento, IndicacaoSepse: getIndicacao, DisfuncaoRenal: getDisfuncao, \r\n            OrigemInfeccao: getOrigemInfeccao, DoseCorreta: getDose, PosologiaCorreta: getPosologia, email: email\r\n        }).then(response => response.data);\r\n    }\r\n\r\n    async Delete(getNroProntuario: any, email:any) {\r\n        return await api.post('medicalRecords/delete', { NroProntuario: getNroProntuario, email: email })\r\n            .then(response => response.data);\r\n    }\r\n\r\n    async Desfecho(getNroProntuario: any, getDesfecho: any, getDataDesfecho: string, email:any) {\r\n        return await api.put('medicalRecords/desfecho', { NroProntuario: getNroProntuario, \r\n            Desfecho: getDesfecho, DataDesfecho: getDataDesfecho, email: email\r\n        }).then(response => response.data);\r\n    }\r\n\r\n}\r\n\r\nexport { MedicalRecordsService };","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport { Link, useLocation, useHistory} from 'react-router-dom';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { addLocale } from 'primereact/api';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport {AssessmentService} from './AssessmentService';\r\nimport Loading from '../../../components/Loading';\r\nimport './Assessment.css'\r\n\r\nconst Assessment = () => {\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const queryResponse = query.get(\"seqProntuario\") || \"\"\r\n\r\n    const [getNroAvaliacao, setNroAvaliacao] = useState<any>(null)\r\n    const [getDataAvaliacao, setDataAvaliacao] = useState<any>(null)\r\n    const [getResultadoCulturas, setResultadoCulturas] = useState<any>(null)\r\n    const [getResCulturasAcao, setResCulturasAcao] = useState<any>(null)\r\n    const [getDoseCorreta, setDoseCorreta] = useState<any>(null)\r\n    const [getDoseCorretaString, setDoseCorretaString] = useState<any>(null)\r\n    const [getPosologiaCorreta, setPosologiaCorreta] = useState<any>(null)\r\n    const [getPosologiaCorretaString, setPosologiaCorretaString] = useState<any>(null)\r\n    const [getAlertaDot, setAlertaDot] = useState<any>(null)\r\n    const [getAlertaDotString, setAlertaDotString] = useState<any>(null)\r\n    const [getAlertaDotDescricao, setAlertaDotDescricao] = useState<any>(null)\r\n    const [getDisfuncaoRenal, setDisfuncaoRenal] = useState<string>('')\r\n    const [getAtbContraindicacao, setAtbContraindicacao] = useState<any>(null)\r\n    const [getAlteracaoPrescricao, setAlteracaoPrescricao] = useState<any>(null)\r\n    const [getAlteracaoPrescricaoString, setAlteracaoPrescricaoString] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusao, setAtbDiluicaoInfusao] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusaoString, setAtbDiluicaoInfusaoString] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamento, setInteracaoAtbMedicamento] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamentoString, setInteracaoAtbMedicamentoString] = useState<any>(null)\r\n    const [getHemodialise, setHemodialise] = useState<any>(null)\r\n    const [getHemodialiseString, setHemodialiseString] = useState<any>(null)\r\n    const [getAtbOral, setAtbOral] = useState<any>(null)\r\n    const [getTrocaAtb, setTrocaAtb] = useState<any>(null)\r\n    const [getNovoAtb, setNovoAtb] = useState<any>(null)\r\n    const [getNomePaciente, setNomePaciente] = useState<string>('')\r\n    const [getDataAvaliacaoTratada, setDataAvaliacaoTratada] = useState<string>('')\r\n\r\n    const [assessment, setAssessment] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalAssessment, setTotalAssessment] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [selectedAssessment, setSelectedAssessment] = useState<any>(null);\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getAssessmentChange, setAssessmentChange] = useState();\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const assessmentService = new AssessmentService()\r\n    var assessmentData:any = {};\r\n\r\n    const history = useHistory()\r\n    \r\n    const rows = 10;\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        assessmentService.Verify(queryResponse).then(response => {\r\n            if(response.verifyMR){\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(response.error))\r\n                setTimeout(() => {\r\n                    history.push('/medicalRecords')\r\n                }, 2500)\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                getAssessmentFunction(data)\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    function getAssessmentFunction(data?: any){\r\n        setLoading(true);\r\n        if(!data){\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                if(data.showAssessments){\r\n                    setDatasource(data.assessments);\r\n                    setTotalAssessment(data.length);\r\n                    data = data.assessments;\r\n                    \r\n                    setAssessment(data.slice(0, rows));\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                    return \r\n                }else{\r\n                    showToast('error', 'Erro!', String(data.error));\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                }\r\n            })\r\n        }else{\r\n            if(data.showAssessments){\r\n                setDatasource(data.assessments);\r\n                setTotalAssessment(data.length);\r\n                data = data.assessments;\r\n                \r\n                setAssessment(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(data.error));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        \r\n        const startIndex = event.first;\r\n        const endIndex = event.first + rows;\r\n        assessmentService.getAssessmentPaginate(queryResponse, endIndex).then(data => {\r\n            getAssessmentFunction(data);\r\n        });\r\n        setFirst(startIndex);\r\n        setAssessment(datasource.slice(startIndex, endIndex));\r\n        setLoading(false);\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Avaliações</p>\r\n        </>;\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                getAssessmentFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        assessmentService.searchAssessmentGlobal(queryResponse, searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.showAssessments){\r\n                setLoading(false);\r\n                setAssessment([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getAssessmentFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nro Avaliação'){\r\n                searchType = 'NroAvaliacao';\r\n            }else if(getOptionState.name === 'Data Avaliação'){\r\n                searchType = 'DataAvaliacao';\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    function checkInput(type: number, e: any){\r\n        if(type == 1){\r\n            if(e === ''){\r\n                setResultadoCulturas(null);\r\n            }else{\r\n                setResultadoCulturas(e)\r\n            }\r\n        }\r\n        if(type == 2){\r\n            if(e === ''){\r\n                setResCulturasAcao(null);\r\n            }else{\r\n                setResCulturasAcao(e)\r\n            }\r\n        }\r\n        if(type == 3){\r\n            if(e === ''){\r\n                setAlertaDotDescricao(null);\r\n            }else{\r\n                setAlertaDotDescricao(e)\r\n            }\r\n        }\r\n        if(type == 4){\r\n            if(e === ''){\r\n                setNovoAtb(null);\r\n            }else{\r\n                setNovoAtb(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDoseCorretaChange = (e: { value: string }) => {\r\n        setDoseCorreta(e.value);\r\n    };\r\n\r\n    const onPosologiaCorretaChange = (e: { value: string }) => {\r\n        setPosologiaCorreta(e.value);\r\n    };\r\n\r\n    const onAlertaDotChange = (e: { value: string }) => {\r\n        setAlertaDot(e.value);\r\n    };\r\n\r\n    const onAlteracaoPrescricaoChange = (e: { value: string }) => {\r\n        setAlteracaoPrescricao(e.value);\r\n    };\r\n\r\n    const onAtbContraindicacaoChange = (e: { value: string }) => {\r\n        setAtbContraindicacao(e.value);\r\n    };\r\n\r\n    const onAtbDiluicaoInfusaoChange = (e: { value: string }) => {\r\n        setAtbDiluicaoInfusao(e.value);\r\n    };\r\n\r\n    const onInteracaoAtbMedicamentoChange = (e: { value: string }) => {\r\n        setInteracaoAtbMedicamento(e.value);\r\n    };\r\n\r\n    const onHemodialiseChange = (e: { value: string }) => {\r\n        setHemodialise(e.value);\r\n    };\r\n\r\n    const onAtbOralChange = (e: { value: string }) => {\r\n        setAtbOral(e.value);\r\n    };\r\n\r\n    const onTrocaAtbChange = (e: { value: string }) => {\r\n        setTrocaAtb(e.value);\r\n    };\r\n\r\n    let options = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Não', value: 'N'}\r\n    ]\r\n\r\n    let options2 = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Sim intermitente', value: 'SI'},\r\n        {label: 'Não', value: 'N'}\r\n    ]\r\n\r\n    let options3 = [\r\n        {label: 'Sim', value: 'Sim'},\r\n        {label: 'Não aplica', value: 'Não aplica'},\r\n        {label: 'Não', value: 'Não'}\r\n    ]\r\n\r\n    let options4 = [\r\n        {name: 'Nro Avaliação', cod: 'Nro'},\r\n        {name: 'Data Avaliação', cod: 'Dat'}\r\n    ]\r\n\r\n    let options5 = [\r\n        {label: 'Sim', value: 'Sim'},\r\n        {label: 'Não', value: 'Não'}\r\n    ]\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n\r\n    const monthNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const yearNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n            getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n            getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n            getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroAvaliacao: Yup.number().required(),\r\n                getDataAvaliacao: Yup.date().required(),\r\n                getResultadoCulturas: Yup.string().nullable(),\r\n                getResCulturasAcao: Yup.string().nullable(),\r\n                getDoseCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologiaCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDot: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDotDescricao: Yup.string().nullable(),\r\n                getDisfuncaoRenal: Yup.string().required(),\r\n                getHemodialise: Yup.string().oneOf([\"S\", \"SI\", \"N\"]).required(),\r\n                getAtbOral: Yup.string().oneOf([\"Sim\", \"Não aplica\", \"Não\"]).required(),\r\n                getAtbContraindicacao: Yup.string().oneOf([\"Sim\", \"Não\"]).required(),\r\n                getAlteracaoPrescricao: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAtbDiluicaoInfusao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getInteracaoAtbMedicamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getTrocaAtb: Yup.string().oneOf([\"Sim\", \"Não\"]).required(),\r\n                getNovoAtb: Yup.string().nullable()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            assessmentService.Update(queryResponse, getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n                getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n                getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao, \r\n                getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb)\r\n            .then((response) => {\r\n                if(response.updatedAssessment){\r\n                    showToast('success', 'Sucesso!', `Avaliação atualizada com sucesso!`);\r\n                    getAssessmentFunction()\r\n                    setDisplayDialog2(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        if(response.error.sqlState == 23000){\r\n                            if(String(response.error.sqlMessage).includes(\"(`NovoAtb`)\")){\r\n                                showToast('error', 'Erro!', `O campo Novo Atb está incorreto`);\r\n                            }else{\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        }else{\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function onClickDelete(){\r\n        assessmentService.Delete(getNroAvaliacao)\r\n        .then((response) => {\r\n            if(response.deletedAssessment){\r\n                showToast('success', 'Sucesso!', `Avaliação deletada com sucesso!`);\r\n                getAssessmentFunction()\r\n                setTimeout(() => {\r\n                    setDisplayDialog3(false)\r\n                }, 2500)\r\n            }else{\r\n                if(response.error.sqlMessage){\r\n                    showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.error));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    let newAssessment = true\r\n    function onAssessmentSelect (e: any) {\r\n        newAssessment = false;\r\n        setAssessmentChange(e.value);\r\n        assessmentData = e.data;\r\n\r\n        setNroAvaliacao(assessmentData.NroAvaliacao)\r\n        var res = assessmentData.DataAvaliacao.split(\"/\")\r\n        var newData = new Date(res[2], res[1]-1, res[0]);\r\n        setDataAvaliacaoTratada(assessmentData.DataAvaliacao)\r\n        setDataAvaliacao(newData)\r\n        setResultadoCulturas(assessmentData.ResultadoCulturas)\r\n        setResCulturasAcao(assessmentData.ResCulturasAcao)\r\n        tratarDados(\"DoseCorreta\")\r\n        setDoseCorreta(assessmentData.DoseCorreta)\r\n        tratarDados(\"PosologiaCorreta\")\r\n        setPosologiaCorreta(assessmentData.PosologiaCorreta)\r\n        tratarDados(\"AlertaDot\")\r\n        setAlertaDot(assessmentData.AlertaDot)\r\n        setAlertaDotDescricao(assessmentData.AlertaDotDescricao)\r\n        setDisfuncaoRenal(assessmentData.DisfuncaoRenal)\r\n        setAtbContraindicacao(assessmentData.AtbContraindicacao)\r\n        tratarDados(\"AlteracaoPrescricao\")\r\n        setAlteracaoPrescricao(assessmentData.AlteracaoPrescricao)\r\n        tratarDados(\"AtbDiluicaoInfusao\")\r\n        setAtbDiluicaoInfusao(assessmentData.AtbDiluicaoInfusao)\r\n        tratarDados(\"InteracaoAtbMedicamento\")\r\n        setInteracaoAtbMedicamento(assessmentData.InteracaoAtbMedicamento)\r\n        tratarDados(\"Hemodialise\")\r\n        setHemodialise(assessmentData.Hemodialise)\r\n        setAtbOral(assessmentData.AtbOral)\r\n        setTrocaAtb(assessmentData.TrocaAtb)\r\n        setNovoAtb(assessmentData.NovoAtb)\r\n        setNomePaciente(assessmentData.NomePaciente)\r\n        \r\n        setDisplayDialog(true)\r\n    };\r\n\r\n    function tratarDados (e: string) {\r\n        if(eval(\"assessmentData.\" + e) == \"S\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"SI\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim intermitente\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"N\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"NA\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não aplica\"' + \")\")\r\n    }\r\n\r\n    const NroAvaliacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nro Avaliação</span>\r\n                <a>{rowData.NroAvaliacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataAvaliacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Data Avaliação</span>\r\n                <a>{rowData.DataAvaliacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AtbOralBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.AtbOral;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Não aplica')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Antibiótico Oral</span>\r\n                <a style={{color: fontColor}}>{rowData.AtbOral}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AtbContraindicacaoBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.AtbContraindicacao;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Antibiótico Contraindicação</span>\r\n                <a style={{color: fontColor}}>{rowData.AtbContraindicacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const TrocaAtbBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.TrocaAtb;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Troca antibiótico</span>\r\n                <a style={{color: fontColor}}>{rowData.TrocaAtb}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5 px-5\">\r\n            <Link to={location => ({...location, pathname: '/medicalRecords/assessment/create/'})}><Button variant=\"outline-dark\" className=\"mb-2\" style={{borderRadius: '0', height:'41.5px'}}>Cadastrar Avaliação</Button></Link>\r\n            <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar avaliação específica</Button>\r\n            <Collapse in={open} timeout={200}>\r\n                <div className=\"ml-2\">\r\n                    <div className=\"p-inputgroup\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                            {getOptionState === null\r\n                                ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                            }\r\n                        </span>\r\n                        {searchInput === ''\r\n                            ? <></>\r\n                            :\r\n                                <>\r\n                                    <Dropdown className=\"mx-1\" value={getOptionState} options={options4} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                    <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getAssessmentFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                    <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n            <div className=\"ml-auto\"></div>\r\n            \r\n            <div className=\"datatable-responsive-demo\">\r\n                <DataTable value={assessment} paginator={true} rows={rows} header={header} totalRecords={totalAssessment}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                    onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedAssessment} onSelectionChange={e => setSelectedAssessment(e.value)}\r\n                    onRowSelect={(e) => {onAssessmentSelect(e);}}>\r\n                    <Column field=\"NroAvaliacao\" header=\"Nro Avaliação\" body={NroAvaliacaoBodyTemplate}/>\r\n                    <Column field=\"DataAvaliacao\" header=\"Data Avaliação\" body={DataAvaliacaoBodyTemplate}/>\r\n                    <Column field=\"AtbOral\" header=\"Antibiótico Oral\" body={AtbOralBodyTemplate}/>\r\n                    <Column field=\"AtbContraindicacao\" header=\"Antibiótico Contraindicação\" body={AtbContraindicacaoBodyTemplate}/>\r\n                    <Column field=\"TrocaAtb\" header=\"Troca antibiótico\" body={TrocaAtbBodyTemplate}/>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '50%'}} header=\"Ações\" modal={true} onHide={() => {setDisplayDialog(false); setSelectedAssessment(null)}}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog1(true); setSelectedAssessment(null)}}>Visualizar avaliação</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog2(true); setSelectedAssessment(null)}}>Atualizar avaliação</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog3(true); setSelectedAssessment(null)}}>Excluir avaliação</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog3} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                <p className=\"h5 mx-2\">Deseja realmente excluir a avaliação {getNroAvaliacao} do paciente {getNomePaciente} do sistema?</p>\r\n                <Button className=\"mx-2 mt-2 mb-2 mr-3 pr-3 pl-3\" variant=\"outline-danger\" onClick={() => {onClickDelete(); setDisplayDialog3(false)}}>Sim</Button>\r\n                <Button className=\"mx-2 mt-2 mb-2 pr-3 pl-3\" variant=\"outline-success\"onClick={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>Não</Button>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog1} style={{width: '50%'}} modal={true} maximizable onHide={() => {setDisplayDialog1(false);}}>\r\n                <p className=\"text-dark h3 text-center mr-5 mb-2\">Avaliação {getNroAvaliacao} do paciente {getNomePaciente}</p>\r\n                <p className=\"text-dark h5 mt-5\">Data da Avaliação: {getDataAvaliacaoTratada}</p>\r\n                {getResultadoCulturas &&\r\n                    <p className=\"text-dark h5 mt-3\">Resultado das Culturas: {getResultadoCulturas}</p>\r\n                }\r\n                {getResCulturasAcao &&\r\n                    <p className=\"text-dark h5 mt-3\">Ação do Resultado das Culturas: {getResCulturasAcao}</p>\r\n                }\r\n                {getDoseCorreta &&\r\n                    <p className=\"text-dark h5 mt-3\">Dose Correta: {getDoseCorretaString}</p>\r\n                }\r\n                {getPosologiaCorreta &&\r\n                    <p className=\"text-dark h5 mt-3\">Posologia Correta: {getPosologiaCorretaString}</p>\r\n                }\r\n                {getAlertaDot &&\r\n                    <p className=\"text-dark h5 mt-3\">Alerta Dot: {getAlertaDotString}</p>\r\n                }\r\n                {getAlertaDotDescricao &&\r\n                    <p className=\"text-dark h5 mt-3\">Descrição do Alerta Dot: {getAlertaDotDescricao}</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-3\">Disfuncao Renal: {getDisfuncaoRenal}</p>\r\n                <p className=\"text-dark h5 mt-3\">Contraindicação de Atb: {getAtbContraindicacao}</p>\r\n                {getAlteracaoPrescricao &&\r\n                    <p className=\"text-dark h5 mt-3\">Alteração da Prescrição: {getAlteracaoPrescricaoString}</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-3\">Diluição e/ou Infusão de Atb: {getAtbDiluicaoInfusaoString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Interação Atb e Medicamento: {getInteracaoAtbMedicamentoString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Hemodialise: {getHemodialiseString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Atb Oral: {getAtbOral}</p>\r\n                <p className=\"text-dark h5 mt-3\">Troca do Atb: {getTrocaAtb}</p>\r\n                {getNovoAtb &&\r\n                    <p className=\"text-dark h5 mt-3\">Novo Atb: {getNovoAtb}</p>\r\n                }\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{width: '50%'}} header=\"\" modal={true} maximizable onHide={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                <div className=\"\">\r\n                    <p className=\"text-dark h3 text-center\">Atualização de Avaliação</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <label htmlFor=\"NroAvaliacao\">Número da Avaliação</label>\r\n                                    <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroAvaliacao\" name=\"NroAvaliacao\"\r\n                                        defaultValue={getNroAvaliacao} onChange={(e) => setNroAvaliacao(Number((e.target as HTMLInputElement).value))}\r\n                                        placeholder=\"Digite o número da avaliação\" min=\"1\" max=\"999999999\" required autoFocus readOnly/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"DataAvaliacao\" className=\"mt\">Data da Avaliação</label>\r\n                                    <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataAvaliacao} \r\n                                        onChange={(e) => setDataAvaliacao(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\" \r\n                                        placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator yearNavigator yearRange=\"1910:2021\" monthNavigatorTemplate={monthNavigatorTemplate} yearNavigatorTemplate={yearNavigatorTemplate}\r\n                                        showIcon showOnFocus={false} touchUI required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"ResultadoCulturas\" className=\"mt-4\">Resultado das Culturas</label>\r\n                            <InputText style={{width: '100%'}} id=\"ResultadoCulturas\" name=\"ResultadoCulturas\"\r\n                                defaultValue={getResultadoCulturas} onChange={(e) => {checkInput(1, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite o resultado das culturas\"/>\r\n                            \r\n                            <label htmlFor=\"ResCulturasAcao\" className=\"mt-4\">Ação do Resultado das Culturas</label>\r\n                            <InputText style={{width: '100%'}} id=\"ResCulturasAcao\" name=\"ResCulturasAcao\"\r\n                                defaultValue={getResCulturasAcao} onChange={(e) => {checkInput(2, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite a ação do resultado das culturas\"/>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getDoseCorreta} options={options} \r\n                                        onChange={onDoseCorretaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getPosologiaCorreta} options={options} \r\n                                        onChange={onPosologiaCorretaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AlertaDot\">Alerta Dot</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAlertaDot} options={options} \r\n                                        onChange={onAlertaDotChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"AlertaDotDescricao\" className=\"mt-4\">Descrição do Alerta Dot</label>\r\n                            <InputText style={{width: '100%'}} id=\"AlertaDotDescricao\" name=\"AlertaDotDescricao\"\r\n                                defaultValue={getAlertaDotDescricao} onChange={(e) => {checkInput(3, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite a descrição do alerta dot\"/>\r\n\r\n                            <label htmlFor=\"DisfuncaoRenal\" className=\"mt-4\">Disfuncao Renal</label>\r\n                            <InputText style={{width: '100%'}} id=\"DisfuncaoRenal\" name=\"DisfuncaoRenal\"\r\n                                defaultValue={getDisfuncaoRenal} onChange={(e) => setDisfuncaoRenal((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite a disfunção renal\" required/>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbContraindicacao\">Contraindicação de Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbContraindicacao} options={options5} \r\n                                        onChange={onAtbContraindicacaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AlteracaoPrescricao\">Alteração da Prescrição</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAlteracaoPrescricao} options={options} \r\n                                        onChange={onAlteracaoPrescricaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbDiluicaoInfusao\">Diluição e/ou Infusão de Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbDiluicaoInfusao} options={options} \r\n                                        onChange={onAtbDiluicaoInfusaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"InteracaoAtbMedicamento\">Interação Atb e Medicamento</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getInteracaoAtbMedicamento} options={options} \r\n                                        onChange={onInteracaoAtbMedicamentoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"Hemodialise\">Hemodialise</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getHemodialise} options={options2} \r\n                                        onChange={onHemodialiseChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbOral\">Atb Oral</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbOral} options={options3} \r\n                                        onChange={onAtbOralChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"TrocaAtb\">Troca do Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getTrocaAtb} options={options5} \r\n                                        onChange={onTrocaAtbChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"NovoAtb\" className=\"mt-4\">Novo Atb</label>\r\n                            <InputText style={{width: '100%'}} id=\"NovoAtb\" name=\"NovoAtb\"\r\n                                defaultValue={getNovoAtb} onChange={(e) => {checkInput(4, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite o novo Atb\"/>\r\n\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Atualizar</button>\r\n                    </form>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assessment;","import api from '../../../services/api';\r\n\r\nclass AssessmentService {\r\n    async getAssessmentPaginate(queryResponse: any, endIndex: Number) {\r\n        return await api.get(`/medicalRecords/assessment/paginate/?seqProntuario=${queryResponse}&page=${endIndex}`).then(response => { return response.data });\r\n    }\r\n\r\n    async searchAssessmentGlobal(queryResponse: any, searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'Nro') {\r\n            return await api.get(`/medicalRecords/assessment/nroAvaliacao/?seqProntuario=${queryResponse}&nroAvaliacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Dat') {\r\n            return await api.get(`/medicalRecords/assessment/dataAvaliacao/?seqProntuario=${queryResponse}&dataAvaliacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async Update(queryResponse: any, getNroAvaliacao: any, getDataAvaliacao: string, getResultadoCulturas: any, getResCulturasAcao: any,\r\n        getDoseCorreta: any, getPosologiaCorreta: any, getAlertaDot: any, getAlertaDotDescricao: any, getDisfuncaoRenal: string, getHemodialise: string,\r\n        getAtbOral: string, getAtbContraindicacao: string, getAlteracaoPrescricao: any, getAtbDiluicaoInfusao: string, getInteracaoAtbMedicamento: string,\r\n        getTrocaAtb: string, getNovoAtb: any) {\r\n            return await api.put('medicalRecords/assessment/update', {\r\n            IdProntuario: queryResponse, NroAvaliacao: getNroAvaliacao, DataAvaliacao: getDataAvaliacao,\r\n            ResultadoCulturas: getResultadoCulturas, ResCulturasAcao: getResCulturasAcao, DoseCorreta: getDoseCorreta, \r\n            PosologiaCorreta: getPosologiaCorreta, AlertaDot: getAlertaDot, AlertaDotDescricao: getAlertaDotDescricao, \r\n            DisfuncaoRenal: getDisfuncaoRenal, Hemodialise: getHemodialise, AtbOral: getAtbOral, \r\n            AtbContraindicacao: getAtbContraindicacao, AlteracaoPrescricao: getAlteracaoPrescricao, \r\n            AtbDiluicaoInfusao: getAtbDiluicaoInfusao, InteracaoAtbMedicamento: getInteracaoAtbMedicamento, \r\n            TrocaAtb: getTrocaAtb, NovoAtb: getNovoAtb\r\n        }).then(response => response.data)\r\n    }\r\n\r\n    async Delete(getNroAvaliacao: any) {\r\n        return await api.post('medicalRecords/assessment/delete', { \r\n            NroAvaliacao: getNroAvaliacao\r\n        }).then(response => response.data);\r\n    }\r\n\r\n    async Verify(queryResponse: any){\r\n        return await api.post('/medicalRecords/assessment/verify/', { \r\n            seqProntuario: queryResponse\r\n        }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { AssessmentService }","import React from 'react';\r\n\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <div className=\"loading\">\r\n            <ProgressSpinner style={{ width: '100px', height: '100px' }} strokeWidth=\"8\" animationDuration=\"1s\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RiLoginBoxLine } from 'react-icons/ri';\r\nimport { IoIosCreate } from 'react-icons/io';\r\n\r\nconst Root = () => {\r\n    return (\r\n        // <div className=\"card-columns m-5 p-3\">\r\n        <div className=\"card mt-5 mx-auto col-sm-10 text-center text-decoration-none\">\r\n            <h2>Root Page</h2>\r\n            <Link to=\"/login\">\r\n                <RiLoginBoxLine className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} />\r\n                <p className=\"h6\">Login</p>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n                <IoIosCreate className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} />\r\n                <p className=\"h6\">Sign Up</p>\r\n            </Link>\r\n        </div>\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Root;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RiComputerLine, RiBarChart2Line, RiPagesLine } from \"react-icons/ri\";\r\nimport { FaMicroscope, FaHospital, FaHistory } from 'react-icons/fa';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Home';\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-5 p-3 card-columns\">\r\n                <Link className=\"text-decoration-none\" to=\"/medicalRecords\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiPagesLine\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>PRONTUÁRIOS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/registrations\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiComputerLine\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>CADASTROS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/dashboard\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiBarChart2Line\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>DASHBOARD</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"m-5 p-3 card-columns justify-content-center\">\r\n                <Link className=\"text-decoration-none\" to=\"/microbiology\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaMicroscope\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>MICROBIOLOGIA</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/recomendations\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaHospital\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>RECOMENDAÇÕES CCIH</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/history\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaHistory\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>HISTÓRICO</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/fiocruzFrente.682d80be.jpeg\";","export default __webpack_public_path__ + \"static/media/fiocruzCastelo.c1e624d1.jpg\";","export default __webpack_public_path__ + \"static/media/fiocruzBanner.4f2faa7a.jpg\";","import React, {useState, ChangeEvent, FormEvent, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nimport './login.css';\r\n\r\nimport { InputText } from 'primereact/inputtext';\r\nimport loginFiocruzCustomImage from '../../assets/fiocruzFrente.jpeg';\r\nimport loginFiocruzCasteloImage from '../../assets/fiocruzCastelo.jpg';\r\nimport loginBanner from '../../assets/fiocruzBanner.jpg';\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\n// const secretWord = 'PalavraSecreta';\r\n\r\ndeclare module \"jsonwebtoken\"{\r\n    export function decode(\r\n        token: string\r\n    ): {Email: string, Nome: string, TipoUsuario: string, CodUsuario: string};\r\n}\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n\r\n    const [, setCookies] = useCookies([]);\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [getEmail, setEmail] = useState<string>('');\r\n    const [getPassword, setPassword] = useState<string>('');\r\n\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex: any, e: any) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n     \r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        // const token = jwt.sign({email: email, senha: senha}, secretWord);\r\n        localStorage.setItem('@gafio-user/email', getEmail);\r\n        try{\r\n            await api.post('session/login', {email: getEmail, senha: getPassword})\r\n            .then(function(response){\r\n                if(response.data.userLogin){\r\n                    const tokenLoginResponse = jwt.decode(response.data.userToken);\r\n                    var Email = tokenLoginResponse.Email;\r\n                    let Nome = tokenLoginResponse.Nome;\r\n                    let TipoUsuario = tokenLoginResponse.TipoUsuario;\r\n                    let CodUsuario = tokenLoginResponse.CodUsuario;\r\n                    setCookiesLogin(Email, Nome, TipoUsuario, CodUsuario);\r\n                }else{\r\n                    showToast('error', 'Erro!', response.data.error);\r\n                }\r\n            })\r\n        }catch(err) {\r\n            if(err.message === \"Network Error\"){\r\n                showToast('error', 'Erro!', 'Não foi possível conectar ao servidor.')\r\n            }\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    async function setCookiesLogin(email: string, nome: string, tipoUsuario: string, codUsuario: string){\r\n        let nomeArray = nome.split(' ');\r\n        nome = nomeArray[0];\r\n        // await api.post(`notifications/length/${codUsuario}`, {TipoUsuario: tipoUsuario}).then(response => {\r\n        //     console.log(response)\r\n        //     if(response.data.notificationFound){\r\n        //         setCookies('notificationLength', {length: response.data.length})\r\n        //     }\r\n        // })\r\n        setCookies('userData', {Email: email, Nome: nome, TipoUsuario: tipoUsuario, CodUsuario: codUsuario});\r\n        history.push('/home');\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Login';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row m-5\"> \r\n                    {/* <img className=\"rounded col-sm-7 \" src={loginBanner} alt=\"Banner\"/> */}\r\n                    {/* <img className=\"rounded col-sm-7 \" src={loginFiocruzCustomImage} alt=\"Banner\"/> */}\r\n                <Carousel className=\"rounded col-sm-7 d-none d-md-block\" activeIndex={index} onSelect={handleSelect}>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginFiocruzCustomImage} alt=\"First slide\" />\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginFiocruzCasteloImage} alt=\"Second slide\" />\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginBanner} alt=\"Third slide\" />\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                <div className=\"card col-md-5 p-5 bg-light shadow-lg float-right text-center\">\r\n                    <form className=\"was-validated pb-2\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <InputText type=\"email\" style={{width: '100%'}} id=\"email\" name=\"email\" onChange={(e) => setEmail((e.target as HTMLInputElement).value)} placeholder=\"Digite seu email\" required autoFocus autoComplete=\"off\"/>\r\n                        \r\n                        <div className=\"valid-feedback text-left\">Válido.</div>\r\n                        <div className=\"invalid-feedback text-left\">Preencha este campo.</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"password\" name=\"senha\" onChange={(e) => setPassword((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Digite sua senha\" required/>\r\n                        \r\n                        <div className=\"valid-feedback text-left\">Válido.</div>\r\n                        <div className=\"invalid-feedback text-left\">Preencha este campo.</div>\r\n                    </div>\r\n                    {\r\n                        getEmail.length < 8 || getPassword.length < 8\r\n                        ? <button type=\"submit\" className=\"btn btn-info btn-primary disabled mt-2 mb-3\" disabled>Entrar</button>\r\n                        : <button type=\"submit\" className=\"btn btn-info btn-primary mt-2 mb-3\">Entrar</button>\r\n                    }\r\n                    </form>\r\n                    <div col-1>\r\n                        <span>Ainda não possui cadastro?</span><br/>\r\n                        <Link to=\"/signUp\">\r\n                            <span className=\"text-info\">Crie já o seu</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState, FormEvent, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\n// import jwt from 'jsonwebtoken';\r\n\r\nimport '../Login/login.css';\r\n\r\nimport api from '../../services/api';\r\n\r\n// const secretWord = 'PalavraSecreta';\r\n\r\nconst SignUp = () => {\r\n    const [getNome, setNome] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getMatricula, setMatricula] = useState('');\r\n    const [getSenha, setSenha] = useState('');\r\n    const [getRedefinirSenha, setRedefinirSenha] = useState('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const history = useHistory()\r\n    \r\n    function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        const nome = getNome;\r\n        const email = getEmail;\r\n        const matricula = getMatricula;\r\n        const senha = getSenha;\r\n        const confirmarSenha = getRedefinirSenha;\r\n        \r\n        // const token = jwt.sign({nome: nome, email: email, senha: senha, confirmarSenha: confirmarSenha, matricula: matricula}, secretWord);\r\n        api.post('users', {nome: nome, email: email, senha: senha, confirmarSenha: confirmarSenha, matricula: matricula})\r\n        .then(function(response){\r\n            if(response.data.createdUser){\r\n                showToast('success', 'Sucesso!', `Usuário criado com sucesso.`);\r\n                // setTimeout(function(){history.push('/login')}, 1750);\r\n                setTimeout(() => {\r\n                    history.push('/login')\r\n                }, 2500);\r\n            }else{\r\n                if(response.data.status === 502){\r\n                    showToast('error', 'Erro!', `Error 502 Bad Gateway. Contate o administrador do sistema para mais detalhes. Erro: UserCreationDatabase`);\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.data.error));\r\n                }\r\n            }\r\n        })\r\n        // history.push('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Cadastro de Usuário';\r\n    }, []);\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row m-5\">\r\n                <div className=\"card shadow-lg p-3 col-md-6 offset-md-3 border\">\r\n                    <p className=\"text-dark h3 text-center\">Cadastro de Usuário</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nome\">Nome Completo:</label>\r\n                        <InputText type=\"text\" style={{width: '100%'}} id=\"nome\" name=\"nome\" defaultValue={getNome} onChange={(e) => setNome((e.target as HTMLInputElement).value)} placeholder=\"Digite seu nome\" required autoFocus/>\r\n                        \r\n                        <label htmlFor=\"email\" className=\"mt-4\">Email:</label>\r\n                        <InputText type=\"email\" style={{width: '100%'}} id=\"email\" name=\"email\" defaultValue={getEmail} onChange={(e) => setEmail((e.target as HTMLInputElement).value)} placeholder=\"Digite seu email\" required/>\r\n                        \r\n                        <label htmlFor=\"matricula\" className=\"mt-4\">Matrícula:</label>\r\n                        <InputText type=\"text\" style={{width: '100%'}} id=\"matricula\" name=\"matricula\" defaultValue={getMatricula} onChange={(e) => setMatricula((e.target as HTMLInputElement).value)} placeholder=\"Digite sua matrícula\" required/>\r\n                        \r\n                        <label htmlFor=\"senha\" className=\"mt-4\">Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"senha\" name=\"senha\" defaultValue={getSenha} onChange={(e) => setSenha((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Digite sua senha\" required/>\r\n                        \r\n                        <label htmlFor=\"confirmarSenha\" className=\"mt-4\">Confirmar Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"confirmarSenha\" name=\"confirmarSenha\" defaultValue={getRedefinirSenha} onChange={(e) => setRedefinirSenha((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Confirme sua senha\" required/>\r\n                    </div>\r\n                    {/* {\r\n                    enableSubmitButton === 0\r\n                    ? <button type=\"submit\" className=\"btn btn-info btn-primary disabled\" disabled>Cadastrar</button>\r\n                    : <button type=\"submit\" className=\"btn btn-info btn-primary\">Cadastrar</button>\r\n                    } */}\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState, ChangeEvent, FormEvent, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaPenAlt } from 'react-icons/fa'\r\n\r\nimport api from '../../../services/api';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ToastComponent from '../../../components/Toast';\r\n// import {Button} from 'primereact/button';\r\n\r\nconst MyProfile = () => {\r\n    const history = useHistory();\r\n\r\n    const [cookies] = useCookies([]);\r\n    const [responseDataStatus, setResponseDataStatus] = useState(Number);\r\n    const [, setEditable] = useState(0);\r\n    const [responseData, setResponseData] = useState('');\r\n    const [pharmaceuticalStatus, setPharmaceuticalStatus] = useState('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [initData, setInitData] = useState({\r\n        id: '',\r\n        nome: '',\r\n        email: '',\r\n        matricula: '',\r\n        tipoUsuario: ''\r\n    })\r\n\r\n    const [formData, setFormData] = useState({\r\n        nome: \"null\",\r\n        email: \"null\",\r\n        matricula: \"null\",\r\n        tipoUsuario: \"null\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Meu Perfil';\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try{\r\n            if (cookies.userData) {\r\n                const email = cookies.userData.Email;\r\n                api.get(`users/email/?email=${email}&page=10`).then(response => {\r\n                    var { CodUsuario, Nome, Matricula, Email, TipoUsuario } = response.data.showUsers[0];\r\n                    setInitData({ ...initData, id: CodUsuario, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                    setFormData({ ...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                    // setFormData({...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario});\r\n                    setPharmaceuticalStatus(TipoUsuario);\r\n                }).catch(err => {\r\n                    showToast('error', 'Erro', 'Erro: ' + String(err));\r\n                })\r\n            } else {\r\n                history.push('/login');\r\n                alert('ERROR. Faça login novamente para acessar o conteúdo.');\r\n            }\r\n        }catch(err){\r\n            showToast('error', 'Erro', err);\r\n        }\r\n    }, [cookies.userData, history]);\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target\r\n        setFormData({ ...formData, [name]: value })\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        const { nome, email, matricula } = formData;\r\n\r\n        // const token = jwt.sign({nome: nome, email: email, matricula: matricula}, secretWord);\r\n        await api.put(`/users/${initData['id']}}`, { nome: nome, email: email, matricula: matricula })\r\n            .then(function (response) {\r\n                if (response.data.updatedUser) {\r\n                    showToast('success', 'Sucesso!', 'Informações alteradas com sucesso.');\r\n                    api.get(`users/email/?email=${email}&page=10`).then(response1 => {\r\n                        var { CodUsuario, Nome, Matricula, Email, TipoUsuario } = response1.data.showUsers[0];\r\n                        setFormData({ ...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                        setInitData({ ...initData, id: CodUsuario, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                        setPharmaceuticalStatus(TipoUsuario);\r\n                    })\r\n                    // setTimeout(function(){history.push('/login')}, 3000);\r\n                } else {\r\n                    showToast('error', 'Erro!', response.data.error);\r\n                }\r\n            })\r\n    }\r\n\r\n    function requestChangeUserType() {\r\n        api.put(`users/requestChangeUserType/${initData['id']}`, { TipoNotificacao: \"Change\" }).then(response => {\r\n            if (response.data.requestChangeUserType) {\r\n                showToast('success', 'Sucesso!', 'Solicitação feita com sucesso.');\r\n            } else {\r\n                showToast('error', 'Erro!', response.data.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const [position, setPosition] = useState('center');\r\n    const [displayPosition, setDisplayPosition] = useState(false);\r\n\r\n    const onClick = (stateMethod: any, position: string = '') => {\r\n        stateMethod(true);\r\n\r\n        if (position) {\r\n            setPosition(position);\r\n        }\r\n    }\r\n\r\n    const onHide = (stateMethod: any) => {\r\n        stateMethod(false);\r\n    }\r\n\r\n    const renderFooter = (stateMethod: any) => {\r\n        return (\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => { handleSubmit(e); onHide(stateMethod) }}><FiCheckCircle size={25} />  Finalizar Edição</button>\r\n                {/* <Button label=\"Yes\" icon=\"pi pi-check\"  />\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => onHide(stateMethod)} className=\"p-button-secondary\"/> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Dados do usuário</p>\r\n                <Button type=\"button\" variant=\"outline-info\" className=\"float-right\" onClick={() => { onClick(setDisplayPosition, 'top'); setEditable(1) }}><FaPenAlt size={15} />  Editar Informações</Button>\r\n                <Dialog header=\"Editar dados do Usuário\" visible={displayPosition} style={{ width: '50vw' }} onHide={() => onHide(setDisplayPosition)}  footer={renderFooter(setDisplayPosition)}>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nome\">Nome Completo:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nome\" name=\"nome\" onChange={handleInputChange} defaultValue={initData['nome']} placeholder=\"Digite seu nome\" required />\r\n                            {/* <input type=\"text\" className=\"form-control\" id=\"nome\" name=\"nome\" onChange={handleInputChange} defaultValue={initData['nome']} placeholder=\"Digite seu nome\" required/> */}\r\n                            <div className=\"m-4\"></div>\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <input type=\"email\" className=\"form-control disabled\" disabled id=\"email\" name=\"email\" onChange={handleInputChange} defaultValue={initData['email']} placeholder=\"Digite seu email\" required />\r\n                            <div className=\"m-4\"></div>\r\n                            <label htmlFor=\"matricula\">Matrícula:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"matricula\" name=\"matricula\" onChange={handleInputChange} defaultValue={initData['matricula']} placeholder=\"Digite sua matrícula\" required />\r\n                        </div>\r\n                    </form>\r\n                </Dialog>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"nome\">Nome Completo:</label>\r\n                <label className=\"form-control\">{initData['nome']}</label>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\" className=\"form-control disabled\" disabled id=\"email\" name=\"email\" onChange={handleInputChange} defaultValue={initData['email']} placeholder=\"Digite seu email\" required />\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"matricula\">Matrícula:</label>\r\n                <label className=\"form-control\">{initData['matricula']}</label>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"matricula\">Tipo de usuário atual: \r\n                    {\r\n                        pharmaceuticalStatus === 'F'\r\n                            ? <label><strong>Farmacêutico</strong></label>\r\n                            : pharmaceuticalStatus === 'M'\r\n                                ? <label><strong>Médico</strong></label>\r\n                                : pharmaceuticalStatus === \"L\"\r\n                                    ? <label><strong>Leitor</strong></label>\r\n                                    : <label><strong>Administrador</strong></label>\r\n                    }\r\n                </label>\r\n                <br />\r\n                {\r\n                    pharmaceuticalStatus === 'F'\r\n                        ? <button type=\"button\" onClick={requestChangeUserType} className=\"btn btn-outline-secondary\">Solicitar alteração</button>\r\n                        : <></>\r\n                }\r\n                {/* {editable === 0\r\n                ? <Button type=\"button\" variant=\"outline-info\" className=\"float-right\" onClick={() => setEditable(1)}><FaPenAlt size={15}/></Button>\r\n                : <Button type=\"button\" variant=\"outline-info\" className=\"float-right disabled\" disabled onClick={() => setEditable(1)}><FaPenAlt size={15}/></Button>\r\n                } */}\r\n\r\n                <br />\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import api from '../../services/api';\r\n\r\nclass UsersService {\r\n    async getUsersPaginate(endIndex: Number) {\r\n        return await api.get(`users/paginate/${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async deleteUser(CodUsuario: Number, Email: string) {\r\n        return await api.post('users/delete', { Email: Email }).then(response => response.data);\r\n    }\r\n\r\n    async searchUserGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'C') {\r\n            return await api.get(`users/id/?id=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'N') {\r\n            return await api.get(`users/name/?nome=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'E') {\r\n            return await api.get(`users/email/?email=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'M') {\r\n            return await api.get(`users/registrations/?matricula=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'TU') {\r\n            return await api.get(`users/userType/?userType=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async changeUserType(userId: Number, newUserType: string, incomingUserId: Number) {\r\n        return await api.post('users/changeUserType', { userId: userId, newUserType: newUserType, incomingUserId: incomingUserId }).then(response => response.data);\r\n    }\r\n\r\n    async changeVerifyUser(userId: Number, newUserType: string) {\r\n        return await api.post(`users/changeVerifyUser`, { userId: userId, verifyUserOption: newUserType }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { UsersService };","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dropdown as DropdownReact, Spinner } from 'react-bootstrap';\r\n\r\nimport { FiCheck, FiSearch, FiRefreshCcw } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport { UsersService } from './UsersService';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport './Users.css';\r\nimport ToastComponent from '../../components/Toast';\r\nimport Loading from '../../components/Loading';\r\n\r\nconst Users = () => {\r\n    const [cookie] = useCookies();\r\n    const [prontuario, setProntuario] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [getEnd, setEnd] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [getMode, setMode] = useState<string>('N');\r\n\r\n    const [selectedUser, setSelectedUser] = useState<any>(null);\r\n    const [getUser, setUser] = useState<any>(null);\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    let newUser = false;\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getUserChange, setUserChange] = useState<string>('');\r\n    const [getUserVerifyOption, setUserVerifyOption] = useState<string>('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const usersService = new UsersService();\r\n    const rows = 10;\r\n\r\n    let dt = useRef<any>(null);\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    const onUserSelectChange = (e: { value: any }) => {\r\n        setUserChange(e.value);\r\n    };\r\n\r\n    const onUserSelectVerifyChange = (e: { value: any }) => {\r\n        setUserVerifyOption(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { name: 'CódUsuário', cod: 'C' },\r\n        { name: 'Nome', cod: 'N' },\r\n        { name: 'Email', cod: 'E' },\r\n        { name: 'Matrícula', cod: 'M' },\r\n        { name: 'TipoUsuário', cod: 'TU' }\r\n    ];\r\n\r\n    let tipoUsuario = [\r\n        { label: 'Administrador', value: 'A' },\r\n        { label: 'Médico', value: 'M' },\r\n        { label: 'Farmacêutico', value: 'F' },\r\n        { label: 'Leitor', value: 'L' },\r\n    ];\r\n\r\n    let verifyOptions = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' },\r\n    ];\r\n\r\n    //DataTable\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            usersService.getUsersPaginate(10).then(data => {\r\n                getUsersFunction(data)\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${data.length} resultados.`)\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            if (getMode === 'S') {\r\n                usersService.searchUserGlobal(searchInput, getOptionState.cod, endIndex).then(data => {\r\n                    if (!data.userFound) {\r\n                        setLoading(false);\r\n                        setProntuario([]);\r\n                        return\r\n                    }\r\n                    getUsersFunction(data)\r\n                })\r\n            } else if (getMode === 'N') {\r\n                usersService.getUsersPaginate(endIndex).then(data => {\r\n                    getUsersFunction(data);\r\n                });\r\n            }\r\n            setFirst(startIndex);\r\n            setEnd(endIndex);\r\n            setProntuario(datasource.slice(startIndex, endIndex));\r\n        }, 500)\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: codUsuarioBodyTemplate, nomeBodyTemplate, emailBodyTemplate, matriculaBodyTemplate, tipoUsuarioBodyTemplate\r\n     * Descricao:\r\n     *  Ao chamar a funcao, o mesmo faz o tratamento dos dados para que a visualizacao seja responsiva\r\n     * Parametros:\r\n     *  rowData: Conteudo da linha a ser mostrado. Objeto\r\n     * Retorno:\r\n     *  Codigo em HTML para ser adicionado ao campo do datatable\r\n    **************************************************/\r\n    const codUsuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Código</span>\r\n                <a>{rowData.CodUsuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const nomeBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nome</span>\r\n                <a>{rowData.Nome}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Email</span>\r\n                <a>{rowData.Email}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const matriculaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Matrícula</span>\r\n                <a>{rowData.Matricula}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const tipoUsuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Tipo usuário</span>\r\n                <a>{rowData.TipoUsuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n    /*************************************************\r\n     * Nome: VerifiedTemplate\r\n     * Descricao:\r\n     *  Ao chamar a funcao, o mesmo faz o tratamento dos dados para que a visualizacao seja responsiva e facilite a visualizacao dos dados com cores\r\n     * Parametros:\r\n     *  rowData: Conteudo da linha a ser mostrado. Objeto\r\n     * Retorno:\r\n     *  Codigo em HTML para ser adicionado ao campo do datatable\r\n    **************************************************/\r\n    const VerifiedTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.isVerified;\r\n        let fontColor: any = verifyStatus === 'Não' ? \"#a80000\" : \"#106b00\";\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Verificado</span>\r\n                <a style={{ color: fontColor }}>{verifyStatus}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: deleteUser\r\n     * Descricao:\r\n     *  Funcao para fazer a exclusao do usuario selecionado\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function deleteUser() {\r\n        const codUsuarioDelete = selectedUser.CodUsuario;\r\n        const Email = selectedUser.Email;\r\n        setDisplayDialog(false);\r\n        if (codUsuarioDelete !== cookie.userData.CodUsuario) {\r\n            usersService.deleteUser(codUsuarioDelete, Email).then(response => {\r\n                if (response.deletedUser) {\r\n                    showToast('success', 'Sucesso!', 'Usuário exluído com sucesso.');\r\n                    setProntuario([]);\r\n                    usersService.getUsersPaginate(10).then(data => {\r\n                        getUsersFunction(data)\r\n                    });\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n            })\r\n        } else {\r\n            showToast('error', 'Erro!', 'Não é possível excluir o próprio usuário.');\r\n        }\r\n        setUserChange('F');\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: dialogCancel\r\n     * Descricao:\r\n     *  Funcao para administrar o fechamento de um Dialog\r\n     * Parametros:\r\n     *  status: Status da mensagem a ser mostrada no Toast de alerta\r\n     *  message: Mensagem a ser mostrada no Toast de alerta\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function dialogCancel(status: string, message: string) {\r\n        setDisplayDialog(false);\r\n        showToast(status, 'Aviso!', message);\r\n        setUserChange('F');\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: changeUserType\r\n     * Descricao:\r\n     *  Funcao para fazer a alteração de tipo de usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function changeUserType() {\r\n        const userId = selectedUser.CodUsuario;\r\n        const currentUserId = Number(cookie.userData.CodUsuario);\r\n        setTimeout(async () => {\r\n            await usersService.changeUserType(userId, getUserChange, currentUserId).then(response => {\r\n                if (response.updatedUser) {\r\n                    showToast('success', 'Sucesso!', `A permissão do usuário ${selectedUser.Nome} foi alterada com sucesso.`);\r\n                    getUsersFunction();\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n                setDisplayDialog(false);\r\n            }).catch(err => {\r\n                showToast('error', \"Erro\", err.response.data.error)\r\n            })\r\n            setUserChange('F');\r\n        }, 300);\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: changeVerifyUser\r\n     * Descricao:\r\n     *  Funcao para fazer a alteração da verificacao de usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function changeVerifyUser() {\r\n        const userId = selectedUser.CodUsuario;\r\n        setTimeout(() => {\r\n            usersService.changeVerifyUser(userId, getUserVerifyOption).then(response => {\r\n                if (response.verifyUser) {\r\n                    showToast('success', 'Sucesso!', `A verificação do usuário \"${selectedUser.Nome}\" foi alterada com sucesso.`);\r\n                    getUsersFunction();\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n            })\r\n            setUserVerifyOption('N');\r\n        }, 300);\r\n        setDisplayDialog(false);\r\n    }\r\n    /*************************************************\r\n     * Nome: getUsersFunction\r\n     * Descricao:\r\n     *  Funcao para buscar e receber os dados a serem inseridos no datatable assim como o tratamento básico dos mesmos\r\n     * Parametros:\r\n     *  data: Opcional. Objeto a ser tratado\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function getUsersFunction(data?: any) {\r\n        setLoading(true);\r\n        if (!data) {\r\n            usersService.getUsersPaginate(getEnd).then(data => {\r\n                if(!data.showUsers){\r\n                    showToast('danger', 'Erro!', 'Não foi possível exibir a lista de usuários');\r\n                    // return \r\n                }else{\r\n                    setDatasource(data.users);\r\n                    setTotalRecords(data.length);\r\n                    data = data.users;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i]['TipoUsuario'] === 'A') {\r\n                            data[i]['TipoUsuario'] = 'Administrador';\r\n                        } else if (data[i]['TipoUsuario'] === 'M') {\r\n                            data[i]['TipoUsuario'] = 'Médico';\r\n                        } else if (data[i]['TipoUsuario'] === 'L'){\r\n                            data[i]['TipoUsuario'] = 'Leitor';\r\n                        } else {\r\n                            data[i]['TipoUsuario'] = 'Farmacêutico';\r\n                        }\r\n                        if (data[i]['isVerified'] === 1) {\r\n                            data[i]['isVerified'] = 'Sim';\r\n                        } else {\r\n                            data[i]['isVerified'] = 'Não';\r\n                        }\r\n                    }\r\n                    setProntuario(data.slice(0, rows));\r\n                    // setLoading(false);\r\n                    // setLoading1(false);\r\n                    // return\r\n                }\r\n            })\r\n        } else {\r\n            if(!data.userFound && !data.showUsers){\r\n                showToast('danger', 'Erro!', 'Não foi possível exibir a lista de usuários');\r\n                // return\r\n            }else{\r\n                setDatasource(data.users || data.showUsers);\r\n                setTotalRecords(data.length);\r\n                data = data.users || data.showUsers;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if (data[i]['TipoUsuario'] === 'A') {\r\n                        data[i]['TipoUsuario'] = 'Administrador';\r\n                    } else if (data[i]['TipoUsuario'] === 'M') {\r\n                        data[i]['TipoUsuario'] = 'Médico';\r\n                    } else if (data[i]['TipoUsuario'] === 'L'){\r\n                        data[i]['TipoUsuario'] = 'Leitor';\r\n                    } else {\r\n                        data[i]['TipoUsuario'] = 'Farmacêutico';\r\n                    }\r\n                    if (data[i]['isVerified'] === 1) {\r\n                        data[i]['isVerified'] = 'Sim';\r\n                    } else {\r\n                        data[i]['isVerified'] = 'Não';\r\n                    }\r\n                }\r\n                setProntuario(data.slice(0, rows));\r\n                // setLoading(false);\r\n                // setLoading1(false);\r\n                // return\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            setLoading1(false);\r\n        }, 500)\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: handleSearch\r\n     * Descricao:\r\n     *  Funcao para fazer o tratamento e busca de termos no registro de usuarios\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function handleSearch() {\r\n        if (!getOptionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if (!searchInput) {\r\n            usersService.getUsersPaginate(10).then(data => {\r\n                getUsersFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        // const primeiro = getFirstString();\r\n        setMode('S');\r\n        usersService.searchUserGlobal(searchInput, getOptionState.cod, getFirst + rows).then(data => {\r\n            if (!data.userFound) {\r\n                setLoading(false);\r\n                setProntuario([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getUsersFunction(data)\r\n            let searchType;\r\n            if (getOptionState.name === 'CódUsuário') {\r\n                searchType = 'CodUsuario';\r\n            } else if (getOptionState.name === 'Matrícula') {\r\n                searchType = 'Matricula';\r\n            } else if (getOptionState.name === 'TipoUsuário') {\r\n                searchType = 'TipoUsuario'\r\n            } else {\r\n                searchType = getOptionState.name\r\n            }\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n        })\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: showToast\r\n     * Descricao:\r\n     *  Funcao para fazer o intermedio a fim de mostrar o component Toast na tela do usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: showData\r\n     * Descricao:\r\n     *  Faz tratamento de erros ao mostrar mensagens\r\n     * Parametros:\r\n     *  data: objeto a ser tratado\r\n     * Retorno:\r\n     *  Retorna String com frase a ser mostrada no componente\r\n    **************************************************/\r\n    function showData(data:any): String{\r\n        try {\r\n            if(data){\r\n                let nome = String(data.Nome);\r\n                let codUsuario = String(data.CodUsuario);\r\n                return `Deseja excluir o usuário \"${nome}\" de código \"${codUsuario}\" do sistema?`;\r\n            }else{\r\n                return \"Data error! Data is null\";\r\n            }\r\n        } catch (error) {\r\n            // showToast('warn', \"Erro\", error);\r\n            alert(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: onUserSelect\r\n     * Descricao:\r\n     *  Ao selecionar um usuario no datatable, a funcao atribui o usuario selecionado a variavel para uso futuro\r\n     * Parametros:\r\n     *  e: evento do tipo any, que em sua maioria sera um objeto\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    const onUserSelect = (e: any) => {\r\n        newUser = false;\r\n        setUser(Object.assign({}, e.data));\r\n        setUserChange(e.data['TipoUsuario'][0]);\r\n        setUserVerifyOption(e.data['isVerified'][0]);\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    const handleUnselectRow = () => {\r\n        // setUser(null);\r\n        setSelectedUser(null)\r\n        // setUserChange('');\r\n        // setUserVerifyOption('');\r\n        // setDisplayDialog(false);\r\n    }\r\n\r\n    const header = (\r\n        <>\r\n            <p style={{ textAlign: 'left' }} className=\"p-clearfix d-inline\">Dados dos usuários</p>\r\n            <Button variant=\"success\" className=\"float-right\" title=\"Atualizar\" onClick={() => {getUsersFunction(); showToast('info', 'Notificação', `Foram encontrados ${totalRecords} resultados.`)}}>\r\n                {loading\r\n                    ?\r\n                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                    : \r\n                        <FiRefreshCcw size={20}/>\r\n                }    \r\n            </Button>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 pl-2\">\r\n                    <span className=\"p-float-label p-inputgroup\">\r\n                        <div className=\"p-col-12\">\r\n                            <div className=\"p-inputgroup mt-4 mb-1\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }} onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }} style={{ minWidth: '8em', borderRadius: '0' }} size={50} />\r\n                                    {getOptionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput === ''\r\n                                    ? <></>\r\n                                    :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{ width: '12em' }} />\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{ width: '17px', borderRadius: '0' }} onClick={() => { setSearchInput(''); getUsersFunction(); setMode('N'); setOptionState(null) }}><AiOutlineClose size={15} /></Button>\r\n                                        <Button onClick={handleSearch} style={{ borderRadius: '0' }}><FiSearch size={20} /></Button>\r\n                                    </>\r\n                                }\r\n                                {/* <Dropdown className=\"mx-1\" value={getOptionState} options={options} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px'}} onClick={() => {setSearchInput(''); getUsersFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                <Button onClick={handleSearch}><FiSearch size={20}/></Button> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* {getOptionState === null\r\n                            ? <label htmlFor=\"float-input\">Buscar</label>\r\n                            : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                        } */}\r\n                    </span>\r\n                </div>\r\n                {/* <Button className=\"col-md-2 offset-md-6\" type=\"button\" variant=\"outline-success\" onClick={onExport}><AiOutlineDownload size={20}/>  Exportar dados</Button> */}\r\n            </div>\r\n            <p style={{ textAlign: 'left' }} className=\"p-clearfix d-inline text-secondary\">Selecione um usuário para mais informações</p>\r\n\r\n        </>\r\n    );\r\n\r\n    const dialogFooter =\r\n        <div className=\"ui-dialog-buttonpane p-clearfix\">\r\n            <Button className=\"mx-2\" variant=\"outline-danger\" onClick={() => { dialogCancel('warn', 'Operação cancelada pelo usuário.') }}><p className=\"d-inline\"><AiOutlineClose size={20} />  Cancelar</p></Button>\r\n        </div>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-md-5 px-5\">\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable ref={dt} value={prontuario} paginator={true} rows={rows} header={header} totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                        onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedUser} onSelectionChange={e => {setSelectedUser(e.value)}}\r\n                        onRowSelect={onUserSelect} dataKey=\"CodUsuario\">\r\n                        <Column field=\"CodUsuario\" header=\"Código\" body={codUsuarioBodyTemplate}/>\r\n                        <Column field=\"Nome\" header=\"Nome\" body={nomeBodyTemplate}/>\r\n                        <Column field=\"Email\" header=\"Email\" body={emailBodyTemplate}/>\r\n                        <Column field=\"Matricula\" header=\"Matrícula\" body={matriculaBodyTemplate}/>\r\n                        <Column field=\"TipoUsuario\" header=\"Tipo usuário\" body={tipoUsuarioBodyTemplate}/>\r\n                        <Column field=\"isVerified\" header=\"Verificado\" body={VerifiedTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n                <Dialog visible={displayDialog} className=\"sol-sm-6\" header=\"Ações\" modal={true} onHide={() => {setDisplayDialog(false); handleUnselectRow()}}\r\n                    blockScroll={true} footer={dialogFooter}>\r\n                    <p className=\"h3 mx-2\">Alterar tipo de usuário</p>\r\n                    {getUser &&\r\n                        <Dropdown className=\"mx-2\" value={getUserChange} options={tipoUsuario} onChange={onUserSelectChange} style={{ width: '12em' }} />\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => { changeUserType() }}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                    <br /><br />\r\n                    <DropdownReact.Divider />\r\n                    <p className=\"h3 mx-2\">Alterar verificação do usuário</p>\r\n                    {getUser &&\r\n                        <Dropdown className=\"mx-2\" value={getUserVerifyOption} options={verifyOptions} onChange={onUserSelectVerifyChange} style={{ width: '12em' }} />\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => { changeVerifyUser() }}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                    <br /><br />\r\n                    <DropdownReact.Divider />\r\n                    <p className=\"h3 mx-2\">Exclusão</p>\r\n                    {getUser &&\r\n                        // <p className=\"h6 mx-2\">Deseja excluir o usuário \"{showData(selectedUser, 1)}\" de código \"{showData(selectedUser, 2)}\" do sistema?</p>\r\n                        <p className=\"h6 mx-2\">{showData(selectedUser)}</p>\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => deleteUser()}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                </Dialog>\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n                }\r\n                {loading1 &&\r\n                    <Loading />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import api from '../../../services/api';\r\n\r\nclass NotificationsService {\r\n    async getNotifications(CodUsuario: Number, TipoUsuario: String, endIndex: number) {\r\n        return await api.post(`notifications/id/?id${CodUsuario}&page=${endIndex}`, { TipoUsuario: TipoUsuario }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { NotificationsService };","import React, { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport api from '../../../services/api';\r\n\r\nimport { NotificationsService } from './NotificationsService';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { start } from 'repl';\r\nimport Loading from '../../../components/Loading';\r\n\r\nconst Notifications = () => {\r\n    const [cookies] = useCookies([]);\r\n    const [getNotifications, setNotifications] = useState([]);\r\n    const [responseDataStatus, setResponseDataStatus] = useState(Number);\r\n    const [responseData, setResponseData] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n    const notificationsService = new NotificationsService();\r\n\r\n    const rows = 10;\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Notificações';\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            getNotificationFunction();\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            let CodUsuario = cookies.userData.CodUsuario;\r\n            let TipoUsuario = cookies.userData.TipoUsuario;\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            notificationsService.getNotifications(CodUsuario, TipoUsuario, endIndex).then(data => {\r\n                setNotifications(data.notifications)\r\n                setLoading(false)\r\n            })\r\n            setFirst(startIndex);\r\n            setNotifications(getNotifications.slice(startIndex, endIndex));\r\n            setLoading(false);\r\n        }, 1000)\r\n    }\r\n\r\n    function getNotificationFunction() {\r\n        if (cookies.userData) {\r\n            setNotifications([])\r\n            let CodUsuario = cookies.userData.CodUsuario;\r\n            let TipoUsuario = cookies.userData.TipoUsuario;\r\n            setTimeout(() => {\r\n                notificationsService.getNotifications(CodUsuario, TipoUsuario, getFirst + rows).then(data => {\r\n                    setTotalRecords(data.length - 10);\r\n                    setNotifications(data.notifications)\r\n                    setLoading(false)\r\n                    setLoading1(false)\r\n                })\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    function accept(NotificationId: Number, tipoNotificacao: string) {\r\n        if (tipoNotificacao === \"Change\") {\r\n            api.put(`notifications/status/accept/${NotificationId}`, { notificationType: tipoNotificacao }).then(response => {\r\n                if (response.data.updatedStatusNotification) {\r\n                    getNotificationFunction();\r\n                    setResponseDataStatus(1);\r\n                    setResponseData(\"Notificação alterada com sucesso.\");\r\n                } else {\r\n                    setResponseDataStatus(2);\r\n                    setResponseData(\"Não foi possível alterar a notificação.\");\r\n                }\r\n            });\r\n        } else {\r\n            api.put(`notifications/status/accept/${NotificationId}`).then(response => {\r\n                if (response.data.updatedStatusNotification) {\r\n                    getNotificationFunction();\r\n                    setResponseDataStatus(1);\r\n                    setResponseData(\"Notificação alterada com sucesso.\");\r\n                } else {\r\n                    setResponseDataStatus(2);\r\n                    setResponseData(\"Não foi possível alterar a notificação.\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function refuse(NotificationId: Number, tipoNotificacao: string) {\r\n        api.put(`notifications/status/refuse/${NotificationId}`).then(response => {\r\n            if (response.data.updatedStatusNotification) {\r\n                getNotificationFunction();\r\n                setResponseDataStatus(1);\r\n                setResponseData(\"Notificação alterada com sucesso.\");\r\n            } else {\r\n                setResponseDataStatus(2);\r\n                setResponseData(\"Não foi possível alterar a notificação.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    const actionTemplate = (rowData: any, column: any) => {\r\n        return (\r\n            <div>\r\n                <Button variant=\"outline-success\" className=\"mb-2 mb-xl-0 mr-xl-2\" onClick={() => { accept(rowData['CodNotificacao'], rowData['TipoNotificacao']) }}>Aceitar</Button>\r\n                {/* <div className=\" d-inline\"></div> */}\r\n                <Button variant=\"outline-danger\" onClick={() => { refuse(rowData['CodNotificacao'], rowData['TipoNotificacao']) }}>Recusar</Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading1 &&\r\n                <Loading />\r\n            }\r\n            <div className=\"row m-5\">\r\n                {responseDataStatus === 0\r\n                    ? <></>\r\n                    : responseDataStatus === 1\r\n                        ?\r\n                        <div className=\"alert alert-success col-sm-8 m-0 mx-auto mb-4 p-3 alert-dismissible fade show\">\r\n                            {responseData}\r\n                        </div>\r\n                        :\r\n                        <div className=\"alert alert-danger col-sm-8 m-0 mx-auto mb-4 p-3 alert-dismissible fade show\">\r\n                            {responseData}\r\n                        </div>\r\n                }\r\n\r\n                <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 border\">\r\n                    <p className=\"text-center h3\">Notificações</p>\r\n                </div>\r\n                {getNotifications &&\r\n                    <DataTable className=\"col-sm-8 offset-sm-8 mx-auto p-0 shadow-lg p-datatable-responsive-demo\" value={getNotifications} paginator={true}\r\n                        rows={rows} totalRecords={totalRecords} emptyMessage=\"Nenhum resultado encontrado\" resizableColumns={true}\r\n                        loading={loading} first={getFirst} onPage={onPage} lazy={true}>\r\n\r\n                        <Column field=\"CodNotificacao\" header=\"CodNotificação\" style={{ width: '15%', textAlign: 'center' }} />\r\n                        <Column field=\"CodUsuario\" header=\"CodUsuário\" style={{ width: '15%', textAlign: 'center' }} />\r\n                        <Column field=\"Descricao\" header=\"Descrição\" style={{ width: '45%', textAlign: 'center' }} />\r\n                        <Column header=\"Ações\" body={actionTemplate} style={{ width: '20%', textAlign: 'center' }} />\r\n                    </DataTable>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications;","export default __webpack_public_path__ + \"static/media/logoFiocruz.c090c8ef.png\";","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport logo from '../../assets/logoFiocruz.png';\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const [cookies] = useCookies([]);\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        if (cookies.userData) {\r\n            history.push('/home');\r\n        }\r\n    }, [cookies.userData, history]);\r\n\r\n    useEffect(() => {\r\n        api.get('/serverStatus').then(response => {\r\n            if (!response.data.serverRunning) {\r\n                showToast('error', 'Erro na conexão!', response.data.error + '\\nErro: ' + String(response.data.errorType.code))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    function handleBackButton() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid m-0 p-0\">\r\n                <nav className=\"navbar navbar-expand-sm header-background navbar-dark\">\r\n                    <a href=\"/\" className=\"navbar-brand cursor-pointer text-big\">GAFio</a>\r\n                    <a href=\"/\" className=\"navbar-brand cursor-pointer ml-auto\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n                    </a>\r\n                </nav>\r\n            </div>\r\n            <button className=\"btn\" onClick={handleBackButton}>\r\n                <FiArrowLeft size={20} />\r\n            </button>\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { MdPersonOutline, MdNotificationsNone } from 'react-icons/md';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Dropdown, Button, Badge } from 'react-bootstrap';\r\nimport { Message } from 'primereact/message';\r\n\r\nimport '../Home/Home.css';\r\nimport './Header.css';\r\n\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const [cookies, , removeCookie] = useCookies([]);\r\n    const [userName, setUserName] = useState('');\r\n    const [tipoUsuario, setTipoUsuario] = useState('');\r\n    const [notificationsLength, setNotificationsLength] = useState(Number);\r\n\r\n    const [getError, setError] = useState(false);\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [getLifeTime, setLifeTime] = useState<Number>(4000);\r\n\r\n    function handleBackButton() {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cookies.userData) {\r\n            history.push('/login');\r\n            alert('Faça login para acessar o conteúdo')\r\n            return\r\n        } else {\r\n            const cookie = cookies.userData;\r\n            setUserName(cookie.Nome);\r\n            setTipoUsuario(cookie.TipoUsuario)\r\n        }\r\n    }, [cookies, history]);\r\n\r\n    useEffect(() => {\r\n        const getNotifications = async () => {\r\n            const cookie = cookies.userData;\r\n            const CodUsuario = cookie.CodUsuario;\r\n            try {\r\n                await api.get(`notifications/length/${CodUsuario}`).then(response => {\r\n                    if (response.data.notificationFound) {\r\n                        let dataSize = response.data.length[0][`COUNT('Status')`]\r\n                        setNotificationsLength(dataSize)\r\n                        if (dataSize === 0) {\r\n                            showToast('info', 'Notificação', `Você não possui notificações.`)\r\n                        } else {\r\n                            showToast('info', 'Notificação', `Você possui ${dataSize} notificações.`)\r\n                        }\r\n                    } else {\r\n                        showToast('info', 'Notificação', `Você não possui notificações.`)\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                if (err.message === \"Network Error\") {\r\n                    showToast('error', 'Erro!', 'Não foi possível conectar ao servidor. O sistema se desconectará! Contacte o administrador do sistema para mais informações!', 8000)\r\n                    setError(true);\r\n                }\r\n                // showToast('error', 'Erro!', 'teste');\r\n            }\r\n        };\r\n\r\n        getNotifications();\r\n\r\n    }, [cookies.userData])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string, lifeTime?: number) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        if (lifeTime) {\r\n            setLifeTime(lifeTime);\r\n            setTimeout(() => {\r\n                setToast(false);\r\n            }, 8500)\r\n        } else {\r\n            setTimeout(() => {\r\n                setToast(false);\r\n            }, 4500)\r\n        }\r\n        setToast(true);\r\n    }\r\n\r\n    function logoutFunction() {\r\n        removeCookie('userData');\r\n        removeCookie('notificationLength');\r\n        localStorage.removeItem('@gafio-user/email');\r\n        history.push('/login');\r\n    }\r\n\r\n    function myProfile() {\r\n        history.push('/myProfile');\r\n    }\r\n\r\n    function toNotifications() {\r\n        history.push('/notifications');\r\n    }\r\n\r\n    function toHome() {\r\n        history.push('/home');\r\n    }\r\n    \r\n    function toUsers() {\r\n        history.push('/users');\r\n    }\r\n\r\n    function toLogs() {\r\n        history.push('/logs');\r\n    }\r\n\r\n    return (\r\n        <div className=\"no-select\">\r\n            <title>GAFio</title>\r\n            <div className=\"container-fluid m-0 p-0\">\r\n                <nav className=\"navbar navbar-expand-sm header-background navbar-dark\">\r\n                    {/* <Link to=\"/home\"> */}\r\n                    <p onClick={toHome} className=\"navbar-brand m-0 cursor-pointer text-small\">GAFio</p>\r\n                    {/* </Link> */}\r\n                    <div className=\"ml-auto text-dark\">\r\n                    </div>\r\n                    <div className=\"ml-auto text-dark\">\r\n                        <Button onClick={toNotifications} variant=\"outline-dark\">\r\n                            <p className=\"d-inline\">Notificações</p>\r\n                            <MdNotificationsNone className=\"ml-2\" size={30} />\r\n                            {\r\n                                notificationsLength > 0\r\n                                    ?\r\n                                    <Badge variant=\"danger\">{notificationsLength}</Badge>\r\n                                    :\r\n                                    // <Badge variant=\"secondary\">{notificationsLength}</Badge>\r\n                                    <></>\r\n                            }\r\n\r\n                        </Button>\r\n                        <Dropdown className=\"ml-2 d-inline\">\r\n                            <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\r\n                                <strong className=\"text-capitalize\">{userName}</strong>\r\n\r\n                                <MdPersonOutline className=\"ml-2\" size={30} />\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={myProfile}>Gerenciar sua conta</Dropdown.Item>\r\n                                {tipoUsuario === 'A'\r\n                                    ? \r\n                                        <>\r\n                                            <Dropdown.Item className=\"bg-secondary-custom\" onClick={toUsers}>Gerenciar usuários</Dropdown.Item>\r\n                                            <Dropdown.Item className=\"bg-secondary-custom\" onClick={toLogs}>Logs</Dropdown.Item>\r\n                                        </>\r\n                                    : <></>\r\n                                }\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item onClick={logoutFunction}>Logout</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        {/* <a className=\"navbar-brand cursor-pointer ml-auto text-dark\">teste</a> */}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div className=\"container-fluid bg-light shadow-lg mb-5\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none home-label\" to=\"/home\">\r\n                            HOME\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/medicalRecords\">\r\n                            PRONTUÁRIOS\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/registrations\">\r\n                            CADASTROS\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/dashboard\">\r\n                            DASHBOARD\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/microbiology\">\r\n                            MICROBIOLOGIA\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/recomendations\">\r\n                            RECOMENDAÇÕES CCIH\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/history\">\r\n                            HISTÓRICO\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n                { getError\r\n                    ?\r\n                        <Message className=\"col-12\" severity=\"error\" text=\"Não foi possível conectar ao servidor! O sistema está offline.\" />\r\n                        :<></>\r\n                }\r\n            </div>\r\n            <div className=\"position-absolute arrow-left\" style={{ left: '0px', top: '50px' }}>\r\n                <button className=\"btn\" onClick={handleBackButton}>\r\n                    <FiArrowLeft size={20} />\r\n                </button>\r\n            </div>\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} lifeTime={getLifeTime} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { RiCopyrightLine } from 'react-icons/ri';\r\nimport { IoLogoGithub } from 'react-icons/io';\r\nimport { AiFillRobot } from 'react-icons/ai';\r\n\r\nimport '../../App.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"card col-sm-11 mx-auto mt-5 text-center text-light text-decoration-none header-background border-0\">\r\n            <div className=\"row mx-auto\">\r\n                <p className=\"h5 mt-1\"><RiCopyrightLine size={20} /> GAFio Devs, 2020 - 2021</p>\r\n                <a className=\"h5 mt-1 ml-3 text-light\" href=\"https://github.com/gabrielrbernardi/gafio\" target=\"_blank\" rel=\"noopener noreferrer\"><IoLogoGithub size={25} /></a>\r\n                <a className=\"h5 mt-1 ml-3 text-light\" href=\"https://primefaces.org/primereact/showcase/#/setup\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillRobot size={25} /></a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import api from '../../../services/api';\r\n\r\nclass CreateMedicalRecordsService {\r\n    async Create(getNroProntuario: any, getSeqPaciente: any, getDataInternacao: string, getCodDoencaPrincipal: string,\r\n        getCodDoencaSecundario: any, getSistemaAcometido: string, getCodComorbidade: any, getOrigem: string, getAlocacao: string,\r\n        getResultadoColeta: any, getCodAtbPrimario: string, getCodAtbSecundario: any, getSitioInfeccaoPrimario: any,\r\n        getTratamento: string, getIndicacao: string, getDisfuncao: string, getOrigemInfeccao: string, \r\n        getDose: any, getPosologia: any, email:any) {\r\n        return await api.post('medicalRecords', {\r\n            NroProntuario: getNroProntuario, SeqPaciente: getSeqPaciente, DataInternacao: getDataInternacao,\r\n            CodDoencaPrincipal: getCodDoencaPrincipal, CodDoencaSecundario: getCodDoencaSecundario,\r\n            SistemaAcometido: getSistemaAcometido, CodComorbidade: getCodComorbidade, Origem: getOrigem, \r\n            Alocacao: getAlocacao, ResultadoColeta: getResultadoColeta, CodAtbPrimario: getCodAtbPrimario,\r\n            CodAtbSecundario: getCodAtbSecundario, SitioInfeccaoPrimario: getSitioInfeccaoPrimario, \r\n            TratamentoCCIH: getTratamento, IndicacaoSepse: getIndicacao, DisfuncaoRenal: getDisfuncao, \r\n            OrigemInfeccao: getOrigemInfeccao, DoseCorreta: getDose, PosologiaCorreta: getPosologia, email: email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateMedicalRecordsService };","import api from '../../../services/api';\r\n\r\nclass DiseasesService {\r\n\r\n    async getDiseasesPaginate(endIndex: Number) {\r\n        return await api.get(`diseases/page/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchDiseasesGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === \"C\") {\r\n            return await api.get(`diseases/code/?code=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === \"N\") {\r\n            return await api.get(`diseases/name/?name=${searchKey}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async getDiseaseInformation(codDoenca: Number) {\r\n        return await api.get(`diseases/info/?id=${codDoenca}`).then(response => response.data);\r\n    }\r\n\r\n    async updateDisease(codDoenca: Number, nome: string) {\r\n        return await api.put(`/diseases/${codDoenca}`, { codDoenca, nome }).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch((err) => {\r\n            return { error: err };\r\n        });\r\n    }\r\n\r\n    async deleteDisease(codDoenca: String) {\r\n        return await api.delete(`/diseases/${codDoenca}`).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async updateDiseasesDB() {\r\n        const updatedDiseasesDB = await api.get(\"https://cid10-api.herokuapp.com/cid10\");\r\n        const currentDiseasesDB = await api.get(\"diseases\").then(response => response.data);\r\n\r\n        if (updatedDiseasesDB.data.length !== currentDiseasesDB.length) {\r\n            await api.delete(\"/diseases/deleteAll\");\r\n            await api.post(\"/diseases/importDB\");\r\n\r\n            alert(\"Banco de dados foi atualizado\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { DiseasesService };","import api from \"../../../services/api\";\r\n\r\nclass MedicinesService {\r\n\r\n    async getMedicinesPaginate(endIndex: Number) {\r\n        return await api.get(`medicines/page/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchMedicineGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'E') {\r\n            return await api.get(`medicines/ean/?ean=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === 'P') {\r\n            return await api.get(`medicines/principle/?principle=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === 'C') {\r\n            return await api.get(`medicines/class/?medicineClass=${searchKey}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async getMedicineInformation(ean: String) {\r\n        return await api.get(`medicines/info/?id=${ean}`).then(response => response.data);\r\n    }\r\n\r\n    async updateMedicine(ean: String) {\r\n        return await api.put(`/medicines/${ean}`, { ean }).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch((err) => {\r\n            return { error: err };\r\n        });\r\n    }\r\n\r\n    async deleteMedicine(ean: String) {\r\n        return await api.delete(`/medicines/${ean}`).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport { MedicinesService };\r\n","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dropdown as DropdownReact, ResponsiveEmbed } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport Loading from '../../../components/Loading';\r\nimport { addLocale } from 'primereact/api';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport { CreateMedicalRecordsService } from './CreateMedicalRecordsService'\r\nimport { DiseasesService } from '../../Registrations/Diseases/DiseasesService';\r\nimport { MedicinesService } from '../../Registrations/Medicines/MedicinesService';\r\n\r\nconst MedicalRecordsForm = () => {\r\n\r\n    const [getNroProntuario, setNroProntuario] = useState<any>(null)\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>(null)\r\n    const [getDataInternacao, setDataInternacao] = useState<any>(null)\r\n    const [getCodDoencaPrincipal, setCodDoencaPrincipal] = useState<string>('')\r\n    const [getCodDoencaSecundario, setCodDoencaSecundario] = useState<any>(null)\r\n    const [getSistemaAcometido, setSistemaAcometido] = useState<string>('')\r\n    const [getCodComorbidade, setCodComorbidade] = useState<any>(null)\r\n    const [getOrigem, setOrigem] = useState<string>('')\r\n    const [getAlocacao, setAlocacao] = useState<string>('')\r\n    const [getResultadoColeta, setResultadoColeta] = useState<any>(null)\r\n    const [getCodAtbPrimario, setCodAtbPrimario] = useState<string>('')\r\n    const [getCodAtbSecundario, setCodAtbSecundario] = useState<any>(null)\r\n    const [getSitioInfeccaoPrimario, setSitioInfeccaoPrimario] = useState<any>(null)\r\n    const [getTratamento, setTratamento] = useState<string>('')\r\n    const [getIndicacao, setIndicacao] = useState<string>('')\r\n    const [getDisfuncao, setDisfuncao] = useState<string>('')\r\n    const [getOrigemInfeccao, setOrigemInfeccao] = useState<string>('')\r\n    const [getDose, setDose] = useState<any>(null)\r\n    const [getPosologia, setPosologia] = useState<any>(null)\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [diseases, setDiseases] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [mode, setMode] = useState('N');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [getDiseasesChange, setDiseasesChange] = useState();\r\n    const [selectedDiseases, setSelectedDiseases] = useState<any>(null);\r\n    const [getType, setType] = useState<number>(0);\r\n    const diseasesService = new DiseasesService();\r\n    const rows = 10;\r\n\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [totalRecords2, setTotalRecords2] = useState(0);\r\n    const [first2, setFirst2] = useState(0);\r\n    const [searchInput2, setSearchInput2] = useState('');\r\n    const [getOptionState2, setOptionState2] = useState<any>(null);\r\n    const [mode2, setMode2] = useState('N');\r\n    const [open2, setOpen2] = useState(false);\r\n    const [getMedicinesChange, setMedicinesChange] = useState();\r\n    const [selectedMedicines, setSelectedMedicines] = useState<any>(null);\r\n    const medicinesService = new MedicinesService();\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    const createMedicalRecordsService = new CreateMedicalRecordsService()\r\n    var DiseasesData:any = {};\r\n    var MedicinesData:any = {};\r\n\r\n    const onResultadoChange = (e: { value: string }) => {\r\n        setResultadoColeta(e.value);\r\n    };\r\n\r\n    const onTratamentoChange = (e: { value: string }) => {\r\n        setTratamento(e.value);\r\n    };\r\n\r\n    const onIndicacaoChange = (e: { value: string }) => {\r\n        setIndicacao(e.value);\r\n    };\r\n\r\n    const onDisfuncaoChange = (e: { value: string }) => {\r\n        setDisfuncao(e.value);\r\n    };\r\n\r\n    const onDoseChange = (e: { value: string }) => {\r\n        setDose(e.value);\r\n    };\r\n\r\n    const onPosologiaChange = (e: { value: string }) => {\r\n        setPosologia(e.value);\r\n    };\r\n\r\n    function checkInput(type: number, e: any) {\r\n        if (type == 1) {\r\n            if (e === '') {\r\n                setCodDoencaSecundario(null);\r\n            } else {\r\n                setCodDoencaSecundario(e)\r\n            }\r\n        }\r\n        if (type == 2) {\r\n            if (e === '') {\r\n                setCodComorbidade(null);\r\n            } else {\r\n                setCodComorbidade(e)\r\n            }\r\n        }\r\n        if (type == 3) {\r\n            if (e === '') {\r\n                setCodAtbSecundario(null);\r\n            } else {\r\n                setCodAtbSecundario(e)\r\n            }\r\n        }\r\n        if (type == 4) {\r\n            if (e === '') {\r\n                setSitioInfeccaoPrimario(null);\r\n            } else {\r\n                setSitioInfeccaoPrimario(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    const onOptionChange2 = (e: { value: any }) => {\r\n        setOptionState2(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' }\r\n    ];\r\n\r\n    let options2 = [\r\n        { name: 'Código', cod: 'C' },\r\n        { name: 'Nome', cod: 'N' }\r\n    ];\r\n\r\n    let options3 = [\r\n        { name: 'Código', cod: 'E' },\r\n        { name: 'Princípio', cod: 'P' },\r\n    ];\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n\r\n    const monthNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const yearNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        \r\n        const data = {\r\n            getNroProntuario, getSeqPaciente,\r\n            getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n            getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n            getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n            getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n            getDisfuncao, getOrigemInfeccao, getDose, getPosologia\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroProntuario: Yup.number().required(),\r\n                getSeqPaciente: Yup.number().required(),\r\n                getDataInternacao: Yup.date().required(),\r\n                getCodDoencaPrincipal: Yup.string().required(),\r\n                getCodDoencaSecundario: Yup.string().nullable(),\r\n                getSistemaAcometido: Yup.string().required(),\r\n                getCodComorbidade: Yup.string().nullable(),\r\n                getOrigem: Yup.string().required(),\r\n                getAlocacao: Yup.string().required(),\r\n                getResultadoColeta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getCodAtbPrimario: Yup.string().required(),\r\n                getCodAtbSecundario: Yup.string().nullable(),\r\n                getSitioInfeccaoPrimario: Yup.string().nullable(),\r\n                getTratamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getIndicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getDisfuncao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getOrigemInfeccao: Yup.string().required(),\r\n                getDose: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologia: Yup.string().nullable().oneOf([null, \"S\", \"N\"])\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createMedicalRecordsService.Create(getNroProntuario, getSeqPaciente,\r\n                getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n                getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n                getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n                getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n                getDisfuncao, getOrigemInfeccao, getDose, getPosologia, email\r\n            ).then((response) => {\r\n                if (response.CreatedMedicalRecord) {\r\n                    showToast('success', 'Sucesso!', `Prontuário criado com sucesso!`);\r\n                    setTimeout(() => {\r\n                        history.push('/medicalRecords')\r\n                    }, 3500)\r\n                } else {\r\n                    if (response.error.sqlMessage) {\r\n                        if (response.error.sqlState == 23000) {\r\n                            if (String(response.error.sqlMessage).includes(\"(`CodDoencaPrincipal`)\") || String(response.error.sqlMessage).includes(\"(`CodDoencaSecundario`)\")) {\r\n                                showToast('error', 'Erro!', `O campo código de doença está incorreto`);\r\n                            }\r\n                            else if (String(response.error.sqlMessage).includes(\"(`CodAtbPrimario`)\") || String(response.error.sqlMessage).includes(\"(`CodAtbSecundario`)\")) {\r\n                                showToast('error', 'Erro!', `O campo código de medicamento está incorreto`);\r\n                            } else {\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        } else {\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    } else {\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Doenças</p>\r\n        </>;\r\n\r\n    const header2 = \r\n    <>\r\n        <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Medicamentos</p>\r\n    </>;\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getDiseasesFunction(data);\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    function getDiseasesFunction(data?: any) {\r\n        setLoading(true);\r\n        if (!data) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setDatasource(data.diseases);\r\n                setTotalRecords(data.length);\r\n                data = data.diseases;\r\n\r\n                setDiseases(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setDatasource(data.diseases);\r\n            setTotalRecords(data.length);\r\n            data = data.diseases;\r\n\r\n            setDiseases(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            diseasesService.getDiseasesPaginate(endIndex).then(data => {\r\n                getDiseasesFunction(data.diseases);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!getOptionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                getDiseasesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        diseasesService.searchDiseasesGlobal(searchInput, getOptionState.cod, first + rows).then(data => {\r\n            if (!data.diseases) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getDiseasesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newDiseases = true\r\n    function onDiseasesSelect (e: any, type: any) {\r\n        newDiseases = false;\r\n        setDiseasesChange(e.value)\r\n        DiseasesData = e.data;\r\n        if(type == 1){\r\n            setCodDoencaPrincipal(DiseasesData.CodDoenca) \r\n        }\r\n        if(type == 2){\r\n            setCodDoencaSecundario(DiseasesData.CodDoenca)\r\n        }\r\n        setTimeout(() => {\r\n            setDisplayDialog(false)\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords2(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage2 = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex2 = event.first2;\r\n            const endIndex2 = event.first2 + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex2).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst2(startIndex2);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch2() {\r\n        if (!getOptionState2) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput2) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode2('S');\r\n        medicinesService.searchMedicineGlobal(searchInput2, getOptionState2.cod, first2 + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newMedicines = true\r\n    function onMedicinesSelect (e: any, type: any) {\r\n        newMedicines = false;\r\n        setMedicinesChange(e.value)\r\n        MedicinesData = e.data;\r\n        if(type == 1){\r\n            setCodAtbPrimario(MedicinesData.EAN) \r\n        }\r\n        if(type == 2){\r\n            setCodAtbSecundario(MedicinesData.EAN)\r\n        }\r\n        setTimeout(() => {\r\n            setDisplayDialog2(false)\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Prontuário</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"NroProntuario\">Número do Prontuário</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"NroProntuario\" name=\"NroProntuario\"\r\n                                    defaultValue={getNroProntuario} onChange={(e) => setNroProntuario(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número do prontuário\" min=\"1\" max=\"999999999\" required autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"SeqPaciente\">Sequência do Paciente</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"SeqPaciente\" name=\"SeqPaciente\"\r\n                                    defaultValue={getSeqPaciente} onChange={(e) => setSeqPaciente(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número do paciente\" min=\"1\" max=\"999999999\" required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"Origem\">Origem</label>\r\n                                <InputText style={{ width: '100%' }} id=\"Origem\" name=\"Origem\"\r\n                                    defaultValue={getOrigem} onChange={(e) => setOrigem((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a origem\" required />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"Alocacao\">Alocação</label>\r\n                                <InputText style={{ width: '100%' }} id=\"Alocacao\" name=\"Alocacao\"\r\n                                    defaultValue={getAlocacao} onChange={(e) => setAlocacao((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a alocação\" required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"DataInternacao\" className=\"mt-4\">Data da Internação</label>\r\n                        <Calendar id=\"DataInternacao\" style={{ width: '100%' }} value={getDataInternacao}\r\n                            onChange={(e) => setDataInternacao(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\"\r\n                            placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator yearNavigator yearRange=\"1910:2021\" monthNavigatorTemplate={monthNavigatorTemplate} yearNavigatorTemplate={yearNavigatorTemplate}\r\n                            showIcon showOnFocus={false} required touchUI />\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodDoencaPrincipal\" className=\"mt-4 ml-1\">Código de Doença Primário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodDoencaPrincipal\" name=\"CodDoencaPrincipal\"\r\n                                defaultValue={getCodDoencaPrincipal} onChange={(e) => setCodDoencaPrincipal((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o código de doença primário\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true); setType(1);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodDoencaSecundario\" className=\"mt-4 ml-1\">Código de Doença Secundário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodDoencaSecundario\" name=\"CodDoencaSecundario\"\r\n                                defaultValue={getCodDoencaSecundario} onChange={(e) => { checkInput(1, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o código de doença secundário\" />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true); setType(2);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"SistemaAcometido\" className=\"mt-4\">Sistema Acometido</label>\r\n                        <InputText style={{ width: '100%' }} id=\"SistemaAcometido\" name=\"SistemaAcometido\"\r\n                            defaultValue={getSistemaAcometido} onChange={(e) => setSistemaAcometido((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite o sistema acometido\" required />\r\n\r\n                        <label htmlFor=\"CodComorbidade\" className=\"mt-4\">Código de Comorbidade</label>\r\n                        <InputText style={{ width: '100%' }} id=\"CodComorbidade\" name=\"CodComorbidade\"\r\n                            defaultValue={getCodComorbidade} onChange={(e) => { checkInput(2, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o código de comorbidade\" />\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodAtbPrimario\" className=\"mt-4 ml-1\">Código de Medicamento Primário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodAtbPrimario\" name=\"CodAtbPrimario\"\r\n                                defaultValue={getCodAtbPrimario} onChange={(e) => setCodAtbPrimario((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o código de medicamento primário\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog2(true); setType(1);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodAtbSecundario\" className=\"mt-4 ml-1\">Código de Medicamento Secundário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodAtbSecundario\" name=\"CodAtbSecundario\"\r\n                                defaultValue={getCodAtbSecundario} onChange={(e) => { checkInput(3, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o código de medicamento secundário\" />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog2(true); setType(2);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"SitioInfeccaoPrimario\" className=\"mt-4\">Sítio de Infecção Primário</label>\r\n                        <InputText style={{ width: '100%' }} id=\"SitioInfeccaoPrimario\" name=\"SitioInfeccaoPrimario\"\r\n                            defaultValue={getSitioInfeccaoPrimario} onChange={(e) => { checkInput(4, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o sítio de infecção primário\" />\r\n\r\n                        <label htmlFor=\"OrigemInfeccao\" className=\"mt-4\">Origem da Infecção</label>\r\n                        <InputText style={{ width: '100%' }} id=\"OrigemInfeccao\" name=\"OrigemInfeccao\"\r\n                            defaultValue={getOrigemInfeccao} onChange={(e) => setOrigemInfeccao((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite a origem da infecção\" required />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"ResultadoColeta\">Resultado Coleta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getResultadoColeta} options={options} onChange={onResultadoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"TratamentoCCIH\">Tratamento CCIH</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getTratamento} options={options} onChange={onTratamentoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"IndicacaoSepse\">Indicação Sepse</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getIndicacao} options={options} onChange={onIndicacaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DisfuncaoRenal\">Disfunção Renal</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDisfuncao} options={options} onChange={onDisfuncaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDose} options={options} onChange={onDoseChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getPosologia} options={options} onChange={onPosologiaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog(false); setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null); setOpen(false)}}>\r\n            <div className=\"form-row\">\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0', height:'41.5px'}}>Buscar doença específica</Button>\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-1\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                {getOptionState === null\r\n                                    ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                    : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {searchInput === ''\r\n                                ? <></>\r\n                                :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                        <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n\r\n            <div className=\"ml-auto\"></div>\r\n            \r\n            <DataTable value={diseases} style={{ margin: 4 }} paginator={true} rows={rows} header={header} \r\n                totalRecords={totalRecords} emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                resizableColumns={true} loading={loading} first={first} onPage={onPage} lazy={true} \r\n                selectionMode=\"single\" selection={selectedDiseases}\r\n                onSelectionChange={e => setSelectedDiseases(e.value)} onRowSelect={(e) => {onDiseasesSelect(e, getType);}} >\r\n                <Column field=\"CodDoenca\" header=\"Código\" style={{ width: '50%', textAlign: 'center' }} />\r\n                <Column field=\"Nome\" header=\"Nome\" style={{ width: '50%', textAlign: 'center' }} />\r\n            </DataTable>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog2(false); setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null); setOpen2(false)}}>\r\n                <div className=\"form-row\">\r\n                    <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen2(!open2)} aria-controls=\"example-collapse-text\" aria-expanded={open2} style={{borderRadius: '0', height:'41.5px'}}>Buscar medicamento específico</Button>\r\n                    <Collapse in={open2} timeout={200}>\r\n                        <div className=\"ml-1\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput2} onChange={(e) => {setSearchInput2((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch2(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState2 === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState2.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput2 === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState2} options={options3} onChange={onOptionChange2} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch2} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <DataTable value={medicines} paginator={true} rows={rows}\r\n                    header={header2} totalRecords={totalRecords2}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true} loading={loading} first={first2} onPage={onPage2} lazy={true}\r\n                    selectionMode=\"single\" selection={selectedMedicines}\r\n                    onSelectionChange={e => setSelectedMedicines(e.value)} onRowSelect={(e) => {onMedicinesSelect(e, getType);}}>\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"33.4%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicalRecordsForm;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GiMedicines, GiVirus } from 'react-icons/gi';\r\nimport { BsFillPeopleFill } from 'react-icons/bs';\r\n\r\nconst Registrations = () => {\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Cadastro';\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p className=\"h3 text-center\">Cadastros</p>\r\n            <div className=\"mx-5 p-3 mt-0 pt-0 row\">\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/patient\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <BsFillPeopleFill className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>PACIENTES</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/medicines\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <GiMedicines className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>MEDICAMENTOS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/diseases\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <GiVirus className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>DOENÇAS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registrations;","import api from '../../../services/api';\r\nimport Patient from './Patient';\r\n\r\nclass PatientService {\r\n    async getPatientPaginate(endIndex: Number) {\r\n        return await api.get(`patient/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async getPatientInformation(idPatient: Number) {\r\n        return await api.get(`patient/search/searchPatientData/?id=${idPatient}&page=10`).then(response => response.data);\r\n    }\r\n\r\n    async updatePatientInformation(IdPaciente: Number, NomePaciente: string, Genero: string, DataNascimento: Date, email:any) {\r\n        return await api.put(`/patient/update/${IdPaciente}`, { NomePaciente, Genero, DataNascimento, email}).then(response => {\r\n            return response.data;\r\n        }).catch((err) => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async deletePatient(IdPaciente: Number, email:any) {\r\n        return await api.delete(`/patient/delete/${IdPaciente}/${email}`).then(response => {\r\n            return response.data;\r\n        }).catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async searchPatientGlobal(searchKey: String, searchCode: String, first: number){\r\n        if (searchCode === 'Name') {\r\n            return await api.get(`/patient/name/?name=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Nro') {\r\n            return await api.get(`/patient/id/?nroPaciente=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Nas') {\r\n            return await api.get(`/patient/birthday/?dataNascimento=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport { PatientService };","import { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport React, { useEffect, useState, FormEvent } from 'react';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../../../components/Loading';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { PatientService } from './PatientService';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiRefreshCcw, FiSearch} from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport * as Yup from \"yup\";\r\n\r\nimport './Patient.css';\r\n\r\nconst Patient = (props: any) => {\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [loading1, setLoading1] = useState<boolean>(false);\r\n    const [getFirst, setFirst] = useState(0);\r\n\r\n    const rows = 10;\r\n    let newUser = false;\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [paciente, setPaciente] = useState([]);\r\n    const [getPacienteSelect, setPacienteSelect] = useState<any>(null);\r\n\r\n    //const para listagem\r\n    const [getPacienteSeq, setPacienteSeq] = useState<any>('');\r\n    const [getPacienteNro, setPacienteNro] = useState<any>('');\r\n    const [getPacienteGenero, setPacienteGenero] = useState<any>('');\r\n    const [getPacienteNome, setPacienteNome] = useState<any>('');\r\n    const [getPacienteDataNascimento, setPacienteDataNascimento] = useState<any>('');\r\n    const [getPacienteProntuario, setPacienteProntuario] = useState<any>();\r\n    const [getPacienteAvalicao, setPacienteAvaliacao] = useState<any>();\r\n\r\n    const [getPacienteIdade, setPacienteIdade] = useState<any>('');\r\n\r\n    const [selectedUser, setSelectedUser] = useState<any>(null);\r\n\r\n    const patientService = new PatientService();\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    //const para atualizacao\r\n    const [getPacienteNomeUpdate, setPacienteNomeUpdate] = useState<any>('');\r\n    const [getPacienteDataNascimentoUpdate, setPacienteDataNascimentoUpdate] = useState<any>('');\r\n    const [getPacienteGeneroUpdate, setPacienteGeneroUpdate] = useState<any>('');\r\n\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    let optionsDropdownGenero = [\r\n        { label: 'Masculino', value: 'M' },\r\n        { label: 'Feminino', value: 'F' }\r\n    ];\r\n\r\n    //Calendario local\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Paciente';\r\n        try {\r\n            // console.log(props)\r\n            // const id = props.match.params.idPatient\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        getPatientFunction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            patientService.getPatientPaginate(endIndex).then(response => getPatientFunction(response))\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        }, 300);\r\n    }\r\n    function getPatientFunction1(data: any) {\r\n        setDatasource(data.patients);\r\n        let dataSize = data.length[0]['count(`NroPaciente`)']\r\n        setTotalRecords(dataSize);\r\n        data = data.patients;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i]['Genero'] === 'M') {\r\n                data[i]['Genero'] = 'Masculino';\r\n            } else if (data[i]['Genero'] === 'F') {\r\n                data[i]['Genero'] = 'Feminino';\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setPaciente(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n        }, 500);\r\n        return\r\n    }\r\n\r\n    async function getPatientFunction(data?: any) {\r\n        setLoading(true);\r\n        setLoading1(true);\r\n        if (!data) {\r\n            await patientService.getPatientPaginate(10).then(data => {\r\n                if (data.patientFound) {\r\n                    getPatientFunction1(data);\r\n                } else {\r\n                    showToast('error', 'Erro!', 'Nenhum paciente encontrado.');\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                }\r\n            })\r\n        } else {\r\n            getPatientFunction1(data);\r\n        }\r\n    }\r\n\r\n    async function getPatientInformation() {\r\n        var tempoAtual = new Date();\r\n        var parseDataAniversario = getPacienteDataNascimento.split('/')\r\n        var dataAniversario = new Date(parseDataAniversario[2], parseDataAniversario[1], parseDataAniversario[0]);\r\n        var age = tempoAtual.getFullYear() - dataAniversario.getFullYear();\r\n        var m = tempoAtual.getMonth() - dataAniversario.getMonth();\r\n        if (m < 0 || (m === 0 && tempoAtual.getDate() < dataAniversario.getDate())) {\r\n            age--;\r\n        }\r\n        if (age < 0) {\r\n            setPacienteIdade(0);\r\n        } else {\r\n            setPacienteIdade(age);\r\n        }\r\n\r\n        await patientService.getPatientInformation(getPacienteSeq).then(response => {\r\n            if (response.patientFound) {\r\n                setPacienteProntuario(response.medicalRecordsLength);\r\n                setPacienteAvaliacao(response.assessmentLength);\r\n            } else {\r\n                showToast('error', \"Erro!\", response.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    function getPatientInformationUpdate() {\r\n        setPacienteNomeUpdate(getPacienteNome);\r\n        var parseDataAniversario = getPacienteDataNascimento.split('/')\r\n        var dataNascimento = new Date(parseDataAniversario[2], parseDataAniversario[1] - 1, parseDataAniversario[0]);\r\n        setPacienteDataNascimentoUpdate(dataNascimento);\r\n        setPacienteGeneroUpdate(getPacienteGenero[0]);\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n            const data = {\r\n                getPacienteNomeUpdate,\r\n                getPacienteDataNascimentoUpdate,\r\n                getPacienteGeneroUpdate\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                getPacienteNomeUpdate: Yup.string().required(),\r\n                getPacienteDataNascimentoUpdate: Yup.date().required(),\r\n                getPacienteGeneroUpdate: Yup.string().nullable().oneOf([null, \"M\", \"F\"]).required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            patientService.updatePatientInformation(getPacienteSeq, getPacienteNomeUpdate, getPacienteGeneroUpdate, getPacienteDataNascimentoUpdate, email).then(response => {\r\n                if (response.updatedPatient) {\r\n                    showToast('success', \"Atualização!\", \"Paciente atualizado com sucesso.\");\r\n                    setDisplayDialog2(false);\r\n                    getPatientFunction();\r\n                } else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            });\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    async function deletePatient() {\r\n        await patientService.deletePatient(getPacienteSeq, email).then(response => {\r\n            if (response.deletedPatient) {\r\n                showToast('success', \"Atualização!\", \"Paciente excluído com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getPatientFunction();\r\n            } else {\r\n                console.log(response.error)\r\n                if (response.error.code) {\r\n                    showToast('error', \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const onUserSelect = (e: any) => {\r\n        newUser = false;\r\n        setPacienteSelect(Object.assign({}, e.data));\r\n        var pacienteData = e.data;\r\n        setPacienteDataNascimento(pacienteData.DataNascimento);\r\n        setPacienteNome(pacienteData.NomePaciente);\r\n        setPacienteGenero(pacienteData.Genero);\r\n        setPacienteNro(pacienteData.NroPaciente);\r\n        setPacienteSeq(pacienteData.SeqPaciente);\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    const onGeneroChange = (e: { value: string }) => {\r\n        setPacienteGeneroUpdate(e.value);\r\n    };\r\n\r\n    const seqPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">SeqPaciente</span>\r\n                <a>{rowData.SeqPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const nroPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">NroPaciente</span>\r\n                <a>{rowData.NroPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const generoPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Genero</span>\r\n                <a>{rowData.Genero}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const nomePacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">NomePaciente</span>\r\n                <a>{rowData.NomePaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const dataNascimentoPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">DataNascimento</span>\r\n                <a>{rowData.DataNascimento}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    let options2 = [\r\n        {name: 'Nome', cod: 'Name'},\r\n        {name: 'Nro Paciente', cod: 'Nro'},\r\n        {name: 'Data Nascimento', cod: 'Nas'}\r\n    ];\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            patientService.getPatientPaginate(10).then(data => {\r\n                getPatientFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        patientService.searchPatientGlobal(searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.patientFound){\r\n                setLoading(false);\r\n                setPaciente([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getPatientFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nome'){\r\n                searchType = 'NomePaciente';\r\n            }else if(getOptionState.name === 'Nro Paciente'){\r\n                searchType = 'NroPaciente';\r\n            }else if(getOptionState.name === 'Data Nascimento'){\r\n                searchType = 'DataNascimento'\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            console.log(data)\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    const header = (\r\n        <>\r\n            <a className=\"d-inline h6\">Paciente(s)</a>\r\n            <Button variant=\"success\" className=\"float-right mr-lg-2\" title=\"Atualizar\" disabled={loading} onClick={() => {getPatientFunction(); showToast('info', 'Notificação', `Foram encontrados ${totalRecords} resultados.`)}}>\r\n                {loading\r\n                    ?\r\n                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                    : \r\n                        <FiRefreshCcw size={20}/>\r\n                }\r\n            </Button>\r\n        </>    \r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n            <Link to={location => ({ ...location, pathname: '/registrations/patient/create' })}><Button variant=\"outline-dark\" className=\"mb-2\" style={{ borderRadius: '0', height: '41.5px' }}>Cadastrar Paciente</Button></Link>\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar paciente específico</Button>\r\n                    <Collapse in={open} timeout={200}>\r\n                        <div className=\"ml-2\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getPatientFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable value={paciente} paginator={true} rows={rows} header={header} totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" style={{\"minWidth\": \"300px\"}} resizableColumns={true} loading={loading}\r\n                        first={getFirst} onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedUser} onSelectionChange={e => setSelectedUser(e.value)}\r\n                        onRowSelect={onUserSelect}>\r\n                        <Column field=\"SeqPaciente\" header=\"SeqPaciente\" body={seqPacienteBodyTemplate} />\r\n                        <Column field=\"NroPaciente\" header=\"NroPaciente\" body={nroPacienteBodyTemplate} />\r\n                        <Column field=\"Genero\" header=\"Gênero\" body={generoPacienteBodyTemplate} />\r\n                        <Column field=\"NomePaciente\" header=\"NomePaciente\" body={nomePacienteBodyTemplate} />\r\n                        <Column field=\"DataNascimento\" header=\"DataNascimento\" body={dataNascimentoPacienteBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Dialog visible={displayDialog} style={{ width: '50%' }} header=\"Ações\" modal={true} onHide={() => {setDisplayDialog(false); setSelectedUser(null)}}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { getPatientInformation(); setDisplayDialog1(true); setDisplayDialog(false); setSelectedUser(null) }}>Visualizar Paciente</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { getPatientInformationUpdate(); setDisplayDialog2(true); setDisplayDialog(false); setSelectedUser(null) }}>Atualizar paciente</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { setDisplayDialog3(true); setDisplayDialog(false); setSelectedUser(null) }}>Excluir Paciente</Button>\r\n                    </div>\r\n                    {/* <div className=\"col mr-4\">\r\n                        <Button className=\"mx-2 mt-2 mb-2 p-3\" onClick={() => {setDisplayDialog1(true); setDisplayDialog(false)}}>Atualizar <br></br> prontuário</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col\">\r\n                        <Button className=\"mx-2 mt-2 mb-2 mr-2 p-3\" onClick={() => {setDisplayDialog2(true); setDisplayDialog(false)}}>Excluir <br></br> prontuário</Button>\r\n                    </div> */}\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* Caixa de dialogo de listagem de paciente */}\r\n            <Dialog visible={displayDialog1} style={{ width: '50%' }} modal={true} onHide={() => setDisplayDialog1(false)} maximizable>\r\n                <p className=\"text-dark h5 mt-2\">Número: {getPacienteNro}</p>\r\n                <p className=\"text-dark h5 mt-2\">Sequência: {getPacienteSeq}</p>\r\n                <p className=\"text-dark h5 mt-2\">Nome: {getPacienteNome}</p>\r\n                {getPacienteIdade > 1\r\n                    ? <p className=\"text-dark h5 mt-2\">Idade: {getPacienteIdade} anos</p>\r\n                    : <p className=\"text-dark h5 mt-2\">Idade: {getPacienteIdade} ano</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-2\">Data de nascimento: {getPacienteDataNascimento}</p>\r\n                <p className=\"text-dark h5 mt-2\">Gênero: {getPacienteGenero}</p>\r\n                <br></br>\r\n                <p className=\"text-dark h5 mt-2\">Quantidade de <b>Prontuários</b>: {getPacienteProntuario}</p>\r\n                <p className=\"text-dark h5 mt-2\">Quantidade de <b>Avaliações</b>: {getPacienteAvalicao}</p>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{ width: '70%' }} modal={true} onHide={() => setDisplayDialog2(false)} maximizable maximized>\r\n                <p className=\"text-dark h3 text-center\">Atualização dos dados do(a) paciente {getPacienteNome}</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"NomeUpdate\" style={{ width: '100%' }} value={getPacienteNomeUpdate} onChange={(e) => setPacienteNomeUpdate((e.target as HTMLInputElement).value)} />\r\n                            <label htmlFor=\"NomeUpdate\">Nome</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Dropdown className=\"my-2\" value={getPacienteGeneroUpdate} options={optionsDropdownGenero} onChange={onGeneroChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Calendar id=\"DataInternacao\" className=\"mt-2\" style={{ width: '100%' }} value={getPacienteDataNascimentoUpdate} onChange={(e) => setPacienteDataNascimentoUpdate(e.value)}\r\n                                locale=\"pt\" dateFormat=\"dd/mm/yy\" placeholder=\"Selecione a data de nascimento do paciente\" showButtonBar monthNavigator showIcon showOnFocus={false} required/>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog3} style={{ width: '50%' }} modal={true} header=\"Exclusão de paciente\" onHide={() => setDisplayDialog3(false)}>\r\n                <p className=\"text-dark h5 mt-2\">Deseja exluir o paciente {getPacienteNome} de código {getPacienteSeq}?</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-danger\" onClick={() => deletePatient()} style={{ width: '100%' }}>Sim</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Patient;","import api from '../../../../services/api';\r\n\r\nclass CreatePatientService{\r\n    async create(NroPaciente: Number, NomePaciente: String, DataNascimento: String, GeneroPaciente: String, email: any) {\r\n        return await api.post('/patient', {NroPaciente, NomePaciente, DataNascimento, Genero: GeneroPaciente, email}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport {CreatePatientService};","import React, { FormEvent, useState } from 'react';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { CreatePatientService } from './CreatePatientService';\r\nimport { Button } from 'primereact/button';\r\nimport ToastComponent from '../../../../components/Toast';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { addLocale } from 'primereact/api';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst PatientCreate = () => {\r\n    const history = useHistory();\r\n\r\n    const [getNroPaciente, setNroPaciente] = useState<any>();\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>();\r\n    const [getNomePaciente, setNomePaciente] = useState<any>();\r\n    const [getDataNascimentoPaciente, setDataNascimentoPaciente] = useState<any>();\r\n    const [getGeneroPaciente, setGeneroPaciente] = useState<any>();\r\n    \r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 1;\r\n    let prevYear = (prevMonth === 11) ? year - 1 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    const [date, setDate] = useState<Date | Date[] | undefined>(undefined);\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n\r\n    const createPatientService = new CreatePatientService();\r\n    \r\n    let optionsDropdown = [\r\n        { label: 'Masculino', value: 'M' },\r\n        { label: 'Feminino', value: 'F' }\r\n    ];\r\n\r\n    const onGeneroChange = (e: { value: string }) => {\r\n        setGeneroPaciente(e.value);\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n            const data = {\r\n                getNroPaciente,\r\n                getNomePaciente,\r\n                getDataNascimentoPaciente,\r\n                getGeneroPaciente\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                getNroPaciente: Yup.number().required(),\r\n                getNomePaciente: Yup.string().required(),\r\n                getDataNascimentoPaciente: Yup.date().required(),\r\n                getGeneroPaciente: Yup.string().nullable().oneOf([null, \"M\", \"F\"]).required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            \r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createPatientService.create(getNroPaciente, getNomePaciente, getDataNascimentoPaciente, getGeneroPaciente, email).then((response) => {\r\n                if (response.createdPatient) {\r\n                    history.push('/registrations/patient');\r\n                } else {\r\n                    if (response.err) {\r\n                        showToast('error', 'Erro!', response.error + ' ' + String(response.err.code));\r\n                    } else {\r\n                        showToast('error', 'Erro!', response.error);\r\n                    }\r\n                }\r\n            })\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n}\r\n      \r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row m-5\">\r\n                <div className=\"card shadow-lg p-3 col-sm-8 offset-md-2 border\">\r\n                    <p className=\"text-dark h3 text-center\">Cadastro de Paciente</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <label htmlFor=\"NroProntuario\">Número do Paciente</label>\r\n                                    <br></br>\r\n                                    <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroProntuario\" name=\"NroProntuario\" defaultValue={getNroPaciente} \r\n                                        onChange={(e) => setNroPaciente(Number((e.target as HTMLInputElement).value))} placeholder=\"Digite o número do paciente\"\r\n                                        required autoFocus/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"DataInternacao\">Data de Nascimento</label>\r\n                                    <br></br>\r\n                                    <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataNascimentoPaciente} onChange={(e) => setDataNascimentoPaciente(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\" placeholder=\"Selecione a data de nascimento do paciente\" showButtonBar monthNavigator yearNavigator yearRange=\"1910:2021\" showIcon showOnFocus={false} touchUI required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"Nome\" className=\"mt-4\">Nome</label>\r\n                            <br></br>\r\n                            <InputText  style={{width: '100%'}} id=\"Nome\" name=\"Nome\" defaultValue={getNomePaciente} onChange={(e) => setNomePaciente((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o nome do paciente\" required/>\r\n                            \r\n                            <label htmlFor=\"Genero\" className=\"mt-4\">Gênero</label>\r\n                            <br></br>\r\n                            <Dropdown className=\"\" value={getGeneroPaciente} options={optionsDropdown} onChange={onGeneroChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                    </form>\r\n                    {getToast &&\r\n                        <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PatientCreate;","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { DiseasesService } from './DiseasesService';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst Diseases = () => {\r\n    const [diseases, setDiseases] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n\r\n    const diseasesService = new DiseasesService();\r\n    const rows = 10;\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [mode, setMode] = useState('N');\r\n    const [toast, setToast] = useState<boolean>();\r\n    const [messageType, setMessageType] = useState<string>('');\r\n    const [messageTitle, setMessageTitle] = useState<string>('');\r\n    const [messageContent, setMessageContent] = useState<string>('');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [displayDialogs, setDisplayDialogs] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [codDoenca, setCodDoenca] = useState<any>('');\r\n    const [nome, setNome] = useState<any>('');\r\n\r\n    var diseaseData:any = {}\r\n\r\n    const [updatedCodDoenca, setUpdatedCodDoenca] = useState<any>('');\r\n    const [updatedNome, setUpdatedNome] = useState<any>('');\r\n\r\n    const [selectedRow, setSelectedRow] = useState<any>(null);\r\n    const [selectedDisease, setSelectedDisease] = useState<any>(null);\r\n\r\n    function getDiseasesFunction(data?: any) {\r\n        setLoading(true);\r\n        \r\n        if (!data) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setDatasource(data.diseases);\r\n                setTotalRecords(data.length);\r\n                data = data.diseases;\r\n\r\n                setDiseases(data.slice(0, rows));\r\n                setLoading(false);\r\n\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setDatasource(data.diseases);\r\n            setTotalRecords(data.length);\r\n            data = data.diseases;\r\n\r\n            setDiseases(data.slice(0, rows));\r\n            setLoading(false);\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getDiseasesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            diseasesService.getDiseasesPaginate(endIndex).then(data => {\r\n                getDiseasesFunction(data.diseases);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            showToast(\"error\", \"Erro!\", \"Selecione um filtro para buscar.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                getDiseasesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        diseasesService.searchDiseasesGlobal(searchInput, optionState.cod, first + rows).then(data => {\r\n            if (!data.diseases) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getDiseasesFunction(data);\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => { setToast(false) }, 4500);\r\n    }\r\n\r\n    function onUserSelect(e: any) {\r\n        setSelectedDisease(Object.assign({}, e.data));\r\n\r\n        diseaseData = e.data;\r\n        console.log(e.data);\r\n\r\n        setCodDoenca(diseaseData.CodDoenca);\r\n        setNome(diseaseData.Nome);\r\n        setDisplayDialogs(true);\r\n        console.log(codDoenca, nome);\r\n    };\r\n\r\n    function updateDisease() {\r\n        setUpdatedCodDoenca(codDoenca);\r\n        setUpdatedNome(nome);\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n\r\n            const data = {updatedCodDoenca, updatedNome};\r\n            const schema = Yup.object().shape({\r\n                up: Yup.string().required(),\r\n                updatedCodDoenca: Yup.string().required(),\r\n                updatedNome: Yup.string().required()\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n\r\n            diseasesService.updateDisease(updatedCodDoenca, updatedNome).then(response => {\r\n                if (response.updatedDisease) {\r\n                    showToast(\"success\", \"Atualização!\", \"Doença atualizada com sucesso.\");\r\n                    setDisplayDialog2(false);\r\n                    getDiseasesFunction();\r\n                } \r\n                else {\r\n                    showToast(\"error\", \"Erro!\", String(response.error));\r\n                }\r\n            });\r\n        } \r\n        catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    async function deleteDisease() {\r\n        await diseasesService.deleteDisease(codDoenca).then(response => {\r\n\r\n            if (response.deletedDisease) {\r\n                showToast(\"success\", \"Atualização!\", \"Doença excluída com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getDiseasesFunction();\r\n            } \r\n            else {\r\n                console.log(response.error);\r\n\r\n                if (response.error.code) {\r\n                    showToast(\"error\", \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } \r\n                else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({ ...location, pathname: '/registrations/diseases/create' })}>\r\n                    <Button \r\n                        variant=\"outline-dark\" \r\n                        className=\"mr-2 mb-2\" \r\n                        style={{ borderRadius: '0', height:'41.5px' }}\r\n                    >\r\n                        Cadastrar Doença\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    className=\"mr-2 mb-2\"\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => setOpen(!open)}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    style={{ borderRadius: '0', height:'41.5px' }}\r\n                >\r\n                    Buscar doença específica\r\n                </Button>\r\n                <Collapse className=\"mb-2\" in={open} timeout={200}>\r\n                    <div>\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label mr-2\">\r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={searchInput}\r\n                                    onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }}\r\n                                    onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }}\r\n                                    style={{ minWidth: '4em', borderRadius: '0', height:'41.5px' }}\r\n                                />\r\n                                {\r\n                                    optionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {optionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {\r\n                                searchInput === ''\r\n                                    ? <></>\r\n                                    : <>\r\n                                        <Dropdown\r\n                                            className=\"mr-2\"\r\n                                            value={optionState}\r\n                                            options={[\r\n                                                { name: 'Código', cod: 'C' },\r\n                                                { name: 'Nome', cod: 'N' },\r\n                                            ]}\r\n                                            onChange={(e: { value: any }) => setOptionState(e.value)}\r\n                                            placeholder=\"Selecione um filtro\"\r\n                                            optionLabel=\"name\"\r\n                                            style={{ width: '12em' }}\r\n                                        />\r\n                                        <Button\r\n                                            tabIndex={2}\r\n                                            variant=\"outline-danger\"\r\n                                            className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                                            style={{ borderRadius: '0' }}\r\n                                            onClick={() => { setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null) }}\r\n                                        >\r\n                                            <AiOutlineClose size={18} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={handleSearch}\r\n                                            style={{ borderRadius: '0' }}\r\n                                            className=\"d-inline-flex justify-content-center align-items-center\"\r\n                                        >\r\n                                            <FiSearch size={18} />\r\n                                        </Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n\r\n                <DataTable\r\n                    value={diseases}\r\n                    paginator={true}\r\n                    rows={rows}\r\n                    header={<h5 className=\"py-1\">Tabela de doenças</h5>}\r\n                    totalRecords={totalRecords}\r\n                    emptyMessage=\"Nenhum resultado encontrado\"\r\n                    className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true}\r\n                    loading={loading}\r\n                    first={first}\r\n                    onPage={onPage}\r\n                    lazy={true}\r\n                    selectionMode=\"single\" \r\n                    selection={selectedRow} \r\n                    onSelectionChange={(e) => setSelectedRow(e.value)}\r\n                    onRowSelect={(e) => onUserSelect(e)}\r\n                >\r\n                    <Column field=\"CodDoenca\" header=\"Código\" style={{ width: '8%', textAlign: 'center' }} />\r\n                    <Column field=\"Nome\" header=\"Nome\" style={{ width: '20%', textAlign: 'center' }} />\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog \r\n                visible={displayDialogs} \r\n                style={{ width: '50%' }} \r\n                header=\"Ações\" \r\n                modal={true} \r\n                onHide={() => setDisplayDialogs(false)}\r\n            >\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button \r\n                            variant=\"info\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                setDisplayDialog1(true); \r\n                                setDisplayDialogs(false);\r\n                            }}\r\n                        >\r\n                            Visualizar doença\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"col ml-2\">\r\n                        <Button \r\n                            variant=\"primary\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                updateDisease(); \r\n                                setDisplayDialog2(true); \r\n                                setDisplayDialogs(false) \r\n                            }}\r\n                        >\r\n                            Atualizar doença\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                    <div className=\"col ml-2\">\r\n                        <Button \r\n                            variant=\"danger\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                setDisplayDialog3(true); \r\n                                setDisplayDialogs(false) \r\n                            }}\r\n                        >\r\n                            Excluir doença\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* Caixa de dialogo de listagem de doenças */}\r\n            <Dialog \r\n                visible={displayDialog1} \r\n                style={{ width: '50%' }} \r\n                modal={true} \r\n                onHide={() => setDisplayDialog1(false)} \r\n                maximizable\r\n            >\r\n                <p className=\"text-dark h5 mt-2\">Código: {codDoenca}</p>\r\n                <p className=\"text-dark h5 mt-2\">Nome: {nome}</p>\r\n            </Dialog>\r\n\r\n            <Dialog \r\n                visible={displayDialog2} \r\n                style={{ width: '70%' }} \r\n                modal={true} \r\n                onHide={() => setDisplayDialog2(false)} \r\n                maximizable maximized\r\n            >\r\n                <p className=\"text-dark h3 text-center\">Atualização dos dados da doença {nome}</p>\r\n                \r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText \r\n                                id=\"codeUpdate\" \r\n                                style={{ width: '100%' }} \r\n                                value={updatedCodDoenca} \r\n                                onChange={(e) => setUpdatedCodDoenca((e.target as HTMLInputElement).value)} \r\n                            />\r\n                            <label htmlFor=\"NomeUpdate\">Código da doença</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText \r\n                                id=\"nameUpdate\" \r\n                                style={{ width: '100%' }} \r\n                                value={updatedNome} \r\n                                onChange={(e) => setUpdatedNome((e.target as HTMLInputElement).value)} \r\n                            />\r\n                            <label htmlFor=\"NomeUpdate\">Nome da doença</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog \r\n                visible={displayDialog3} \r\n                style={{ width: '50%' }} \r\n                modal={true}\r\n                header=\"Exclusão de doença\" \r\n                onHide={() => setDisplayDialog3(false)}\r\n            >\r\n                <p className=\"text-dark h5 mt-2\">Deseja exluir a doença {nome} de código {codDoenca}?</p>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-danger\" onClick={() => deleteDisease()} style={{ width: '100%' }}>Sim</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Diseases;","import api from '../../../../services/api';\r\n\r\nclass CreateDiseaseService {\r\n\r\n    async Create(\r\n        codDoenca: string,\r\n        nome: string,\r\n        email:any\r\n    ) {\r\n        return await api.post('diseases', {\r\n            codDoenca,\r\n            nome,\r\n            email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateDiseaseService };","import React, { useState, FormEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from \"yup\";\r\n\r\nimport ToastComponent from \"../../../../components/Toast\";\r\n\r\nimport { CreateDiseaseService } from './CreateDiseaseService';\r\n\r\nconst DiseasesCreate = () => {\r\n\r\n    const [codDoenca, setCodDoeca] = useState<string>('');\r\n    const [nome, setNome] = useState<string>('');\r\n\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const createDiseaseService = new CreateDiseaseService();\r\n\r\n   async function handleSubmit(event: FormEvent) {\r\n       try {\r\n            event.preventDefault();\r\n            const data = {\r\n                codDoenca,\r\n                nome,\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                codDoenca: Yup.string().required(),\r\n                nome: Yup.string().required()\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n\r\n            createDiseaseService.Create(\r\n                codDoenca,\r\n                nome,\r\n                email\r\n            ).then(() => {\r\n                HandleToast(\"success\", \"Sucesso!\", \"Doença criada com sucesso!\");\r\n                history.push('/registrations/diseases');\r\n            });\r\n\r\n        } \r\n        catch (err) {\r\n            if (err instanceof Yup.ValidationError) HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Doenças</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"codDoenca\" className=\"mt-4\">Código da doença</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"codDoenca\"\r\n                                    name=\"codDoenca\"\r\n                                    defaultValue={codDoenca}\r\n                                    onChange={(e) => setCodDoeca((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Código da doença\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"nome\" className=\"mt-4\">Nome da doença</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"nome\"\r\n                                    name=\"nome\"\r\n                                    defaultValue={nome}\r\n                                    onChange={(e) => setNome((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Nome da doença\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-2\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        { \r\n            toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            ) \r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiseasesCreate;","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MedicinesService } from './MedicinesService';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst Medicines = () => {\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n\r\n    const medicinesService = new MedicinesService();\r\n    const rows = 10;\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [mode, setMode] = useState('N');\r\n    const [toast, setToast] = useState<boolean>();\r\n    const [messageType, setMessageType] = useState<string>('');\r\n    const [messageTitle, setMessageTitle] = useState<string>('');\r\n    const [messageContent, setMessageContent] = useState<string>('');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [displayDialogs, setDisplayDialogs] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [ean, setEan] = useState<any>('');\r\n\r\n    var medicineData:any = {}\r\n\r\n    const [updatedEan, setUpdatedEan] = useState<any>('');\r\n\r\n    const [selectedRow, setSelectedRow] = useState<any>(null);\r\n    const [selectedMedicine, setSelectedMedicine] = useState<any>(null);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                console.log(data);\r\n\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            console.log(data);\r\n\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        medicinesService.searchMedicineGlobal(searchInput, optionState.cod, first + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => { setToast(false) }, 4500);\r\n    }\r\n\r\n    function onUserSelect(e: any) {\r\n        setSelectedMedicine(Object.assign({}, e.data));\r\n\r\n        medicineData = e.data;\r\n        console.log(e.data);\r\n\r\n        setEan(medicineData.EAN);\r\n        setDisplayDialogs(true);\r\n    };\r\n\r\n    function updateMedicine() {\r\n        setUpdatedEan(ean);\r\n    }\r\n\r\n    // async function handleSubmit(event: FormEvent) {\r\n    //     try {\r\n    //         event.preventDefault();\r\n\r\n    //         const data = {};\r\n    //         const schema = Yup.object().shape({\r\n    //             up: Yup.string().required(),\r\n    //             updatedCodDoenca: Yup.string().required(),\r\n    //             updatedNome: Yup.string().required()\r\n    //         })\r\n\r\n    //         await schema.validate(data, { abortEarly: false });\r\n\r\n    //         medicinesService.updateMedicine().then(response => {\r\n    //             if (response.updatedMedicine) {\r\n    //                 showToast(\"success\", \"Atualização!\", \"Medicamento atualizado com sucesso.\");\r\n    //                 setDisplayDialog2(false);\r\n    //                 getMedicinesFunction();\r\n    //             } \r\n    //             else {\r\n    //                 showToast(\"error\", \"Erro!\", String(response.error));\r\n    //             }\r\n    //         });\r\n    //     } \r\n    //     catch (err) {\r\n    //         if (err instanceof Yup.ValidationError) {\r\n    //             showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n    //         }\r\n    //         else return;\r\n    //     }\r\n    // }\r\n\r\n    async function deleteMedicine() {\r\n        await medicinesService.deleteMedicine(ean).then(response => {\r\n\r\n            if (response.deletedMedicine) {\r\n                showToast(\"success\", \"Atualização!\", \"Medicamento excluído com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getMedicinesFunction();\r\n            } \r\n            else {\r\n                console.log(response.error);\r\n\r\n                if (response.error.code) {\r\n                    showToast(\"error\", \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } \r\n                else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({ ...location, pathname: '/registrations/medicines/create' })}>\r\n                    <Button \r\n                        variant=\"outline-dark\" \r\n                        className=\"mr-2 mb-2\" \r\n                        style={{ borderRadius: '0', height:'41.5px' }}\r\n                    >\r\n                        Cadastrar Medicamento\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    className=\"mr-2 mb-2\"\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => setOpen(!open)}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    style={{ borderRadius: '0', height:'41.5px' }}\r\n                >\r\n                    Buscar medicamento específico\r\n                </Button>\r\n                <Collapse className=\"mb-2\" in={open} timeout={200}>\r\n                    <div>\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label mr-2\"> \r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={searchInput}\r\n                                    onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }}\r\n                                    onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }}\r\n                                    style={{ minWidth: '4em', borderRadius: '0', height:'41.5px' }}\r\n                                />\r\n                                {\r\n                                    optionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {optionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {\r\n                                searchInput === ''\r\n                                    ? <></>\r\n                                    : <>\r\n                                        <Dropdown\r\n                                            className=\"mr-2\"\r\n                                            value={optionState}\r\n                                            options={[\r\n                                                { name: 'EAN', cod: 'E' },\r\n                                                { name: 'Princípio', cod: 'P' },\r\n                                                { name: 'Classe', cod: 'C' },\r\n                                            ]}\r\n                                            onChange={(e: { value: any }) => setOptionState(e.value)}\r\n                                            placeholder=\"Selecione um filtro\"\r\n                                            optionLabel=\"name\"\r\n                                            style={{ width: '12em' }}\r\n                                        />\r\n                                        <Button\r\n                                            tabIndex={2}\r\n                                            variant=\"outline-danger\"\r\n                                            className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                                            style={{ borderRadius: '0' }}\r\n                                            onClick={() => { setSearchInput(''); getMedicinesFunction(); setMode('N'); setOptionState(null) }}\r\n                                        >\r\n                                            <AiOutlineClose size={18} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={handleSearch}\r\n                                            style={{ borderRadius: '0' }}\r\n                                            className=\"d-inline-flex justify-content-center align-items-center\"\r\n                                        >\r\n                                            <FiSearch size={18} />\r\n                                        </Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n\r\n                <DataTable\r\n                    value={medicines}\r\n                    paginator={true}\r\n                    rows={rows}\r\n                    header={<h5 className=\"py-1\">Tabela de medicamentos</h5>}\r\n                    totalRecords={totalRecords}\r\n                    emptyMessage=\"Nenhum resultado encontrado\"\r\n                    className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true}\r\n                    loading={loading}\r\n                    first={first}\r\n                    onPage={onPage}\r\n                    lazy={true}\r\n                    selectionMode=\"single\" \r\n                    selection={selectedRow} \r\n                    onSelectionChange={(e) => setSelectedRow(e.value)}\r\n                    onRowSelect={(e) => onUserSelect(e)}\r\n                >\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"CNPJ\" header=\"CNPJ\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Laboratorio\" header=\"Laboratório\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Registro\" header=\"Registro\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Produto\" header=\"Produto\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"ClasseTerapeutica\" header=\"Classe Terapêutica\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n\r\n                <Dialog \r\n                    visible={displayDialogs} \r\n                    style={{ width: '50%' }} \r\n                    header=\"Ações\" \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialogs(false)}\r\n                >\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <Button \r\n                                variant=\"info\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    setDisplayDialog1(true); \r\n                                    setDisplayDialogs(false);\r\n                                }}\r\n                            >\r\n                                Visualizar medicamento\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button \r\n                                variant=\"primary\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    updateMedicine(); \r\n                                    setDisplayDialog2(true); \r\n                                    setDisplayDialogs(false) \r\n                                }}\r\n                            >\r\n                                Atualizar medicamento\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button \r\n                                variant=\"danger\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    setDisplayDialog3(true); \r\n                                    setDisplayDialogs(false) \r\n                                }}\r\n                            >\r\n                                Excluir medicamento\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                {/* Caixa de dialogo de listagem de medicamentos */}\r\n                <Dialog \r\n                    visible={displayDialog1} \r\n                    style={{ width: '50%' }} \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialog1(false)} \r\n                    maximizable\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">EAN: {ean}</p>\r\n                </Dialog>\r\n\r\n                <Dialog \r\n                    visible={displayDialog2} \r\n                    style={{ width: '70%' }} \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialog2(false)} \r\n                    maximizable maximized\r\n                >\r\n                    <p className=\"text-dark h3 text-center\">Atualização dos dados do medicamento {ean}</p>\r\n\r\n                    <form className=\"was-validated\" /*onSubmit={handleSubmit}*/>\r\n                        <div className=\"mt-4 mb-2\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText \r\n                                    id=\"codeUpdate\" \r\n                                    style={{ width: '100%' }} \r\n                                    value={updatedEan} \r\n                                    onChange={(e) => setUpdatedEan((e.target as HTMLInputElement).value)} \r\n                                />\r\n                                <label htmlFor=\"NomeUpdate\">EAN</label>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Dialog \r\n                    visible={displayDialog3} \r\n                    style={{ width: '50%' }} \r\n                    modal={true}\r\n                    header=\"Exclusão de medicamento\" \r\n                    onHide={() => setDisplayDialog3(false)}\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">Deseja exluir o medicamento de EAN {ean}?</p>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"outline-danger\" onClick={() => deleteMedicine()} style={{ width: '100%' }}>Sim</Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Medicines;","import api from '../../../../services/api';\r\n\r\nclass CreateMedicineService {\r\n\r\n    async Create(\r\n        EAN: string,\r\n        PrincipioAtivo: string,\r\n        Registro: string,\r\n        Laboratorio: string,\r\n        Produto: string,\r\n        Apresentacao: string,\r\n        ClasseTerapeutica: string,\r\n        CNPJ: string,\r\n        email:any\r\n    ) {\r\n        return await api.post('medicines', {\r\n            EAN,\r\n            PrincipioAtivo,\r\n            Registro,\r\n            Laboratorio,\r\n            Produto,\r\n            Apresentacao,\r\n            ClasseTerapeutica,\r\n            CNPJ,\r\n            email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateMedicineService };","import React, { useState, FormEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from \"yup\";\r\n\r\nimport ToastComponent from \"../../../../components/Toast\";\r\n\r\nimport { CreateMedicineService } from './CreateMedicineService';\r\n\r\nconst MedicinesCreate = () => {\r\n    const [EAN, setEAN] = useState<string>('');\r\n    const [principioAtivo, setPrincipioAtivo] = useState<string>('');\r\n    const [registro, setRegistro] = useState<string>('');\r\n    const [laboratorio, setLaboratorio] = useState<string>('');\r\n    const [produto, setProduto] = useState<string>('');\r\n    const [apresentacao, setApresentacao] = useState<string>('');\r\n    const [classeTerapeutica, setClasseTerapeutica] = useState<string>('');\r\n    const [CNPJ, setCNPJ] = useState<string>('');\r\n\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const createMedicineService = new CreateMedicineService();\r\n\r\n   async function handleSubmit(event: FormEvent) {\r\n       try {\r\n            event.preventDefault();\r\n            const data = {\r\n                EAN,\r\n                principioAtivo,\r\n                registro,\r\n                laboratorio,\r\n                produto,\r\n                apresentacao,\r\n                classeTerapeutica,\r\n                CNPJ\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                EAN: Yup.string().required(),\r\n                principioAtivo: Yup.string().required(),\r\n                registro: Yup.string().required(),\r\n                laboratorio: Yup.string().required(),\r\n                produto: Yup.string().required(),\r\n                apresentacao: Yup.string().required(),\r\n                classeTerapeutica: Yup.string().required(),\r\n                CNPJ: Yup.string().required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createMedicineService.Create(\r\n            EAN,\r\n            principioAtivo,\r\n            registro,\r\n            laboratorio,\r\n            produto,\r\n            apresentacao,\r\n            classeTerapeutica,\r\n            CNPJ,\r\n            email\r\n            ).then(() => {\r\n                HandleToast(\"success\", \"Sucesso!\", \"Medicamento criado com sucesso!\");\r\n                history.push('/registrations/medicines')\r\n            });\r\n\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Medicamento</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"EAN\" className=\"mt-4\">EAN</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"EAN\"\r\n                                    name=\"EAN\"\r\n                                    defaultValue={EAN}\r\n                                    onChange={(e) => setEAN((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"EAN\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"CNPJ\" className=\"mt-4\">CNPJ</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"CNPJ\"\r\n                                    name=\"CNPJ\"\r\n                                    defaultValue={CNPJ}\r\n                                    onChange={(e) => setCNPJ((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"CNPJ\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"principioAtivo\" className=\"mt-4\">Princípio Ativo</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"principioAtivo\"\r\n                            name=\"principioAtivo\"\r\n                            defaultValue={principioAtivo}\r\n                            onChange={(e) => setPrincipioAtivo((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Princípio Ativo\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"registro\" className=\"mt-4\">Registro</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"registro\"\r\n                            name=\"registro\"\r\n                            defaultValue={registro}\r\n                            onChange={(e) => setRegistro((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Registro\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"laboratorio\" className=\"mt-4\">Laboratório</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"laboratorio\"\r\n                            name=\"laboratorio\"\r\n                            defaultValue={laboratorio}\r\n                            onChange={(e) => setLaboratorio((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Laboratório\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"produto\" className=\"mt-4\">Produto</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"produto\"\r\n                            name=\"produto\"\r\n                            defaultValue={produto}\r\n                            onChange={(e) => setProduto((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Produto\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"apresentacao\" className=\"mt-4\">Apresentação</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"apresentacao\"\r\n                            name=\"apresentacao\"\r\n                            defaultValue={apresentacao}\r\n                            onChange={(e) => setApresentacao((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Apresentação\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"classeTerapeutica\" className=\"mt-4\">Classe Terapeutica</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"classeTerapeutica\"\r\n                            name=\"classeTerapeutica\"\r\n                            defaultValue={classeTerapeutica}\r\n                            onChange={(e) => setClasseTerapeutica((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Classe Terapeutica\"\r\n                            required={true}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-2\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        { \r\n            toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MedicinesCreate;","import React, { useRef, useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst History = () => {\r\n    const myToast: any = useRef(null);\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const items = [\r\n        {\r\n            label: 'Entrada',\r\n            command: (event: any) => {\r\n                showToast('info', 'Data de entrada', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Avaliações',\r\n            command: (event: any) => {\r\n                showToast('info', 'Data da avaliação', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Verificação',\r\n            command: (event: any) => {\r\n                showToast('info', 'Status verificação', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Desfecho',\r\n            command: (event: any) => {\r\n                showToast('info', 'Desfecho', event.item.label)\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n\r\n    function showToast(severity: String, summary: String, detail: String) {\r\n        myToast.current.show({ severity: severity, summary: summary, detail: detail, life: 6000 });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={myToast} position=\"bottom-left\"></Toast>\r\n            <div className=\"card row mx-4 p-4\">\r\n                <h5 className=\"py-1\">Histórico do paciente</h5>\r\n\r\n                <div className=\"p-inputgroup py-1\">\r\n                    <InputText \r\n                        placeholder=\"Pesquisar por paciente\"\r\n                        className=\"mr-2\"\r\n                        style={{ maxWidth: '20vw' }}\r\n                    />\r\n                    <Dropdown\r\n                        optionLabel=\"name\"\r\n                        placeholder=\"Selecione um filtro\"\r\n                        className=\"mr-2\"\r\n                        style={{ maxWidth: '14vw' }}\r\n                        options={[\r\n                            { name: 'Nome do paciente', cod: 'No' },\r\n                            { name: 'Número do paciente', cod: 'Nu' },\r\n                        ]}\r\n                        value={optionState}\r\n                        onChange={(e: { value: any }) => { setOptionState(e.value) }}\r\n                    />\r\n                    <Button \r\n                        className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                        variant=\"outline-danger\"\r\n                    >\r\n                        <AiOutlineClose size={18} />\r\n                    </Button>\r\n                    <Button className=\"d-inline-flex justify-content-center align-items-center\">\r\n                        <FiSearch size={18} />\r\n                    </Button>\r\n                </div>\r\n\r\n                <Steps \r\n                    className=\"pt-4 pb-2\" \r\n                    model={items} \r\n                    activeIndex={activeIndex} \r\n                    onSelect={(e) => setActiveIndex(e.index)} \r\n                    readOnly={false} \r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default History;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 rounded-pill border bg-info text-light\">\r\n                <p className=\"text-center h2\">Erro 404</p>\r\n                <p className=\"text-center h4\">Página não encontrada.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\n\r\nconst UnderDevelopment = () => {\r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 rounded-pill border border-primary bg-light text-info\">\r\n                <p className=\"text-center h2\">Erro 302</p>\r\n                <p className=\"text-center h4\">Página em desenvolvimento. Volte mais tarde.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UnderDevelopment;","import api from '../../../../services/api'\r\n\r\nclass CreateAssessmentService {\r\n    async Create(queryResponse: any, getNroAvaliacao: any, getDataAvaliacao: string, getResultadoCulturas: any, getResCulturasAcao: any,\r\n        getDoseCorreta: any, getPosologiaCorreta: any, getAlertaDot: any, getAlertaDotDescricao: any, getDisfuncaoRenal: string, getHemodialise: string,\r\n        getAtbOral: string, getAtbContraindicacao: string, getAlteracaoPrescricao: any, getAtbDiluicaoInfusao: string, getInteracaoAtbMedicamento: string,\r\n        getTrocaAtb: string, getNovoAtb: any) {\r\n        return await api.post('medicalRecords/assessment', {\r\n            IdProntuario: queryResponse, NroAvaliacao: getNroAvaliacao, DataAvaliacao: getDataAvaliacao,\r\n            ResultadoCulturas: getResultadoCulturas, ResCulturasAcao: getResCulturasAcao, DoseCorreta: getDoseCorreta, \r\n            PosologiaCorreta: getPosologiaCorreta, AlertaDot: getAlertaDot, AlertaDotDescricao: getAlertaDotDescricao, \r\n            DisfuncaoRenal: getDisfuncaoRenal, Hemodialise: getHemodialise, AtbOral: getAtbOral, \r\n            AtbContraindicacao: getAtbContraindicacao, AlteracaoPrescricao: getAlteracaoPrescricao, \r\n            AtbDiluicaoInfusao: getAtbDiluicaoInfusao, InteracaoAtbMedicamento: getInteracaoAtbMedicamento, \r\n            TrocaAtb: getTrocaAtb, NovoAtb: getNovoAtb\r\n        }).then(response => response.data)\r\n    }\r\n\r\n    async Verify(queryResponse: any){\r\n        return await api.post('/medicalRecords/assessment/verify/', { \r\n            seqProntuario: queryResponse \r\n        }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { CreateAssessmentService }","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dropdown as DropdownReact } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ToastComponent from '../../../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport Loading from '../../../../components/Loading';\r\nimport { addLocale } from 'primereact/api';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nimport { CreateAssessmentService } from './CreateAssessmentService'\r\nimport { MedicinesService } from '../../../Registrations/Medicines/MedicinesService';\r\n\r\nconst AssessmentForm = () => {\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const queryResponse = query.get(\"seqProntuario\") || \"\"\r\n\r\n    const [getNroAvaliacao, setNroAvaliacao] = useState<any>(null)\r\n    const [getDataAvaliacao, setDataAvaliacao] = useState<any>(null)\r\n    const [getResultadoCulturas, setResultadoCulturas] = useState<any>(null)\r\n    const [getResCulturasAcao, setResCulturasAcao] = useState<any>(null)\r\n    const [getDoseCorreta, setDoseCorreta] = useState<any>(null)\r\n    const [getPosologiaCorreta, setPosologiaCorreta] = useState<any>(null)\r\n    const [getAlertaDot, setAlertaDot] = useState<any>(null)\r\n    const [getAlertaDotDescricao, setAlertaDotDescricao] = useState<any>(null)\r\n    const [getDisfuncaoRenal, setDisfuncaoRenal] = useState<string>('')\r\n    const [getAtbContraindicacao, setAtbContraindicacao] = useState<any>(null)\r\n    const [getAlteracaoPrescricao, setAlteracaoPrescricao] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusao, setAtbDiluicaoInfusao] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamento, setInteracaoAtbMedicamento] = useState<any>(null)\r\n    const [getHemodialise, setHemodialise] = useState<any>(null)\r\n    const [getAtbOral, setAtbOral] = useState<any>(null)\r\n    const [getTrocaAtb, setTrocaAtb] = useState<any>(null)\r\n    const [getNovoAtb, setNovoAtb] = useState<any>(null)\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [totalRecords2, setTotalRecords2] = useState(0);\r\n    const [first2, setFirst2] = useState(0);\r\n    const [searchInput2, setSearchInput2] = useState('');\r\n    const [getOptionState2, setOptionState2] = useState<any>(null);\r\n    const [mode2, setMode2] = useState('N');\r\n    const [open2, setOpen2] = useState(false);\r\n    const [getMedicinesChange, setMedicinesChange] = useState();\r\n    const [selectedMedicines, setSelectedMedicines] = useState<any>(null);\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const medicinesService = new MedicinesService();\r\n    var MedicinesData:any = {};\r\n    const rows = 10;\r\n\r\n    const history = useHistory()\r\n\r\n    const createAssessmentService = new CreateAssessmentService()\r\n\r\n    useEffect(() => {\r\n        createAssessmentService.Verify(queryResponse).then(response => {\r\n            if(response.verifyMR){\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(response.error))\r\n                setTimeout(() => {\r\n                    history.push('/medicalRecords')\r\n                }, 2500)\r\n            }\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function checkInput(type: number, e: any) {\r\n        if (type == 1) {\r\n            if (e === '') {\r\n                setResultadoCulturas(null);\r\n            } else {\r\n                setResultadoCulturas(e)\r\n            }\r\n        }\r\n        if (type == 2) {\r\n            if (e === '') {\r\n                setResCulturasAcao(null);\r\n            } else {\r\n                setResCulturasAcao(e)\r\n            }\r\n        }\r\n        if (type == 3) {\r\n            if (e === '') {\r\n                setAlertaDotDescricao(null);\r\n            } else {\r\n                setAlertaDotDescricao(e)\r\n            }\r\n        }\r\n        if (type == 4) {\r\n            if (e === '') {\r\n                setNovoAtb(null);\r\n            } else {\r\n                setNovoAtb(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDoseCorretaChange = (e: { value: string }) => {\r\n        setDoseCorreta(e.value);\r\n    };\r\n\r\n    const onPosologiaCorretaChange = (e: { value: string }) => {\r\n        setPosologiaCorreta(e.value);\r\n    };\r\n\r\n    const onAlertaDotChange = (e: { value: string }) => {\r\n        setAlertaDot(e.value);\r\n    };\r\n\r\n    const onAlteracaoPrescricaoChange = (e: { value: string }) => {\r\n        setAlteracaoPrescricao(e.value);\r\n    };\r\n\r\n    const onAtbContraindicacaoChange = (e: { value: string }) => {\r\n        setAtbContraindicacao(e.value);\r\n    };\r\n\r\n    const onAtbDiluicaoInfusaoChange = (e: { value: string }) => {\r\n        setAtbDiluicaoInfusao(e.value);\r\n    };\r\n\r\n    const onInteracaoAtbMedicamentoChange = (e: { value: string }) => {\r\n        setInteracaoAtbMedicamento(e.value);\r\n    };\r\n\r\n    const onHemodialiseChange = (e: { value: string }) => {\r\n        setHemodialise(e.value);\r\n    };\r\n\r\n    const onAtbOralChange = (e: { value: string }) => {\r\n        setAtbOral(e.value);\r\n    };\r\n\r\n    const onTrocaAtbChange = (e: { value: string }) => {\r\n        setTrocaAtb(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options2 = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Sim intermitente', value: 'SI' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options3 = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não aplica', value: 'NA' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options4 = [\r\n        { name: 'Código', cod: 'E' },\r\n        { name: 'Princípio', cod: 'P' },\r\n    ];\r\n\r\n    const header2 = \r\n    <>\r\n        <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Medicamentos</p>\r\n    </>;\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n    \r\n    const monthNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const yearNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n            getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n            getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n            getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroAvaliacao: Yup.number().required(),\r\n                getDataAvaliacao: Yup.date().required(),\r\n                getResultadoCulturas: Yup.string().nullable(),\r\n                getResCulturasAcao: Yup.string().nullable(),\r\n                getDoseCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologiaCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDot: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDotDescricao: Yup.string().nullable(),\r\n                getDisfuncaoRenal: Yup.string().required(),\r\n                getHemodialise: Yup.string().oneOf([\"S\", \"SI\", \"N\"]).required(),\r\n                getAtbOral: Yup.string().oneOf([\"S\", \"NA\", \"N\"]).required(),\r\n                getAtbContraindicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getAlteracaoPrescricao: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAtbDiluicaoInfusao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getInteracaoAtbMedicamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getTrocaAtb: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getNovoAtb: Yup.string().nullable()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            createAssessmentService.Create(queryResponse, getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n                getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n                getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n                getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb)\r\n            .then((response) => {\r\n                if (response.CreatedAssessment) {\r\n                    showToast('success', 'Sucesso!', `Avaliação criada com sucesso!`);\r\n                    setTimeout(() => {\r\n                        history.push(`/medicalRecords/assessment/?seqProntuario=${queryResponse}`)\r\n                    }, 3500)\r\n                } else {\r\n                    if (response.error.sqlMessage) {\r\n                        if (response.error.sqlState == 23000) {\r\n                            // console.log(response.error.sqlState)\r\n                            if (String(response.error.sqlMessage).includes(\"(`NovoAtb`)\")) {\r\n                                showToast('error', 'Erro!', `O campo Novo Atb está incorreto`);\r\n                            } else {\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        } else {\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    } else {\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const onOptionChange2 = (e: { value: any }) => {\r\n        setOptionState2(e.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords2(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage2 = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex2 = event.first2;\r\n            const endIndex2 = event.first2 + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex2).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst2(startIndex2);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch2() {\r\n        if (!getOptionState2) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput2) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode2('S');\r\n        medicinesService.searchMedicineGlobal(searchInput2, getOptionState2.cod, first2 + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newMedicines = true\r\n    function onMedicinesSelect (e: any) {\r\n        newMedicines = false;\r\n        setMedicinesChange(e.value)\r\n        MedicinesData = e.data;\r\n        \r\n        setNovoAtb(MedicinesData.EAN)\r\n        setTimeout(() => {\r\n            setDisplayDialog(false)\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Avaliação</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"NroAvaliacao\">Número da Avaliação</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"NroAvaliacao\" name=\"NroAvaliacao\"\r\n                                    defaultValue={getNroAvaliacao} onChange={(e) => setNroAvaliacao(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número da avaliação\" min=\"1\" max=\"999999999\" required autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"DataAvaliacao\" className=\"mt\">Data da Avaliação</label>\r\n                                <Calendar id=\"DataInternacao\" style={{ width: '100%' }} value={getDataAvaliacao}\r\n                                    onChange={(e) => setDataAvaliacao(e.value)} locale=\"pt\" dateFormat=\"dd/mm/yy\"\r\n                                    placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator yearNavigator yearRange=\"1910:2021\" monthNavigatorTemplate={monthNavigatorTemplate} yearNavigatorTemplate={yearNavigatorTemplate}\r\n                                    showIcon showOnFocus={false} required touchUI />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"ResultadoCulturas\" className=\"mt-4\">Resultado das Culturas</label>\r\n                        <InputText style={{ width: '100%' }} id=\"ResultadoCulturas\" name=\"ResultadoCulturas\"\r\n                            defaultValue={getResultadoCulturas} onChange={(e) => { checkInput(1, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o resultado das culturas\" />\r\n\r\n                        <label htmlFor=\"ResCulturasAcao\" className=\"mt-4\">Ação do Resultado das Culturas</label>\r\n                        <InputText style={{ width: '100%' }} id=\"ResCulturasAcao\" name=\"ResCulturasAcao\"\r\n                            defaultValue={getResCulturasAcao} onChange={(e) => { checkInput(2, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite a ação do resultado das culturas\" />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDoseCorreta} options={options}\r\n                                    onChange={onDoseCorretaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getPosologiaCorreta} options={options}\r\n                                    onChange={onPosologiaCorretaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AlertaDot\">Alerta Dot</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAlertaDot} options={options}\r\n                                    onChange={onAlertaDotChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"AlertaDotDescricao\" className=\"mt-4\">Descrição do Alerta Dot</label>\r\n                        <InputText style={{ width: '100%' }} id=\"AlertaDotDescricao\" name=\"AlertaDotDescricao\"\r\n                            defaultValue={getAlertaDotDescricao} onChange={(e) => { checkInput(3, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite a descrição do alerta dot\" />\r\n\r\n                        <label htmlFor=\"DisfuncaoRenal\" className=\"mt-4\">Disfuncao Renal</label>\r\n                        <InputText style={{ width: '100%' }} id=\"DisfuncaoRenal\" name=\"DisfuncaoRenal\"\r\n                            defaultValue={getDisfuncaoRenal} onChange={(e) => setDisfuncaoRenal((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite a disfunção renal\" required />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbContraindicacao\">Contraindicação de Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbContraindicacao} options={options}\r\n                                    onChange={onAtbContraindicacaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AlteracaoPrescricao\">Alteração da Prescrição</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAlteracaoPrescricao} options={options}\r\n                                    onChange={onAlteracaoPrescricaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbDiluicaoInfusao\">Diluição e/ou Infusão de Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbDiluicaoInfusao} options={options}\r\n                                    onChange={onAtbDiluicaoInfusaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"InteracaoAtbMedicamento\">Interação Atb e Medicamento</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getInteracaoAtbMedicamento} options={options}\r\n                                    onChange={onInteracaoAtbMedicamentoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"Hemodialise\">Hemodialise</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getHemodialise} options={options2}\r\n                                    onChange={onHemodialiseChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbOral\">Atb Oral</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbOral} options={options3}\r\n                                    onChange={onAtbOralChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"TrocaAtb\">Troca do Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getTrocaAtb} options={options}\r\n                                    onChange={onTrocaAtbChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"NovoAtb\" className=\"mt-4 ml-1\"  style={{ width: '100%' }}>Novo Atb</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"NovoAtb\" name=\"NovoAtb\"\r\n                                defaultValue={getNovoAtb} onChange={(e) => { checkInput(4, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o novo Atb\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true);}}>Buscar</Button><br/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog(false); setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null); setOpen2(false)}}>\r\n                <div className=\"form-row\">\r\n                    <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen2(!open2)} aria-controls=\"example-collapse-text\" aria-expanded={open2} style={{borderRadius: '0', height:'41.5px'}}>Buscar medicamento específico</Button>\r\n                    <Collapse in={open2} timeout={200}>\r\n                        <div className=\"ml-1\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput2} onChange={(e) => {setSearchInput2((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch2(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState2 === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState2.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput2 === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState2} options={options4} onChange={onOptionChange2} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch2} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <DataTable value={medicines} paginator={true} rows={rows}\r\n                    header={header2} totalRecords={totalRecords2}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true} loading={loading} first={first2} onPage={onPage2} lazy={true}\r\n                    selectionMode=\"single\" selection={selectedMedicines}\r\n                    onSelectionChange={e => setSelectedMedicines(e.value)} onRowSelect={(e) => {onMedicinesSelect(e);}}>\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"33.4%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssessmentForm","import api from \"../../services/api\";\r\nimport { IMicrobiology } from \"./MicrobiologyModel\";\r\n\r\ninterface IData{\r\n  page: number;\r\n  filter?: string;\r\n  filterValue?: string;\r\n}\r\n\r\nclass MicrobiologyService {\r\n  async getMicrobiologies(data:IData) {\r\n    let { page, filter, filterValue } = data;\r\n    if (filter && filterValue) {\r\n      return await api.get(\"/microbiology\", { params: { page, filter, filterValue } }).then(response => response.data);\r\n    } else {\r\n      return await api.get(\"/microbiology\", { params: { page } }).then(response => response.data);\r\n    }\r\n  }\r\n\r\n  async getById(id:number) {\r\n    return await api.get<IMicrobiology>(`/microbiology/${id}`).then(response => response.data);\r\n  }\r\n\r\n  async delete(id:number, email: any) {\r\n    return  await api.delete(`/microbiology/delete/${id}/${email}`).then(response => response.data);\r\n  }\r\n\r\n  async view(id: number) {\r\n    return await api.get(`/microbiology/view/${id}`).then(response => response.data);\r\n  }\r\n\r\n  async create(microbiologyData: IMicrobiology, email: any){\r\n    await api.post(\"/microbiology\", { microbiologyData, email }).then(response => response.data);\r\n  }\r\n\r\n  async update(microbiologyData: IMicrobiology, id:number, email: any) {\r\n    return await api.put(`/microbiology/update/${id}`, {microbiologyData, email }).then(response => response.data);\r\n  }\r\n}\r\n\r\nexport default new MicrobiologyService();\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport ToastComponent from \"../../../components/Toast\";\r\nimport MicrobiologyService from \"../MicrobiologyService\"\r\n\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n    id: number;\r\n    view: boolean;\r\n    setView: any;\r\n}\r\n\r\nconst MicrobiologyView: React.FC<Props> = ({ view, id, setView }) => {\r\n    const [IdMicrobiologia, setIdMicrobiologia] = useState<number>(0);\r\n    const [NroPaciente, setNroPaciente] = useState<number>(0);\r\n    const [NroProntuario, setNroProntuario] = useState<number>(0);\r\n    const [IdPaciente, setIdPaciente] = useState<number>(0);\r\n    const [IdProntuario, setIdProntuario] = useState<number>(0);\r\n    const [DataColeta, setDataColeta] = useState<string>(\"\");\r\n    const [NomePaciente, setNomePaciente] = useState<string>(\"\");\r\n    const [DataResultado, setDataResultado] = useState<string>(\"\");\r\n    const [SwabNasalObservacoes, setSwabNasalObservacoes] = useState<string>( \"\");\r\n    const [SwabRetalObservacoes, setSwabRetalObservacoes] = useState<string>( \"\" );\r\n    const [SangueObservacoes, setSangueObservacoes] = useState<string>(\"\");\r\n    const [UrinaObservacoes, setUrinaObservacoes] = useState<string>(\"\");\r\n    const [SecrecaoTraquealObservacoes,setSecrecaoTraquealObservacoes] = useState<string>();\r\n    const [OutrosObservacoes, setOutrosObservacoes] = useState<string>(\"\");\r\n    const [PerfilSensibilidade, setPerfilSensibilidade] = useState<string>(\"\");\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        function loadMicrobiology() {\r\n            MicrobiologyService.view(id)\r\n                .then(data => {\r\n                    const [microbiologyData] = data;\r\n                    setIdMicrobiologia(microbiologyData.IdMicrobiologia);\r\n                    setNroPaciente(microbiologyData.NroPaciente);\r\n                    setNroProntuario(microbiologyData.NroProntuario);\r\n                    setIdPaciente(microbiologyData.IdPaciente);\r\n                    setIdProntuario(microbiologyData.IdProntuario);\r\n                    setDataColeta(microbiologyData.DataColeta);\r\n                    setDataResultado(microbiologyData.DataResultado);\r\n                    setNomePaciente(microbiologyData.NomePaciente);\r\n                    setSwabNasalObservacoes(microbiologyData.SwabNasalObservacoes);\r\n                    setSwabRetalObservacoes(microbiologyData.SwabRetalObservacoes);\r\n                    setSangueObservacoes(microbiologyData.SangueObservacoes);\r\n                    setUrinaObservacoes(microbiologyData.UrinaObservacoes);\r\n                    setSecrecaoTraquealObservacoes(microbiologyData.SecrecaoTraquealObservacoes);\r\n                    setOutrosObservacoes(microbiologyData.OutrosObservacoes);\r\n                    setPerfilSensibilidade(microbiologyData.PerfilSensibilidade);\r\n                    setLoading(false);\r\n                })    \r\n               .catch(error => {\r\n                    setLoading(false);\r\n                    HandleToast(\"error\", \"Erro!\", \"Falha ao carregar os dados.\");\r\n                });\r\n        }\r\n        loadMicrobiology();\r\n    }, [id]);\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                visible={view}\r\n                style={{ width: \"50%\" }}\r\n                modal={true}\r\n                onHide={setView}\r\n                maximizable\r\n            >\r\n                <main>\r\n                    <h2 className=\"text-dark text-center mb-4\">\r\n                        Microbiologia de número {IdMicrobiologia}\r\n                    </h2>\r\n                    <section className=\"text-dark\">\r\n                        <h4>Dados do paciente</h4>\r\n                        <ul>\r\n                            <li> Nome: {NomePaciente}.</li>\r\n                            <li> Sequência: {IdPaciente}.</li>\r\n                            <li> Número: {NroPaciente}.</li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section>\r\n                        <h4>Dados do prontuário</h4>\r\n                        <ul>\r\n                            <li>Sequência: {IdProntuario}.</li>\r\n                            <li>Número: {NroProntuario}.</li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section>\r\n                            <h4>Datas</h4>\r\n                            <ul>\r\n                                <li>Data da coleta: {DataColeta}.</li>\r\n                                <li>Data do resultado: {DataResultado}.</li>\r\n                            </ul>\r\n                    </section>\r\n\r\n                    {SwabNasalObservacoes && (\r\n                        <section>\r\n                                <h4>Observações sobre a swab nasal</h4>\r\n                                <p>{SwabNasalObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SwabRetalObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre a swab retal</h4> \r\n                                <p>{SwabRetalObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SangueObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre o sangue</h4> \r\n                                <p>{SangueObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {UrinaObservacoes && (\r\n                        <section>\r\n                                <h4>Observações sobre a urina</h4>\r\n                                <p>{UrinaObservacoes} </p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SecrecaoTraquealObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre a secreção traqueal</h4> \r\n                                <p>{SecrecaoTraquealObservacoes} </p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {OutrosObservacoes && (\r\n                        <section>\r\n                                <h4>Outras observações</h4>\r\n                                <p>{OutrosObservacoes}</p>\r\n                        </section> \r\n                    )}\r\n\r\n                    {PerfilSensibilidade && (\r\n                        <section>\r\n                                <h4>Perfil de sensibilidade</h4> \r\n                                <p>{PerfilSensibilidade} </p>\r\n                        </section>\r\n                    )}\r\n                \r\n                </main>\r\n                {toast && (\r\n                    <ToastComponent\r\n                        messageType={getMessageType}\r\n                        messageTitle={getMessageTitle}\r\n                        messageContent={getMessageContent}\r\n                    />\r\n                )}\r\n            </Dialog>\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\nexport default MicrobiologyView;\r\n","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { addLocale } from 'primereact/api';\r\n\r\nimport { Dropdown as DropdownReact } from \"react-bootstrap\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport ToastComponent from \"../../../components/Toast\";\r\n\r\nimport MicrobiologyService from \"../MicrobiologyService\";\r\nimport { IMicrobiology } from \"../MicrobiologyModel\";\r\n\r\nimport { useHistory} from 'react-router-dom';\r\n\r\ninterface Props {\r\n    id?: number;\r\n}\r\n\r\nconst MicrobiologyForm: React.FC<Props> = ({ id }) => {\r\n    const [title, setTitle] = useState<string>(\"Cadastro de microbiologia\");\r\n    const [buttonLabel, setButtonLabel] = useState<string>(\"Cadastrar\");\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [IdPaciente, setIdPaciente] = useState<number>(0);\r\n    const [IdProntuario, setIdProntuario] = useState<number>(0);\r\n    const [DataColeta, setDataColeta] = useState<any>();\r\n    const [DataResultado, setDataResultado] = useState<any>(null);\r\n    const [SwabNasal, setSwabNasal] = useState<string>(\"\");\r\n    const [SwabNasalObservacoes, setSwabNasalObservacoes] = useState<string>(\"\");\r\n    const [SwabRetal, setSwabRetal] = useState<string>(\"\");\r\n    const [SwabRetalObservacoes, setSwabRetalObservacoes] = useState<string>( \"\");\r\n    const [Sangue, setSangue] = useState<string>(\"\");\r\n    const [SangueObservacoes, setSangueObservacoes] = useState<string>(\"\");\r\n    const [Urina, setUrina] = useState<string>(\"\");\r\n    const [UrinaObservacoes, setUrinaObservacoes] = useState<string>(\"\");\r\n    const [SecrecaoTraqueal, setSecrecaoTraqueal] = useState<string>(\"\");\r\n    const [SecrecaoTraquealObservacoes, setSecrecaoTraquealObservacoes] = useState<string>(\"\");\r\n    const [Outros, setOutros] = useState<string>(\"\");\r\n    const [OutrosObservacoes, setOutrosObservacoes] = useState<string>(\"\");\r\n    const [PerfilSensibilidade, setPerfilSensibilidade] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const [viewNasal, setViewNasal] = useState<boolean>(false);\r\n    const [viewRetal, setViewRetal] = useState<boolean>(false);\r\n    const [viewSangue, setViewSangue] = useState<boolean>(false);\r\n    const [viewUrina, setViewUrina] = useState<boolean>(false);\r\n    const [viewSec, setViewSec] = useState<boolean>(false);\r\n    const [viewOutros, setViewOutros] = useState<boolean>(false);\r\n\r\n\r\n    addLocale('pt', {\r\n        firstDayOfWeek: 0,\r\n        dayNames: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    });\r\n\r\n    const monthNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const yearNavigatorTemplate = (e: any) => {\r\n        return <Dropdown value={e.value} options={e.options} onChange={(event) => e.onChange(event.originalEvent, event.value)} className=\"p-ml-2\" style={{ lineHeight: 1 }} />;\r\n    }\r\n\r\n    const options = [\r\n        { label: \"Sim\", value: \"S\" },\r\n        { label: \"Não\", value: \"N\" },\r\n    ];\r\n\r\n    const history = useHistory();\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n    useEffect(() => {\r\n        // Formatação de dados\r\n        function formatDate(date: any) {\r\n            const newDate = date.split(\"/\");\r\n            const formatedDate = new Date(\r\n                newDate[2],\r\n                newDate[1] - 1,\r\n                newDate[0]\r\n            );\r\n            return formatedDate;\r\n        }\r\n\r\n       //Carrega os dados \r\n       function loadMicrobiologyInfo(id:number) {\r\n            MicrobiologyService.getById(id)\r\n                .then(microbiology => {\r\n                    setIdPaciente(Number(microbiology.IdPaciente));\r\n                    setIdProntuario(microbiology.IdProntuario);\r\n\r\n                    const dataColeta = formatDate(microbiology.DataColeta);\r\n                    setDataColeta(dataColeta);\r\n\r\n                    if (microbiology.DataResultado) {\r\n                           const dataResultado = formatDate(microbiology.DataResultado);\r\n                          setDataResultado(dataResultado);\r\n                    }\r\n\r\n                    setSwabNasal(microbiology.SwabNasal);\r\n                    if (microbiology.SwabNasalObservacoes) {\r\n                        setSwabNasalObservacoes(microbiology.SwabNasalObservacoes);\r\n                        setViewNasal(true);\r\n                    }\r\n                    \r\n                    setSwabRetal(microbiology.SwabRetal);\r\n                    if (microbiology.SwabRetalObservacoes){\r\n                        setSwabRetalObservacoes(microbiology.SwabRetalObservacoes);\r\n                        setViewRetal(true);\r\n                    }\r\n\r\n                    setSangue(microbiology.Sangue);\r\n                    if (microbiology.SangueObservacoes){\r\n                        setSangueObservacoes(microbiology.SangueObservacoes);\r\n                        setViewSangue(true);\r\n                    }\r\n\r\n                    setUrina(microbiology.Urina);\r\n                    if (microbiology.UrinaObservacoes) {\r\n                         setUrinaObservacoes(microbiology.UrinaObservacoes);\r\n                         setViewUrina(true);                       \r\n                    }\r\n\r\n                    setSecrecaoTraqueal(microbiology.SecrecaoTraqueal);\r\n                    if (microbiology.SecrecaoTraquealObservacoes){\r\n                        setSecrecaoTraquealObservacoes(microbiology.SecrecaoTraquealObservacoes);\r\n                        setViewSec(true);\r\n                    }\r\n\r\n                    setOutros(microbiology.Outros);\r\n                    if (microbiology.OutrosObservacoes) {\r\n                        setOutrosObservacoes(microbiology.OutrosObservacoes);\r\n                        setViewOutros(true);\r\n                    }\r\n\r\n                    if (microbiology.PerfilSensibilidade)\r\n                        setPerfilSensibilidade(microbiology.PerfilSensibilidade);\r\n\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false);\r\n                    HandleToast(\"error\", \"Erro!\", \"Falha ao carregar os dados.\");\r\n                });\r\n        }\r\n        if (id) {\r\n            setLoading(true);\r\n            setButtonLabel(\"Atualizar\");\r\n            setTitle(\"Edição de microbiologia\");\r\n            loadMicrobiologyInfo(id);\r\n        }\r\n    }, [id]);\r\n\r\n    //Envio de formulário\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        const data: IMicrobiology = {\r\n            IdPaciente,\r\n            IdProntuario,\r\n            DataColeta,\r\n            DataResultado,\r\n            SwabNasal,\r\n            SwabNasalObservacoes,\r\n            SwabRetal,\r\n            SwabRetalObservacoes,\r\n            Sangue,\r\n            SangueObservacoes,\r\n            Urina,\r\n            UrinaObservacoes,\r\n            SecrecaoTraqueal,\r\n            SecrecaoTraquealObservacoes,\r\n            Outros,\r\n            OutrosObservacoes,\r\n            PerfilSensibilidade,\r\n        };\r\n        try {\r\n            setLoading(true);\r\n            //validação dos dados\r\n            const schema = Yup.object().shape({\r\n                IdPaciente: Yup.number().required(),\r\n                IdProntuario: Yup.number().required(),\r\n                DataColeta: Yup.date().required(),\r\n                DataResultado: Yup.date().nullable(),\r\n                SwabNasal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SwabNasalObservacoes: Yup.string().max(250),\r\n                SwabRetal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SwabRetalObservacoes: Yup.string().max(250),\r\n                Sangue: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SangueObservacoes: Yup.string().max(250),\r\n                Urina: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                UrinaObservacoes: Yup.string().max(250),\r\n                SecrecaoTraqueal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SecrecaoTraquealObservacoes: Yup.string().max(250),\r\n                Outros: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                OutrosObservacoes: Yup.string().max(250),\r\n                PerfilSensibilidade: Yup.string(),\r\n            });\r\n            \r\n            await schema.validate(data, {abortEarly: false, });\r\n            \r\n            if (id) {\r\n                MicrobiologyService.update(data, id, email).then(() => {\r\n                    HandleToast(\"success\", \"Sucesso!\", \"Microbiologia atualizada com sucesso.\");\r\n                    setLoading(false);\r\n                }).catch(err => {\r\n                    const message = err.response.data.error;\r\n                    HandleToast(\"error\", \"Erro!\", `${message}`)\r\n                    setLoading(false);\r\n                });\r\n            } else {\r\n                MicrobiologyService.create(data, email).then(() => {\r\n                    HandleToast(\"success\", \"Sucesso!\", \"Microbiologia criada com sucesso.\");\r\n                    setLoading(false);\r\n                    setTimeout(() => {\r\n                        history.push(\"/microbiology\");\r\n                    }, 1500);\r\n                }).catch(err => {\r\n                    const message = err.response.data.error;\r\n                    HandleToast(\"error\", \"Erro!\", `${message}` + \"Houve um erro na criacao da Microbiologia\");\r\n                    setLoading(false);\r\n                });\r\n            }\r\n        } catch (err) {\r\n            setLoading(false);\r\n            if (err instanceof Yup.ValidationError) {\r\n                HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"row m-5\">\r\n                    <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                        <p className=\"text-dark h3 text-center\">{title}</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"IdPaciente\">\r\n                                            Número do Paciente\r\n                                        </label>\r\n                                        <InputNumber\r\n                                            id=\"IdPaciente\"\r\n                                            name=\"IdPaciente\"\r\n                                            value={IdPaciente}\r\n                                            min={1}\r\n                                            max={9999999999}\r\n                                            onChange={(e) =>setIdPaciente(Number(e.value)) }\r\n                                            showButtons\r\n                                            style={{ width: \"100%\" }}\r\n                                            placeholder=\"Digite o número do paciente\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"IdProntuario\">\r\n                                            Número do Prontuário\r\n                                        </label>\r\n                                        <InputNumber\r\n                                            id=\"IdProntuario\"\r\n                                            name=\"IdProntuario\"\r\n                                            value={IdProntuario}\r\n                                            min={1}\r\n                                            max={9999999999}\r\n                                            onChange={(e) =>setIdProntuario(Number(e.value))}\r\n                                            showButtons\r\n                                            style={{ width: \"100%\" }}\r\n                                            placeholder=\"Digite o número do prontuário\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label\r\n                                            htmlFor=\"DataColeta\"\r\n                                            className=\"mt-2\"\r\n                                        >\r\n                                            Data da Coleta\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"DataColeta\"\r\n                                            name=\"DataColeta\"\r\n                                            value={DataColeta} \r\n                                            onChange={(e) =>setDataColeta(e.value)}\r\n                                            style={{ width: \"100%\" }}\r\n                                            locale=\"pt\"\r\n                                            dateFormat=\"dd/mm/yy\"\r\n                                            placeholder=\"Selecione a data de coleta\"\r\n                                            showButtonBar\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"1910:2021\" \r\n                                            monthNavigatorTemplate={monthNavigatorTemplate} \r\n                                            yearNavigatorTemplate={yearNavigatorTemplate}\r\n                                            showIcon\r\n                                            touchUI\r\n                                            showOnFocus={false}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label  htmlFor=\"DataResultado\"  className=\"mt-2\">\r\n                                            Data do resultado\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"DataResultado\"\r\n                                            name=\"DataResultado\"\r\n                                            value={DataResultado}onChange={(e) =>setDataResultado(e.value)}\r\n                                            style={{ width: \"100%\" }}\r\n                                            locale=\"pt\"\r\n                                            dateFormat=\"dd/mm/yy\"\r\n                                            placeholder=\"Selecione a data do resultado\"\r\n                                            showButtonBar\r\n                                            monthNavigator\r\n                                            yearNavigator\r\n                                            yearRange=\"1910:2021\" \r\n                                            monthNavigatorTemplate={monthNavigatorTemplate} \r\n                                            yearNavigatorTemplate={yearNavigatorTemplate}\r\n                                            showOnFocus={false}\r\n                                            showIcon\r\n                                            touchUI\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                              <div className=\"form-row mt-4\">\r\n                                        <div className=\"col mr-2\">\r\n                                            <DropdownReact />\r\n                                           <label>Swab Nasal</label>\r\n                                            <br></br>\r\n                                            <Dropdown\r\n                                                options={options}\r\n                                                placeholder=\"Selecione uma opção\"\r\n                                                value={SwabNasal}\r\n                                                onChange={(e: { value: string }) => {\r\n                                                    if (e.value === \"S\") setViewNasal(true);\r\n                                                    else {\r\n                                                        if (SwabNasalObservacoes) setSwabNasalObservacoes(\"\");\r\n                                                        setViewNasal(false)\r\n                                                    };\r\n                                                    setSwabNasal(e.value);\r\n                                               }}\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                            <DropdownReact />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col\">\r\n                                            <DropdownReact />\r\n                                           <label>Swab Retal</label>\r\n                                            <br></br>\r\n                                            <Dropdown\r\n                                                options={options}\r\n                                                placeholder=\"Selecione uma opção\"\r\n                                                value={SwabRetal}\r\n                                                onChange={(e: { value: string }) => {\r\n                                                    if (e.value === \"S\") setViewRetal(true);\r\n                                                    else {\r\n                                                        if (SwabRetalObservacoes) setSwabRetalObservacoes(\"\");\r\n                                                        setViewRetal(false);\r\n                                                    }\r\n                                                    setSwabRetal(e.value);\r\n                                                }}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                            <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-2\">\r\n                                        <DropdownReact />\r\n                                        <label>Sangue</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Sangue}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewSangue(true);\r\n                                                else {\r\n                                                    if (SangueObservacoes) setSangueObservacoes(\"\");\r\n                                                    setViewSangue(false)\r\n                                                };\r\n                                                setSangue(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact />\r\n                                        <label>Urina</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Urina}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewUrina(true);\r\n                                                else {\r\n                                                    if (UrinaObservacoes) setUrinaObservacoes(\"\");\r\n                                                    setViewUrina(false)\r\n                                                };\r\n                                                setUrina(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                \r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-2\">\r\n                                        <DropdownReact />\r\n                                        <label>Secreção Traqueal</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={SecrecaoTraqueal}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewSec(true);\r\n                                                else {\r\n                                                    if (SecrecaoTraquealObservacoes) setSecrecaoTraquealObservacoes(\"\");\r\n                                                    setViewSec(false);\r\n                                                }\r\n                                                setSecrecaoTraqueal(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact />\r\n                                        <label>Outros</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Outros}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") {\r\n                                                    setViewOutros(true);\r\n                                                }\r\n                                                else {\r\n                                                    if (OutrosObservacoes) setOutrosObservacoes(\"\");\r\n                                                    setViewOutros(false)\r\n                                                };\r\n                                                setOutros(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {viewNasal && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"SwabNasal\">Observações da Swab Nasal</label>\r\n                                        <InputTextarea\r\n                                                   maxLength={250}\r\n                                                   autoResize\r\n                                                    style={{ width: \"100%\" }}\r\n                                                    id=\"SwabNasal\"\r\n                                                    name=\"SwabNasal\"\r\n                                                    placeholder=\"Digite a observação...\"\r\n                                                    defaultValue={SwabNasalObservacoes}\r\n                                                    onChange={(e: any) => setSwabNasalObservacoes((e.target as HTMLInputElement).value)}\r\n                                                    autoFocus\r\n                                                    required\r\n                                                />\r\n                                </div>\r\n                                )}\r\n\r\n                                {viewRetal && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"SwabRetal\">Observações da Swab Retal</label>\r\n                                        <InputTextarea\r\n                                            autoResize\r\n                                            maxLength={250}\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"SwabRetal\"\r\n                                            name=\"SwabRetal\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SwabRetalObservacoes}\r\n                                            onChange={(e: any) => setSwabRetalObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewSangue && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Sangue\">Observações do Sangue</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Sangue\"\r\n                                            name=\"Sangue\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SangueObservacoes}\r\n                                            onChange={(e: any) => setSangueObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewUrina && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Urina\">Observações da Urina</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Urina\"\r\n                                            name=\"Urina\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={UrinaObservacoes}\r\n                                            onChange={(e: any) => setUrinaObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {viewSec && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Secrecao\">Observações da Secreção Traqueal</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Secrecao\"\r\n                                            name=\"Secrecao\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SecrecaoTraquealObservacoes}\r\n                                            onChange={(e: any) => {\r\n                                                setSecrecaoTraquealObservacoes((e.target as HTMLInputElement).value);\r\n                                            }}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewOutros && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Outros\">Observações</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Outros\"\r\n                                            name=\"Outros\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={OutrosObservacoes}\r\n                                            onChange={(e: any) => setOutrosObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"mt-4\">\r\n                                    <label\r\n                                        htmlFor=\"PerfilSensibilidade\"\r\n                                    >\r\n                                        Perfil Sensibilidade\r\n                                </label>\r\n                                    <InputTextarea\r\n                                        maxLength={250}\r\n                                        autoResize\r\n                                        id=\"PerfilSensibilidade\"\r\n                                        name=\"PerfilSensibilidade\"\r\n                                        defaultValue={PerfilSensibilidade}\r\n                                        onChange={(e: any) => setPerfilSensibilidade((e.target as HTMLInputElement).value)}\r\n                                        style={{ width: \"100%\" }}\r\n                                        placeholder=\"Digite o perfil de sensibilidade\"\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>       \r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\" >\r\n                                {buttonLabel}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )}\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MicrobiologyForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ToastComponent from \"../../components/Toast\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport View from \"./MicrobiologyView\";\r\nimport Form from \"./MicrobiologyForm\";\r\nimport {IMicrobiology } from \"./MicrobiologyModel\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport MicrobiologyService from \"./MicrobiologyService\"\r\n\r\nconst Microbiology = () => {\r\n    const [microbiologies, setMicrobiologies] = useState<IMicrobiology[]>([]);\r\n    const [records, setRecords] = useState<number>(0);\r\n    const [first, setFirst] = useState<number>(0);\r\n    const [id, setId] = useState<number>(0);\r\n    const [view, setView] = useState<boolean>(false);\r\n    const [update, setUpdate] = useState<boolean>(false);\r\n    const [deleteDialog, setDeleteDialog] = useState<boolean>(false);\r\n    const [displayDialog, setDisplayDialog] = useState<boolean>(false);\r\n    const [selectedMicrobiology, setselectedMicrobiology] = useState<any>(null);\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [tableloading, setTableLoading] = useState<boolean>(true);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [filter, setFilter] = useState<string>(\"\");\r\n    const [filterValue, setFilterValue] = useState<any>(\"\");\r\n    const [successfulSearch, setSuccessfulSearch] = useState<boolean>(false);\r\n\r\n    const rows = 10;\r\n\r\n    const dropdownOptions = [\r\n        { name: \"Id\", filter: \"id\" },\r\n        { name: \"Paciente\", filter: \"paciente\" },\r\n        { name: \"Prontuário\", filter: \"prontuario\" },\r\n        { name: \"Data da coleta\", filter: \"dataColeta\" },\r\n        { name: \"Data do Resultado\", filter: \"dataResultado\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        //carrega os dados da tabela e a quantidade total de registros\r\n       function loadMicrobiologies() {\r\n           MicrobiologyService.getMicrobiologies({ page: 1 })\r\n               .then(data => {\r\n                   const { results } = data;\r\n                   const { count } = data.count;\r\n                   const microbiologiesData = results.map(handleFormat);\r\n                   setRecords(Number(count));\r\n                   setMicrobiologies(microbiologiesData);\r\n                   setLoading(false);\r\n                   setTableLoading(false);\r\n               })\r\n               .catch(error => {\r\n                   setLoading(false);\r\n                   setTableLoading(false);\r\n               });\r\n        }\r\n\r\n        loadMicrobiologies();\r\n    }, []);\r\n\r\n    //formatação de dados\r\n    function handleFormat(microbiology: IMicrobiology) {  \r\n        const verifica = (item: string) => {\r\n            if (item === \"S\") return \"Sim\";\r\n            else return \"Não\";\r\n        }\r\n\r\n        let SwabNasal, SwabRetal, Sangue, Urina, SecrecaoTraqueal, Outros;\r\n        SwabNasal = verifica(microbiology.SwabNasal);\r\n        SwabRetal = verifica(microbiology.SwabRetal);\r\n        Sangue = verifica(microbiology.Sangue);\r\n        Urina = verifica(microbiology.Urina);\r\n        SecrecaoTraqueal = verifica(microbiology.SecrecaoTraqueal);\r\n        Outros = verifica(microbiology.Outros);\r\n\r\n        return {\r\n            ...microbiology,\r\n            SwabNasal,\r\n            SwabRetal,\r\n            Sangue,\r\n            Urina,\r\n            SecrecaoTraqueal,\r\n            Outros\r\n        }\r\n    }\r\n\r\n    // Toast\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() =>  setToast(false), 4500);\r\n    }\r\n\r\n    //Busca os registros por página\r\n    function handlePage(event: any) {\r\n         setTableLoading(true);\r\n            const index = event.first;\r\n            const page = Number(index) / 10 + 1;\r\n            let response;\r\n            if (filter && successfulSearch) {\r\n                MicrobiologyService.getMicrobiologies({ page, filter, filterValue }).then(data => {\r\n                    response = data;\r\n                    const { results } = response;\r\n                    const microbiologiesData = results.map(handleFormat);\r\n                    setMicrobiologies(microbiologiesData);\r\n                    setFirst(index);\r\n                    setTableLoading(false);\r\n                }).catch(err => setTableLoading(false));\r\n            } else {\r\n                MicrobiologyService.getMicrobiologies({page}).then(data => {\r\n                    response = data;\r\n                    const { results } = response;\r\n                    const microbiologiesData = results.map(handleFormat);\r\n                    setMicrobiologies(microbiologiesData);\r\n                    setFirst(index);\r\n                    setTableLoading(false);\r\n                }).catch(err => setTableLoading(false));\r\n            } \r\n    }\r\n\r\n    function onMicrobiologySelect(e: any) {\r\n        const microbiologyData = e.data;\r\n        const { IdMicrobiologia } = microbiologyData;\r\n        setId(IdMicrobiologia);\r\n        setDisplayDialog(true);\r\n    }\r\n\r\n    //Atualiza os dados da tabela\r\n    function handleTableUpdate() {\r\n        setTableLoading(true);\r\n        setFirst(1);\r\n        MicrobiologyService.getMicrobiologies({ page: 1 })\r\n            .then(data => {\r\n                const { results } = data;\r\n                const { count } = data.count;\r\n                setRecords(Number(count));\r\n                const microbiologiesData = results.map(handleFormat);\r\n                setMicrobiologies(microbiologiesData);\r\n                setTableLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setTableLoading(false);\r\n                HandleToast(\"error\", \"Erro!\", \"Falha ao atualizar os registros.\");\r\n            });\r\n    }\r\n\r\n    //Deleta microbiologia\r\n    function handleDelete() {\r\n        const email = localStorage.getItem('@gafio-user/email');\r\n        MicrobiologyService.delete(id, email)\r\n            .then(() => {\r\n                setDeleteDialog(false);\r\n                HandleToast(\"success\", \"Sucesso!\", \"A microbiologia foi excluída.\");\r\n                handleTableUpdate();\r\n            })\r\n            .catch(error => {\r\n                setDeleteDialog(false);\r\n                HandleToast(\"error\", \"Erro!\", \"Falha ao excluir a microbiologia.\");\r\n            });\r\n    }\r\n\r\n    function handleUpdate() {\r\n        setUpdate(false);\r\n        handleTableUpdate();\r\n    }\r\n\r\n    //Para filtragem\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            HandleToast(\"error\", \"Erro!\", \"Selecione um filtro para buscar.\");\r\n            return;\r\n        }\r\n        if (!filterValue) {\r\n            HandleToast(\"error\", \"Erro!\", \"Digite algum valor para pesquisar.\");\r\n            return;\r\n        }\r\n        setFirst(1);\r\n        setLoading(true);\r\n        setTableLoading(true);\r\n        MicrobiologyService.getMicrobiologies({ page: 1, filter, filterValue })\r\n            .then(data => {\r\n                const { results } = data;\r\n                const { count } = data.count;\r\n                setRecords(Number(count));\r\n                const microbiologiesData = results.map(handleFormat);\r\n                setMicrobiologies(microbiologiesData);\r\n                setLoading(false);\r\n                setTableLoading(false);\r\n                let res = \"resultado\";\r\n                if (count > 1) res += \"s\";\r\n                HandleToast(\"info\", \"Resultado Encontrado!\", `Foi encontrado ${count} ${res}.`);\r\n                setSuccessfulSearch(true);\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                setTableLoading(false);\r\n                const message = err.response.data.error;\r\n                HandleToast(\"error\", \"Sem resultado!\", `${message}`);\r\n            });\r\n    }\r\n\r\n    function handleReset() {\r\n        setFilterValue(\"\");\r\n        setOptionState(null);\r\n        setSuccessfulSearch(false);\r\n        handleTableUpdate();\r\n    }\r\n\r\n    function onOptionChange(e: { value: any }) {\r\n        setOptionState(e.value);\r\n        setFilter(e.value.filter);\r\n    }\r\n\r\n    // Para as colunas da tabela\r\n    const IdBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Id</span>\r\n                <span>{rowData.IdMicrobiologia}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const PacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Paciente</span>\r\n                <span>{rowData.IdPaciente}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const ProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Prontuário</span>\r\n                <span>{rowData.IdProntuario}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const DataColetaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Coleta</span>\r\n                <span>{rowData.DataColeta}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const DataResultadoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Resultado</span>\r\n                <span>{rowData.DataResultado}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SwabNasalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Swab Nasal</span>\r\n                <span>{rowData.SwabNasal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SwabRetalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Swab Retal</span>\r\n                <span>{rowData.SwabRetal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SangueBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Sangue</span>\r\n                <span>{rowData.Sangue}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const UrinaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Urina</span>\r\n                <span>{rowData.Urina}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SecrecaoTraquealBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Secrecao Traqueal</span>\r\n                <span>{rowData.SecrecaoTraqueal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const OutrosBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Outros</span>\r\n                <span>{rowData.Outros}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to=\"/microbiology/create\">\r\n                    <Button\r\n                        variant=\"outline-dark\"\r\n                        className=\"mb-2\"\r\n                        style={{ borderRadius: \"0\", height: \"41.5px\" }}\r\n                    >\r\n                        Cadastrar Microbiologia\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    className=\"mb-2 ml-2\"\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    onClick={() => setOpen(!open)}\r\n                    style={{ borderRadius: \"0\" }}\r\n                >\r\n                    Buscar por microbiologia\r\n                </Button>\r\n\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-2\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={filterValue}\r\n                                    onChange={(e) => {  setFilterValue( (e.target as HTMLInputElement).value);\r\n                                        if ((e.target as HTMLInputElement).value === \"\" &&  successfulSearch ) handleReset();\r\n                                    }}\r\n                                    onKeyPress={(ev) => {\r\n                                        if (ev.key === \"Enter\") {\r\n                                            handleSearch();\r\n                                            ev.preventDefault();\r\n                                        }\r\n                                    }}\r\n                                    style={{minWidth: \"4em\",borderRadius: \"0\", }}\r\n                                    size={30}\r\n                                />\r\n                                {optionState === null ? (\r\n                                    <label htmlFor=\"float-input\">Buscar</label>\r\n                                ) : (\r\n                                    <label htmlFor=\"float-input\">\r\n                                        Buscar por {optionState.name}\r\n                                    </label>\r\n                                )}\r\n                            </span>\r\n                            {filterValue && (\r\n                                <>\r\n                                    <Dropdown\r\n                                        className=\"mx-1\"\r\n                                        value={optionState}\r\n                                        options={dropdownOptions}\r\n                                        onChange={onOptionChange}\r\n                                        placeholder=\"Selecione um filtro\"\r\n                                        optionLabel=\"name\"\r\n                                        style={{ width: \"12em\" }}\r\n                                    />\r\n                                    <Button\r\n                                        tabIndex={2}\r\n                                        variant=\"outline-danger\"\r\n                                        className=\"p-0 mr-1\"\r\n                                        style={{ width: \"17px\", borderRadius: \"0\", }}\r\n                                        onClick={() => {\r\n                                            if (successfulSearch) handleReset();\r\n                                            else {\r\n                                                setFilterValue(\"\");\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <AiOutlineClose size={15} />\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={handleSearch}\r\n                                        style={{ borderRadius: \"0\", }}\r\n                                    >\r\n                                        <FiSearch size={15} />\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable\r\n                        value={microbiologies}\r\n                        loading={tableloading}\r\n                        paginator={true}\r\n                        rows={rows}\r\n                        totalRecords={records}\r\n                        first={first}\r\n                        onPage={handlePage}\r\n                        header=\"Microbiologias\"\r\n                        emptyMessage=\"Nenhum resultado encontrado\"\r\n                        lazy={true}\r\n                        selectionMode=\"single\"\r\n                        className=\"p-datatable-responsive-demo\"\r\n                        resizableColumns={true}\r\n                        selection={selectedMicrobiology}\r\n                        onSelectionChange={(e) => setselectedMicrobiology(e.value) }\r\n                        onRowSelect={(e) => onMicrobiologySelect(e)}\r\n                    >\r\n                        <Column\r\n                            field=\"IdMicrobiologia\"\r\n                            header=\"Id\"\r\n                            body={IdBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"IdPaciente\"\r\n                            header=\"Paciente\"\r\n                            body={PacienteBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"IdProntuario\"\r\n                            header=\"Prontuário\"\r\n                            body={ProntuarioBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"DataColeta\"\r\n                            header=\"Coleta\"\r\n                            body={DataColetaBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"DataResultado\"\r\n                            header=\"Resultado\"\r\n                            body={DataResultadoBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SwabNasal\"\r\n                            header=\"Swab Nasal\"\r\n                            body={SwabNasalBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SwabRetal\"\r\n                            header=\"Swab Retal\"\r\n                            body={SwabRetalBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Sangue\"\r\n                            header=\"Sangue\"\r\n                            body={SangueBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Urina\"\r\n                            header=\"Urina\"\r\n                            body={UrinaBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SecrecaoTraqueal\"\r\n                            header=\"Secreção Traqueal\"\r\n                            body={SecrecaoTraquealBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Outros\"\r\n                            header=\"Outros\"\r\n                            body={OutrosBodyTemplate}\r\n                        />\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Dialog\r\n                    visible={displayDialog}\r\n                    style={{ width: \"55%\" }}\r\n                    header=\"Ações\"\r\n                    modal={true}\r\n                    onHide={() => {setDisplayDialog(false); setselectedMicrobiology(null)}}\r\n                >\r\n                    <div className=\"form-row text-center\">\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"info\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setView(true);\r\n                                    setselectedMicrobiology(null);\r\n                                }}\r\n                            >\r\n                                Visualizar microbiologia\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setUpdate(true);\r\n                                    setselectedMicrobiology(null);\r\n                                }}\r\n                            >\r\n                                Atualizar microbiologia\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setDeleteDialog(true);\r\n                                    setselectedMicrobiology(null);\r\n                                }}\r\n                            >\r\n                                Excluir microbiologia\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    visible={deleteDialog}\r\n                    style={{ width: \"50%\" }}\r\n                    modal={true}\r\n                    header=\"Exclusão de microbiologia\"\r\n                    onHide={() => setDeleteDialog(false)}\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">\r\n                        Deseja realmente exluir esta microbiologia?\r\n                    </p>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"outline-danger\"\r\n                                onClick={() => handleDelete()}\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Sim\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"outline-info\"\r\n                                onClick={() => setDeleteDialog(false)}\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Não\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    visible={update}\r\n                    style={{ width: \"80%\" }}\r\n                    modal={true}\r\n                    maximizable\r\n                    maximized\r\n                    onHide={() => handleUpdate()}\r\n                >\r\n                    <Form id={id} />\r\n                </Dialog>\r\n\r\n                {view && (\r\n                    <View view={view} id={id} setView={() => setView(false)} />\r\n                )}\r\n            </div>\r\n            {toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )}\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Microbiology;\r\n","import React, { useState } from 'react';\r\n\r\n// import PDFFile from '../../static/ProvaTeoricaLogica.pdf';\r\n\r\nconst Recomendations = () => {    \r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-2 col-sm-8 offset-md-3\">\r\n                <p>ESTE É UM ARQUIVO DE EXEMPLO</p>\r\n                <embed src=\"http://mozilla.github.io/pdf.js/web/viewer.html\" width=\"100%\" height=\"500vh\" type=\"application/pdf\"></embed>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recomendations;","import { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { getEnabledCategories } from 'trace_events';\r\nimport ToastComponent from '../../components/Toast';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport api from '../../services/api';\r\nimport \"./styles.css\";\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { FiRefreshCcw } from 'react-icons/fi';\r\n\r\nvar optionsLogType = {menuPrincipal: -1, menuMicrobiologia: -1, menuPaciente: -1, menuProntuario: -1}; //Menu principal, menu microbiologia, menu paciente\r\n\r\nconst Logs = () => {\r\n    const history = useHistory();\r\n    const [getContent, setContent] = useState();\r\n\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [getLoading, setLoading] = useState(false);\r\n    \r\n    let logType = -1;\r\n    let logType1 = -1;\r\n    let logType2 = -1;\r\n    let microbiologyLogType: string;\r\n    const [getLogType, setLogType] = useState(-1);\r\n    const [getLogType1, setLogType1] = useState(-1);\r\n    const [getLogType2, setLogType2] = useState(-1);\r\n    const [getShowLogType1, setShowLogType1] = useState(-1);\r\n    const [getShowError, setShowError] = useState(false);\r\n    const [getShowId, setShowId] = useState(false);\r\n    \r\n    const [getMicrobiologyLogType, setMicrobiologyLogType] = useState(\"\");\r\n\r\n    const [getSpecificColumnHeader, setSpecificColumnHeader] = useState(\"\");\r\n    const [getSpecificColumnField, setSpecificColumnField] = useState(\"\");\r\n    \r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n    \r\n    async function getLogs(){\r\n        setLoading(true);\r\n        setContent(undefined)\r\n        setTimeout(async () => {\r\n            if(optionsLogType.menuPrincipal == 0){ //Get login logs\r\n                optionsLogType.menuMicrobiologia = -1;\r\n                optionsLogType.menuPaciente = -1;\r\n                optionsLogType.menuProntuario = -1;\r\n                await api.get('/logs/login').then(response => {\r\n                    if(response.data.showLogs){\r\n                        setContent(response.data.logs);\r\n                        setTotalRecords(response.data.length);\r\n                        showToast('success', \"Resultados Encontrados\", \"Foram encontrados \" + response.data.length + \" resultados\")\r\n                    }\r\n                }).catch(err => {\r\n                    showToast('error', \"Erro\", err.response.data.error)\r\n                })\r\n            }else if(optionsLogType.menuPrincipal == 1){ //Get microbiology logs\r\n                optionsLogType.menuPaciente = -1;\r\n                optionsLogType.menuProntuario = -1;\r\n                if(optionsLogType.menuMicrobiologia == 0){\r\n                    microbiologyLogType = \"successfulCreations\";\r\n                    setMicrobiologyLogType(\"successfulCreations\");\r\n                }else if(optionsLogType.menuMicrobiologia == 1){\r\n                    microbiologyLogType = \"successfulExclusions\";\r\n                    setMicrobiologyLogType(\"successfulExclusions\")\r\n                }else if(optionsLogType.menuMicrobiologia == 2){\r\n                    microbiologyLogType = \"successfulUpdates\";\r\n                    setMicrobiologyLogType(\"successfulUpdates\")\r\n                }else if(optionsLogType.menuMicrobiologia == 3){\r\n                    microbiologyLogType = \"unsuccessfulCreations\";\r\n                    setMicrobiologyLogType(\"unsuccessfulCreations\")\r\n                }else if(optionsLogType.menuMicrobiologia == 4){\r\n                    microbiologyLogType = \"unsuccessfulExclusions\";\r\n                    setMicrobiologyLogType(\"unsuccessfulExclusions\")\r\n                }else if(optionsLogType.menuMicrobiologia == 5){\r\n                    microbiologyLogType = \"unsuccessfulUpdates\";\r\n                    setMicrobiologyLogType(\"unsuccessfulUpdates\")\r\n                }\r\n\r\n                if(optionsLogType.menuMicrobiologia == 1 || optionsLogType.menuMicrobiologia == 2 || optionsLogType.menuMicrobiologia == 4 || optionsLogType.menuMicrobiologia == 5){ setShowId(true) } else { setShowId(false) };\r\n                if(optionsLogType.menuMicrobiologia == 3 || optionsLogType.menuMicrobiologia == 4 || optionsLogType.menuMicrobiologia == 5){ setShowError(true) } else { setShowError(false) };\r\n                \r\n                await api.post('/logs/microbiology', {logType: microbiologyLogType || getMicrobiologyLogType}).then(response => {\r\n                    setSpecificColumnHeader(\"Id Microbiologia\");\r\n                    setSpecificColumnField(\"microbiologyId\");\r\n                    setContent(response.data.logs);\r\n                    setTotalRecords(response.data.length);\r\n                    showToast('success', \"Resultados Encontrados\", \"Foram encontrados \" + response.data.length + \" resultados\")\r\n                }).catch(err => {\r\n                    showToast('error', \"Erro\", err.response.data.error)\r\n                })\r\n            }else if(optionsLogType.menuPrincipal == 2){ //Get patient logs\r\n                optionsLogType.menuMicrobiologia = -1;\r\n                optionsLogType.menuProntuario = -1;\r\n                if(optionsLogType.menuPaciente == 0){\r\n                    microbiologyLogType = \"successfulCreations\";\r\n                    setMicrobiologyLogType(\"successfulCreations\");\r\n                    setShowId(false)\r\n                }else if(optionsLogType.menuPaciente == 1){\r\n                    microbiologyLogType = \"successfulUpdates\";\r\n                    setMicrobiologyLogType(\"successfulUpdates\");\r\n                    setShowId(true)\r\n                }\r\n                \r\n                await api.post('/logs/patient', {logType: microbiologyLogType}).then(response => {\r\n                    setSpecificColumnHeader(\"Id Paciente\");\r\n                    setSpecificColumnField(\"patientId\");\r\n                    setContent(response.data.logs);\r\n                    setTotalRecords(response.data.length);\r\n                    showToast('success', \"Resultados Encontrados\", \"Foram encontrados \" + response.data.length + \" resultados\")\r\n                }).catch(err => {\r\n                    showToast('error', \"Erro\", err.response.data.error)\r\n                })\r\n            }else if(optionsLogType.menuPrincipal == 3){ //Get medical records logs\r\n                optionsLogType.menuMicrobiologia = -1;\r\n                optionsLogType.menuPaciente = -1;\r\n                if(optionsLogType.menuProntuario == 0){\r\n                    microbiologyLogType = \"successfulCreations\";\r\n                    setMicrobiologyLogType(\"successfulCreations\");\r\n                }else if(optionsLogType.menuProntuario == 1){\r\n                    microbiologyLogType = \"successfulExclusions\";\r\n                    setMicrobiologyLogType(\"successfulExclusions\")\r\n                }else if(optionsLogType.menuProntuario == 2){\r\n                    microbiologyLogType = \"successfulUpdates\";\r\n                    setMicrobiologyLogType(\"successfulUpdates\")\r\n                }else if(optionsLogType.menuProntuario == 3){\r\n                    microbiologyLogType = \"unsuccessfulCreations\";\r\n                    setMicrobiologyLogType(\"unsuccessfulCreations\")\r\n                }\r\n\r\n                if(optionsLogType.menuProntuario == 1 || optionsLogType.menuProntuario == 2){ setShowId(true) } else { setShowId(false) };\r\n                if(optionsLogType.menuProntuario == 3){ setShowError(true) } else { setShowError(false) };\r\n                await api.post('/logs/medicalRecords', {logType: microbiologyLogType }).then(response => {\r\n                    setSpecificColumnHeader(\"Id Prontuário\");\r\n                    setSpecificColumnField(\"medicalRecordId\");\r\n                    setContent(response.data.logs);\r\n                    setTotalRecords(response.data.length);\r\n                    showToast('success', \"Resultados Encontrados\", \"Foram encontrados \" + response.data.length + \" resultados\")\r\n                }).catch(err => {\r\n                    showToast('error', \"Erro\", err.response.data.error)\r\n                })\r\n            }\r\n            setLoading(false);\r\n        }, 500)\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const header = (\r\n        <>\r\n            <div>\r\n                <p className=\"h6\">Selecione o Log a ser mostrado</p>\r\n                <ButtonGroup className=\"col-11 mb-2\">\r\n                    {/* <Button variant={getLogType === 0 ? \"secondary\" : \"outline-secondary\"} onClick={() => {logType = 0; setShowLogType1(0); setLogType(0); getLogs()} }>Login</Button>\r\n                    <Button variant={getLogType === 1 ? \"secondary\" : \"outline-secondary\"} onClick={() => {logType = 1; setShowLogType1(1); setLogType(1)} }>Microbiologia</Button>\r\n                    <Button variant={getLogType === 2 ? \"secondary\" : \"outline-secondary\"} onClick={() => {logType = 2; setShowLogType1(2); setLogType(2)} }>Paciente</Button> */}\r\n                    <Button variant={getShowLogType1 == 0 ? \"secondary\" : \"outline-secondary\"} onClick={() => {optionsLogType.menuPrincipal = 0; setShowLogType1(0); getLogs()} }>Login</Button>\r\n                    <Button variant={getShowLogType1 == 1 ? \"secondary\" : \"outline-secondary\"} onClick={() => {optionsLogType.menuPrincipal = 1; setShowLogType1(1)} }>Microbiologia</Button>\r\n                    <Button variant={getShowLogType1 == 2 ? \"secondary\" : \"outline-secondary\"} onClick={() => {optionsLogType.menuPrincipal = 2; setShowLogType1(2)} }>Paciente</Button>\r\n                    <Button variant={getShowLogType1 == 3 ? \"secondary\" : \"outline-secondary\"} onClick={() => {optionsLogType.menuPrincipal = 3; setShowLogType1(3)} }>Prontuários</Button>\r\n                </ButtonGroup>\r\n                <Button variant=\"success\" className=\"float-right mr-lg-2\" title=\"Atualizar\" disabled={getLoading} onClick={() => {getLogs(); showToast('info', 'Notificação', `Foram encontrados ${totalRecords} resultados.`)}}>\r\n                    {getLoading\r\n                        ?\r\n                            <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                        : \r\n                            <FiRefreshCcw size={20}/>\r\n                    }\r\n                </Button>\r\n                <br/>\r\n                {getShowLogType1 == 1\r\n                    ?\r\n                        <ButtonGroup className=\"container-fluid\">\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 0 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuMicrobiologia = 0; getLogs()} }>Criados com sucesso</Button>\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 1 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuMicrobiologia = 1; getLogs()} }>Excluídos com sucesso</Button>\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 2 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuMicrobiologia = 2; getLogs()} }>Atualizados com sucesso</Button>\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 3 ? \"danger\" : \"outline-danger\"} onClick={() => {optionsLogType.menuMicrobiologia = 3; getLogs()} }>Criados sem sucesso</Button>\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 4 ? \"danger\" : \"outline-danger\"} onClick={() => {optionsLogType.menuMicrobiologia = 4; getLogs()} }>Excluídos sem sucesso</Button>\r\n                            <Button variant={ optionsLogType.menuMicrobiologia === 5 ? \"danger\" : \"outline-danger\"} onClick={() => {optionsLogType.menuMicrobiologia = 5; getLogs()} }>Atualizados sem sucesso</Button>\r\n                        </ButtonGroup>\r\n                    : getShowLogType1 == 2\r\n                        ?\r\n                            <ButtonGroup className=\"container-fluid\">\r\n                                <Button variant={ optionsLogType.menuPaciente === 0 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuPaciente = 0; getLogs()} }>Criados com sucesso</Button>\r\n                                <Button variant={ optionsLogType.menuPaciente === 1 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuPaciente = 1; getLogs()} }>Excluídos com sucesso</Button>\r\n                            </ButtonGroup>\r\n\r\n                        : getShowLogType1 == 3\r\n                            ? \r\n                                <ButtonGroup className=\"container-fluid\">\r\n                                    <Button variant={ optionsLogType.menuProntuario === 0 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuProntuario = 0; getLogs()} }>Criados com sucesso</Button>\r\n                                    <Button variant={ optionsLogType.menuProntuario === 1 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuProntuario = 1; getLogs()} }>Excluídos com sucesso</Button>\r\n                                    <Button variant={ optionsLogType.menuProntuario === 2 ? \"success\" : \"outline-success\"} onClick={() => {optionsLogType.menuProntuario = 2; getLogs()} }>Atualizados com sucesso</Button>\r\n                                    <Button variant={ optionsLogType.menuProntuario === 3 ? \"danger\" : \"outline-danger\"} onClick={() => {optionsLogType.menuProntuario = 3; getLogs()} }>Excluídos sem sucesso</Button>\r\n                                </ButtonGroup>\r\n                            : null\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const userColumnTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Usuário</span>\r\n                <a>{rowData.email}</a>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const dateColumnTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Data</span>\r\n                <a>{rowData.date}</a>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const dynamicColumnTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">{getSpecificColumnHeader}</span>\r\n                <a>{rowData[`${getSpecificColumnField}`]}</a>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const errorColumnTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Erro</span>\r\n                <textarea style={{\"width\": \"100%\", \"border\": \"none\", \"outline\": \"none\", \"resize\": \"none\", \"height\": \"8vh\", \"color\": \"#212529\"}} className=\"disabled\" disabled>{rowData.error}</textarea>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-md-5 px-5\">\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable emptyMessage={optionsLogType.menuPrincipal == -1 ? \"Selecione um filtro!\" : \"Nenhum resultado encontrado.\"} className=\"p-datatable-responsive-demo\" header={header} loading={getLoading} resizableColumns={true} value={getContent}>\r\n                        <Column field=\"email\" header=\"Email\" filter filterMatchMode=\"contains\" filterPlaceholder=\"Search by email\" body={userColumnTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Data\" filter filterMatchMode=\"contains\" filterPlaceholder=\"Search by date\" body={dateColumnTemplate}></Column>\r\n                        { optionsLogType.menuPrincipal === 1 || optionsLogType.menuPrincipal === 3\r\n                            ? \r\n                                getShowId\r\n                                    ?\r\n                                        <Column field={getSpecificColumnField} header={getSpecificColumnHeader} filter filterMatchMode=\"contains\" filterPlaceholder=\"Search by Id\" body={dynamicColumnTemplate}></Column>                      \r\n                                    :\r\n                                        null\r\n                            : null\r\n                        }\r\n                        { optionsLogType.menuPrincipal === 1 || optionsLogType.menuPrincipal === 3\r\n                            ? \r\n                                getShowError\r\n                                    ?\r\n                                        <Column field=\"error\" header=\"Erro\" filter filterMatchMode=\"contains\" filterPlaceholder=\"Search by error\" body={errorColumnTemplate}></Column>\r\n                                    : \r\n                                        null\r\n                            : null\r\n                        }\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logs;","import React from 'react';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport Root from './pages/Root/Root';\r\nimport Home from './pages/Home/Home';\r\n\r\nimport Login from './pages/Login/Login';\r\nimport SignUp from './pages/SignUp/SignUp';\r\nimport MyProfile from './pages/Header/MyProfile/MyProfile';\r\nimport Users from './pages/Users/Users';\r\n\r\nimport Notifications from './pages/Header/Notifications/Notifications';\r\nimport HeaderNotLogin from './pages/Header/HeaderNotLogin';\r\nimport Header from './pages/Header/Header';\r\nimport Footer from './pages/Footer/Footer';\r\n\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\n\r\nimport MedicalRecords from './pages/MedicalRecords/MedicalRecords';\r\nimport MedicalRecordsCreate from './pages/MedicalRecords/Create/Create';\r\n\r\nimport Registrations from './pages/Registrations/Registrations';\r\n\r\nimport Patient from './pages/Registrations/Patient/Patient';\r\nimport PatientCreate from './pages/Registrations/Patient/Create/Create';\r\n\r\nimport Diseases from './pages/Registrations/Diseases/Diseases';\r\nimport CreateDisease from './pages/Registrations/Diseases/create/CreateDisease';\r\n\r\nimport Medicines from './pages/Registrations/Medicines/Medicines';\r\n\r\nimport CreateMedicine from './pages/Registrations/Medicines/create/CreateMedicine';\r\n\r\nimport History from './pages/History/History';\r\n\r\nimport NotFound from './pages/NotFound/NotFound';\r\n\r\nimport UnderDevelopment from './pages/UnderDevelopment/UnderDevelopment';\r\n\r\nimport Assessment from './pages/MedicalRecords/Assessment/Assessment'\r\nimport AssessmentCreate from './pages/MedicalRecords/Assessment/Create/Create'\r\n\r\nimport Microbiology from './pages/Microbiology';\r\nimport MicrobiologyForm from \"./pages/Microbiology/MicrobiologyForm\";\r\nimport Recomendations from './pages/Recomendations/Recomendations';\r\n\r\nimport Logs from './pages/Logs/Logs';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <Root />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/login\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <Login />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/signup\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <SignUp />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/home\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Home />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/registrations\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Registrations />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/medicines\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Medicines />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/medicines/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <CreateMedicine />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/diseases\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Diseases />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/diseases/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <CreateDisease />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/patient\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Patient />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/patient/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <PatientCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/medicalRecords/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MedicalRecordsCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MedicalRecords />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords/assessment\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Assessment />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords/assessment/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <AssessmentCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <UnderDevelopment />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/history\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <History />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/myProfile\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MyProfile />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/users\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Users />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/logs\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Logs />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                \r\n                <Route\r\n                    path=\"/notifications\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Notifications />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/notFound\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <NotFound />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/underDevelopment\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <UnderDevelopment />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/microbiology\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Microbiology />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/microbiology/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MicrobiologyForm />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                />\r\n                <Route\r\n                    path=\"/recomendations\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Recomendations />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, { useEffect } from 'react';\r\n\r\nimport './global.css';\r\nimport './App.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio';\r\n    }, []);\r\n\r\n    return (\r\n        <Routes />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import axios from 'axios';\r\n\r\ndeclare module 'axios' {\r\n    export interface AxiosRequestConfig {\r\n        Email?: string,\r\n        baseURL?: string,\r\n    }\r\n}\r\n\r\nconst api = axios.create({\r\n    // baseURL: 'http://localhost:3333'\r\n    // baseURL: 'http://192.168.100.11:3333'\r\n    baseURL: 'http://ec2-3-88-186-254.compute-1.amazonaws.com:3333'\r\n});\r\n\r\nexport default api;"],"sourceRoot":""}