{"version":3,"sources":["components/Toast.tsx","assets/fiocruzFrente.jpeg","assets/fiocruzCastelo.jpg","assets/fiocruzBanner.jpg","assets/logoFiocruz.png","pages/MedicalRecords/MedicalRecords.tsx","pages/MedicalRecords/MedicalRecordsService.tsx","pages/MedicalRecords/Assessment/Assessment.tsx","pages/MedicalRecords/Assessment/AssessmentService.tsx","components/Loading.tsx","pages/Root/Root.tsx","pages/Home/Home.tsx","pages/Login/Login.tsx","pages/SignUp/SignUp.tsx","pages/Header/MyProfile/MyProfile.tsx","pages/Users/UsersService.tsx","pages/Users/Users.tsx","pages/Header/Notifications/NotificationsService.tsx","pages/Header/Notifications/Notifications.tsx","pages/Header/HeaderNotLogin.tsx","pages/Header/Header.tsx","pages/Footer/Footer.tsx","pages/Dashboard/Dashboard.tsx","pages/MedicalRecords/Create/CreateMedicalRecordsService.tsx","pages/Registrations/Diseases/DiseasesService.tsx","pages/Registrations/Medicines/MedicinesService.tsx","pages/MedicalRecords/Create/Create.tsx","pages/Registrations/Registrations.tsx","pages/Registrations/Patient/PatientService.tsx","pages/Registrations/Patient/Patient.tsx","pages/Registrations/Patient/Create/CreatePatientService.tsx","pages/Registrations/Patient/Create/Create.tsx","pages/Registrations/Diseases/Diseases.tsx","pages/Registrations/Diseases/create/CreateDiseaseService.tsx","pages/Registrations/Diseases/create/CreateDisease.tsx","pages/Registrations/Medicines/Medicines.tsx","pages/Registrations/Medicines/create/CreateMedicineService.tsx","pages/Registrations/Medicines/create/CreateMedicine.tsx","pages/History/History.tsx","pages/NotFound/NotFound.tsx","pages/UnderDevelopment/UnderDevelopment.tsx","pages/MedicalRecords/Assessment/Create/CreateAssessmentService.tsx","pages/MedicalRecords/Assessment/Create/Create.tsx","pages/Microbiology/MicrobiologyService.tsx","pages/Microbiology/MicrobiologyView/index.tsx","pages/Microbiology/MicrobiologyForm/index.tsx","pages/Microbiology/index.tsx","pages/Recomendations/Recomendations.tsx","routes.tsx","App.tsx","index.tsx","services/api.ts"],"names":["ToastComponent","props","myToast","useRef","useEffect","messageType","messageTitle","messageContent","lifeTime","current","show","severity","summary","detail","life","ref","position","module","exports","MedicalRecords","useState","getSeqProntuario","setSeqProntuario","getNroProntuario","setNroProntuario","getSeqPaciente","setSeqPaciente","getNomePaciente","setNomePaciente","getDataInternacao","setDataInternacao","getCodDoencaPrincipal","setCodDoencaPrincipal","getCodDoencaSecundario","setCodDoencaSecundario","getSistemaAcometido","setSistemaAcometido","getCodComorbidade","setCodComorbidade","getOrigem","setOrigem","getAlocacao","setAlocacao","getResultadoColeta","setResultadoColeta","getCodAtbPrimario","setCodAtbPrimario","getCodAtbSecundario","setCodAtbSecundario","getSitioInfeccaoPrimario","setSitioInfeccaoPrimario","getTratamento","setTratamento","getIndicacao","setIndicacao","getDisfuncao","setDisfuncao","getOrigemInfeccao","setOrigemInfeccao","getDose","setDose","getPosologia","setPosologia","getDesfecho","setDesfecho","getDataDesfecho","setDataDesfecho","getDataTratadaInternacao","setDataTratadaInternacao","getResultadoColetaString","setResultadoColetaString","getTratamentoCCIHString","setTratamentoCCIHString","getIndicacaoSepseString","setIndicacaoSepseString","getDisfuncaoRenalString","setDisfuncaoRenalString","getDoseCorretaString","setDoseCorretaString","getPosologiaCorretaString","setPosologiaCorretaString","getDataTratadaDesfecho","setDataTratadaDesfecho","setMedicalRecords","datasource","setDatasource","loading","setLoading","loading1","setLoading1","getFirst","setFirst","totalRecords","setTotalRecords","searchInput","setSearchInput","open","setOpen","getMode","setMode","selectedMedicalRecord","setSelectedMedicalRecord","getOptionState","setOptionState","getUserChange","setMedicalRecordChange","getToast","setToast","getMessageType","setMessageType","getMessageTitle","setMessageTitle","getMessageContent","setMessageContent","displayDialog","setDisplayDialog","displayDialog1","setDisplayDialog1","displayDialog2","setDisplayDialog2","displayDialog3","setDisplayDialog3","displayDialog4","setDisplayDialog4","history","useHistory","medicalRecordsService","MedicalRecordsService","medicalRecordData","email","localStorage","getItem","rows","options","label","value","options2","name","cod","options3","pt_br","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","onResultadoChange","e","onTratamentoChange","onIndicacaoChange","onDisfuncaoChange","onDoseChange","onPosologiaChange","onDesfechoChange","checkInput","type","onOptionChange","getMedicalRecordsFunction","data","medicalRecords","length","slice","getMedicalRecordsPaginate","then","setTimeout","onPage","event","startIndex","first","endIndex","header","style","textAlign","className","handleSearch","searchMedicalRecordsGlobal","showMedicalRecords","showToast","searchType","console","log","dataSize","handleSubmit","a","preventDefault","schema","Yup","shape","required","nullable","oneOf","validate","abortEarly","Update","response","updatedMedicalRecord","error","sqlMessage","sqlState","String","includes","newMedicalRecord","onMedicalRecordSelect","SeqProntuario","NroProntuario","SeqPaciente","NomePaciente","res","DataInternacao","split","newData","Date","CodDoencaPrincipal","CodDoencaSecundario","SistemaAcometido","CodComorbidade","Origem","Alocacao","tratarDados","ResultadoColeta","CodAtbPrimario","CodAtbSecundario","SitioInfeccaoPrimario","TratamentoCCIH","IndicacaoSepse","DisfuncaoRenal","OrigemInfeccao","DoseCorreta","PosologiaCorreta","Desfecho","DataDesfecho","res1","newData1","eval","onClickDelete","Delete","deletedMedicalRecord","handleSubmit1","SeqProntuarioBodyTemplate","rowData","Fragment","NroProntuarioBodyTemplate","SeqPacienteBodyTemplate","DataNascimentoBodyTemplate","DataNascimento","NomePacienteBodyTemplate","GeneroBodyTemplate","Genero","DataInternacaoBodyTemplate","DiagnosticoPrincipalBodyTemplate","DiagnosticoPrincipal","AlocacaoBodyTemplate","DesfechoBodyTemplate","fontColor","verifyStatus","color","to","location","pathname","variant","borderRadius","height","onClick","aria-controls","aria-expanded","in","timeout","id","onChange","target","onKeyPress","ev","key","minWidth","size","htmlFor","placeholder","optionLabel","width","tabIndex","paginator","emptyMessage","resizableColumns","lazy","selectionMode","selection","onSelectionChange","onRowSelect","field","body","visible","modal","onHide","push","onSubmit","locale","dateFormat","showButtonBar","monthNavigator","showIcon","showOnFocus","maximizable","keyfilter","defaultValue","Number","min","max","readOnly","autoFocus","api","get","searchKey","searchCode","put","post","Assessment","query","URLSearchParams","useLocation","search","queryResponse","getNroAvaliacao","setNroAvaliacao","getDataAvaliacao","setDataAvaliacao","getResultadoCulturas","setResultadoCulturas","getResCulturasAcao","setResCulturasAcao","getDoseCorreta","setDoseCorreta","getPosologiaCorreta","setPosologiaCorreta","getAlertaDot","setAlertaDot","getAlertaDotString","setAlertaDotString","getAlertaDotDescricao","setAlertaDotDescricao","getDisfuncaoRenal","setDisfuncaoRenal","getAtbContraindicacao","setAtbContraindicacao","getAlteracaoPrescricao","setAlteracaoPrescricao","getAlteracaoPrescricaoString","setAlteracaoPrescricaoString","getAtbDiluicaoInfusao","setAtbDiluicaoInfusao","getAtbDiluicaoInfusaoString","setAtbDiluicaoInfusaoString","getInteracaoAtbMedicamento","setInteracaoAtbMedicamento","getInteracaoAtbMedicamentoString","setInteracaoAtbMedicamentoString","getHemodialise","setHemodialise","getHemodialiseString","setHemodialiseString","getAtbOral","setAtbOral","getTrocaAtb","setTrocaAtb","getNovoAtb","setNovoAtb","getDataAvaliacaoTratada","setDataAvaliacaoTratada","assessment","setAssessment","totalAssessment","setTotalAssessment","selectedAssessment","setSelectedAssessment","getAssessmentChange","setAssessmentChange","assessmentService","AssessmentService","assessmentData","getAssessmentFunction","showAssessments","assessments","getAssessmentPaginate","Verify","verifyMR","searchAssessmentGlobal","onDoseCorretaChange","onPosologiaCorretaChange","onAlertaDotChange","onAlteracaoPrescricaoChange","onAtbContraindicacaoChange","onAtbDiluicaoInfusaoChange","onInteracaoAtbMedicamentoChange","onHemodialiseChange","onAtbOralChange","onTrocaAtbChange","options4","options5","updatedAssessment","deletedAssessment","newAssessment","onAssessmentSelect","NroAvaliacao","DataAvaliacao","ResultadoCulturas","ResCulturasAcao","AlertaDot","AlertaDotDescricao","AtbContraindicacao","AlteracaoPrescricao","AtbDiluicaoInfusao","InteracaoAtbMedicamento","Hemodialise","AtbOral","TrocaAtb","NovoAtb","NroAvaliacaoBodyTemplate","DataAvaliacaoBodyTemplate","AtbOralBodyTemplate","AtbContraindicacaoBodyTemplate","TrocaAtbBodyTemplate","IdProntuario","seqProntuario","Loading","strokeWidth","animationDuration","Root","Home","document","title","Login","useCookies","setCookies","getEmail","setEmail","getPassword","setPassword","index","setIndex","setItem","senha","userLogin","tokenLoginResponse","jwt","decode","userToken","setCookiesLogin","Email","Nome","TipoUsuario","CodUsuario","message","nome","tipoUsuario","codUsuario","nomeArray","Carousel","activeIndex","onSelect","selectedIndex","Item","src","loginFiocruzCustomImage","alt","loginFiocruzCasteloImage","loginBanner","autoComplete","minLength","disabled","col-1","Toast","SignUp","getNome","setNome","getMatricula","setMatricula","getSenha","setSenha","getRedefinirSenha","setRedefinirSenha","matricula","confirmarSenha","createdUser","status","MyProfile","cookies","setEditable","pharmaceuticalStatus","setPharmaceuticalStatus","initData","setInitData","formData","setFormData","handleInputChange","updatedUser","response1","users","Matricula","userData","alert","stateMethod","setPosition","displayPosition","setDisplayPosition","Button","footer","TipoNotificacao","requestChangeUserType","UsersService","userId","newUserType","verifyUserOption","Users","cookie","prontuario","setProntuario","getEnd","setEnd","selectedUser","setSelectedUser","getUser","setUser","setUserChange","getUserVerifyOption","setUserVerifyOption","usersService","dt","getUsersPaginate","getUsersFunction","showUsers","i","searchUserGlobal","userFound","dialogFooter","Object","assign","dataKey","isVerified","blockScroll","changeUserType","Dropdown","Divider","changeVerifyUser","verifyUser","showData","codUsuarioDelete","deleteUser","deletedUser","NotificationsService","Notifications","getNotifications","setNotifications","responseDataStatus","setResponseDataStatus","responseData","setResponseData","notificationsService","getNotificationFunction","notifications","column","NotificationId","tipoNotificacao","notificationType","updatedStatusNotification","Header","serverRunning","errorType","code","href","logo","goBack","removeCookie","userName","setUserName","setTipoUsuario","notificationsLength","setNotificationsLength","getLifeTime","setLifeTime","notificationFound","Badge","Toggle","Menu","removeItem","left","top","Footer","rel","Dashboard","labels","datasets","backgroundColor","hoverBackgroundColor","CreateMedicalRecordsService","DiseasesService","codDoenca","catch","err","delete","updatedDiseasesDB","currentDiseasesDB","MedicinesService","ean","MedicalRecordsForm","diseases","setDiseases","setDiseasesChange","selectedDiseases","setSelectedDiseases","getType","setType","diseasesService","medicines","setMedicines","totalRecords2","setTotalRecords2","first2","setFirst2","searchInput2","setSearchInput2","getOptionState2","setOptionState2","setMode2","open2","setOpen2","setMedicinesChange","selectedMedicines","setSelectedMedicines","medicinesService","createMedicalRecordsService","DiseasesData","MedicinesData","Create","CreatedMedicalRecord","header2","getDiseasesFunction","getDiseasesPaginate","searchDiseasesGlobal","getMedicinesFunction","getMedicinesPaginate","handleSearch2","searchMedicineGlobal","Collapse","margin","CodDoenca","onDiseasesSelect","startIndex2","endIndex2","EAN","onMedicinesSelect","Registrations","PatientService","idPatient","IdPaciente","Patient","paciente","setPaciente","setPacienteSelect","getPacienteSeq","setPacienteSeq","getPacienteNro","setPacienteNro","getPacienteGenero","setPacienteGenero","getPacienteNome","setPacienteNome","getPacienteDataNascimento","setPacienteDataNascimento","getPacienteProntuario","setPacienteProntuario","getPacienteAvalicao","setPacienteAvaliacao","getPacienteIdade","setPacienteIdade","patientService","getPacienteNomeUpdate","setPacienteNomeUpdate","getPacienteDataNascimentoUpdate","setPacienteDataNascimentoUpdate","getPacienteGeneroUpdate","setPacienteGeneroUpdate","match","params","getPatientFunction","getPatientFunction1","patients","getPatientPaginate","patientFound","tempoAtual","parseDataAniversario","dataAniversario","age","getFullYear","m","getMonth","getDate","getPatientInformation","medicalRecordsLength","assessmentLength","updatePatientInformation","updatedPatient","deletePatient","deletedPatient","searchPatientGlobal","pacienteData","NroPaciente","dataNascimento","getPatientInformationUpdate","maximized","CreatePatientService","GeneroPaciente","PatientCreate","getNroPaciente","setNroPaciente","getDataNascimentoPaciente","setDataNascimentoPaciente","getGeneroPaciente","setGeneroPaciente","undefined","createPatientService","create","createdPatient","yearNavigator","yearRange","touchUI","Diseases","optionState","displayDialogs","setDisplayDialogs","setCodDoenca","diseaseData","updatedCodDoenca","setUpdatedCodDoenca","updatedNome","setUpdatedNome","selectedRow","setSelectedRow","setSelectedDisease","up","updateDisease","updatedDisease","deleteDisease","deletedDisease","onUserSelect","CreateDiseaseService","DiseasesCreate","setCodDoeca","toast","createDiseaseService","HandleToast","Medicines","setEan","medicineData","updatedEan","setUpdatedEan","setSelectedMedicine","deleteMedicine","deletedMedicine","CreateMedicineService","PrincipioAtivo","Registro","Laboratorio","Produto","Apresentacao","ClasseTerapeutica","CNPJ","MedicinesCreate","setEAN","principioAtivo","setPrincipioAtivo","registro","setRegistro","laboratorio","setLaboratorio","produto","setProduto","apresentacao","setApresentacao","classeTerapeutica","setClasseTerapeutica","setCNPJ","createMedicineService","History","setActiveIndex","items","command","item","maxWidth","model","NotFound","CreateAssessmentService","AssessmentForm","createAssessmentService","CreatedAssessment","page","filter","filterValue","microbiologyData","MicrobiologyView","view","setView","IdMicrobiologia","setIdMicrobiologia","setIdPaciente","setIdProntuario","DataColeta","setDataColeta","DataResultado","setDataResultado","SwabNasalObservacoes","setSwabNasalObservacoes","SwabRetalObservacoes","setSwabRetalObservacoes","SangueObservacoes","setSangueObservacoes","UrinaObservacoes","setUrinaObservacoes","SecrecaoTraquealObservacoes","setSecrecaoTraquealObservacoes","OutrosObservacoes","setOutrosObservacoes","PerfilSensibilidade","setPerfilSensibilidade","MicrobiologyService","MicrobiologyForm","setTitle","buttonLabel","setButtonLabel","SwabNasal","setSwabNasal","SwabRetal","setSwabRetal","Sangue","setSangue","Urina","setUrina","SecrecaoTraqueal","setSecrecaoTraqueal","Outros","setOutros","viewNasal","setViewNasal","viewRetal","setViewRetal","viewSangue","setViewSangue","viewUrina","setViewUrina","viewSec","setViewSec","viewOutros","setViewOutros","update","formatDate","date","newDate","getById","microbiology","dataColeta","dataResultado","loadMicrobiologyInfo","showButtons","maxLength","autoResize","Microbiology","microbiologies","setMicrobiologies","records","setRecords","setId","setUpdate","deleteDialog","setDeleteDialog","selectedMicrobiology","setselectedMicrobiology","tableloading","setTableLoading","setFilter","setFilterValue","successfulSearch","setSuccessfulSearch","handleFormat","verifica","handleTableUpdate","getMicrobiologies","results","count","microbiologiesData","map","handleReset","onMicrobiologySelect","handleDelete","Recomendations","Routes","path","render","HeaderNotLogin","exact","CreateMedicine","CreateDisease","UnderDevelopment","App","ReactDOM","StrictMode","getElementById","axios","baseURL"],"mappings":"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","file":"static/js/main.cce3d694.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ToastComponent = (props: any) => {\r\n\r\n    const myToast: any = useRef(null);\r\n    useEffect(() => {\r\n        showToast(props.messageType, props.messageTitle, props.messageContent, props.lifeTime);\r\n    }, [])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string, lifeTime?: number) {\r\n        if (lifeTime) {\r\n            myToast.current.show({ severity: messageType, summary: messageTitle, detail: messageContent, life: lifeTime });\r\n        } else {\r\n            myToast.current.show({ severity: messageType, summary: messageTitle, detail: messageContent, life: 4000 });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={myToast} position=\"bottom-right\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToastComponent;","module.exports = __webpack_public_path__ + \"static/media/fiocruzFrente.bd8d996e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/fiocruzCastelo.c9217658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fiocruzBanner.9a56b3de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logoFiocruz.afbb0d33.png\";","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../components/Toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport * as Yup from \"yup\";\r\n\r\nimport {MedicalRecordsService} from './MedicalRecordsService';\r\nimport Loading from '../../components/Loading';\r\nimport './MedicalRecords.css'\r\n\r\nconst MedicalRecords = () => {\r\n    const [getSeqProntuario, setSeqProntuario] = useState<any>(null)\r\n    const [getNroProntuario, setNroProntuario] = useState<any>(null)\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>(null)\r\n    const [getNomePaciente, setNomePaciente] = useState<any>(null)\r\n    const [getDataInternacao, setDataInternacao] = useState<any>(null)\r\n    const [getCodDoencaPrincipal, setCodDoencaPrincipal] = useState<string>('')\r\n    const [getCodDoencaSecundario, setCodDoencaSecundario] = useState<any>(null)\r\n    const [getSistemaAcometido, setSistemaAcometido] = useState<string>('')\r\n    const [getCodComorbidade, setCodComorbidade] = useState<any>(null)\r\n    const [getOrigem, setOrigem] = useState<string>('')\r\n    const [getAlocacao, setAlocacao] = useState<string>('')\r\n    const [getResultadoColeta, setResultadoColeta] = useState<any>(null)\r\n    const [getCodAtbPrimario, setCodAtbPrimario] = useState<string>('')\r\n    const [getCodAtbSecundario, setCodAtbSecundario] = useState<any>(null)\r\n    const [getSitioInfeccaoPrimario, setSitioInfeccaoPrimario] = useState<any>(null)\r\n    const [getTratamento, setTratamento] = useState<string>('')\r\n    const [getIndicacao, setIndicacao] = useState<string>('')\r\n    const [getDisfuncao, setDisfuncao] = useState<string>('')\r\n    const [getOrigemInfeccao, setOrigemInfeccao] = useState<string>('')\r\n    const [getDose, setDose] = useState<any>(null)\r\n    const [getPosologia, setPosologia] = useState<any>(null)\r\n    const [getDesfecho, setDesfecho] = useState<any>(null)\r\n    const [getDataDesfecho, setDataDesfecho] = useState<any>(null)\r\n    \r\n    const [getDataTratadaInternacao, setDataTratadaInternacao] = useState<string>('')\r\n    const [getResultadoColetaString, setResultadoColetaString] = useState<string>('')\r\n    const [getTratamentoCCIHString, setTratamentoCCIHString] = useState<string>('')\r\n    const [getIndicacaoSepseString, setIndicacaoSepseString] = useState<string>('')\r\n    const [getDisfuncaoRenalString, setDisfuncaoRenalString] = useState<string>('')\r\n    const [getDoseCorretaString, setDoseCorretaString] = useState<string>('')\r\n    const [getPosologiaCorretaString, setPosologiaCorretaString] = useState<string>('')\r\n    const [getDataTratadaDesfecho, setDataTratadaDesfecho] = useState<string>('')\r\n    \r\n    const [MedicalRecords, setMedicalRecords] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [selectedMedicalRecord, setSelectedMedicalRecord] = useState<any>(null);\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getUserChange, setMedicalRecordChange] = useState();\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n    const [displayDialog4, setDisplayDialog4] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    const medicalRecordsService = new MedicalRecordsService()\r\n    var medicalRecordData:any = {};\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n    const rows = 10;\r\n\r\n    let options = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Não', value: 'N'},\r\n    ];\r\n\r\n    let options2 = [\r\n        {name: 'Nro Prontuário', cod: 'Pro'},\r\n        {name: 'Seq Paciente', cod: 'Pac'},\r\n        {name: 'Data Internação', cod: 'Int'}\r\n    ];\r\n\r\n    let options3 = [\r\n        {label: 'Óbito', value: 'Óbito'},\r\n        {label: 'Alta', value: 'Alta'},\r\n        {label: 'Tranferência', value: 'Transferência'}\r\n    ]\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    const onResultadoChange = (e: { value: string }) => {\r\n        setResultadoColeta(e.value);\r\n    };\r\n\r\n    const onTratamentoChange = (e: { value: string }) => {\r\n        setTratamento(e.value);\r\n    };\r\n\r\n    const onIndicacaoChange = (e: { value: string }) => {\r\n        setIndicacao(e.value);\r\n    };\r\n\r\n    const onDisfuncaoChange = (e: { value: string }) => {\r\n        setDisfuncao(e.value);\r\n    };\r\n\r\n    const onDoseChange = (e: { value: string }) => {\r\n        setDose(e.value);\r\n    };\r\n\r\n    const onPosologiaChange = (e: { value: string }) => {\r\n        setPosologia(e.value);\r\n    };\r\n\r\n    const onDesfechoChange = (e: { value: string }) => {\r\n        setDesfecho(e.value);\r\n    };\r\n\r\n    function checkInput(type: number, e: any){\r\n        if(type == 1){\r\n            if(e === ''){\r\n                setCodDoencaSecundario(null);\r\n            }else{\r\n                setCodDoencaSecundario(e)\r\n            }\r\n        }\r\n        if(type == 2){\r\n            if(e === ''){\r\n                setCodComorbidade(null);\r\n            }else{\r\n                setCodComorbidade(e)\r\n            }\r\n        }\r\n        if(type == 3){\r\n            if(e === ''){\r\n                setCodAtbSecundario(null);\r\n            }else{\r\n                setCodAtbSecundario(e)\r\n            } \r\n        }\r\n        if(type == 4){\r\n            if(e === ''){\r\n                setSitioInfeccaoPrimario(null);\r\n            }else{\r\n                setSitioInfeccaoPrimario(e)\r\n            }  \r\n        }\r\n    }\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                getMedicalRecordsFunction(data)\r\n            });\r\n        }, 1000)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function getMedicalRecordsFunction(data?: any){\r\n        setLoading(true);\r\n        if(!data){\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                setDatasource(data.medicalRecords);\r\n                setTotalRecords(data.length);\r\n                data = data.medicalRecords;\r\n                \r\n                setMedicalRecords(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return\r\n            })\r\n        }else{\r\n            setDatasource(data.medicalRecords);\r\n            setTotalRecords(data.length);\r\n            data = data.medicalRecords;\r\n            \r\n            setMedicalRecords(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        \r\n        const startIndex = event.first;\r\n        const endIndex = event.first + rows;\r\n        medicalRecordsService.getMedicalRecordsPaginate(endIndex).then(data => {\r\n            getMedicalRecordsFunction(data);\r\n        });\r\n        setFirst(startIndex);\r\n        setMedicalRecords(datasource.slice(startIndex, endIndex));\r\n        setLoading(false);\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Prontuários</p>\r\n        </>;\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            medicalRecordsService.getMedicalRecordsPaginate(10).then(data => {\r\n                getMedicalRecordsFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        medicalRecordsService.searchMedicalRecordsGlobal(searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.showMedicalRecords){\r\n                setLoading(false);\r\n                setMedicalRecords([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getMedicalRecordsFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nro Prontuário'){\r\n                searchType = 'NroProntuario';\r\n            }else if(getOptionState.name === 'Seq Paciente'){\r\n                searchType = 'SeqPaciente';\r\n            }else if(getOptionState.name === 'Data Internação'){\r\n                searchType = 'DataInternacao'\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            console.log(data)\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroProntuario, getSeqPaciente,\r\n            getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n            getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n            getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n            getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n            getDisfuncao, getOrigemInfeccao, getDose, getPosologia\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroProntuario: Yup.number().required(),\r\n                getSeqPaciente: Yup.number().required(),\r\n                getDataInternacao: Yup.date().required(),\r\n                getCodDoencaPrincipal: Yup.string().required(),\r\n                getCodDoencaSecundario: Yup.string().nullable(),\r\n                getSistemaAcometido: Yup.string().required(),\r\n                getCodComorbidade: Yup.string().nullable(),\r\n                getOrigem: Yup.string().required(),\r\n                getAlocacao: Yup.string().required(),\r\n                getResultadoColeta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getCodAtbPrimario: Yup.string().required(),\r\n                getCodAtbSecundario: Yup.string().nullable(),\r\n                getSitioInfeccaoPrimario: Yup.string().nullable(),\r\n                getTratamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getIndicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getDisfuncao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getOrigemInfeccao: Yup.string().required(),\r\n                getDose: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologia: Yup.string().nullable().oneOf([null, \"S\", \"N\"])\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            medicalRecordsService.Update(getNroProntuario, getSeqPaciente,\r\n                getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n                getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n                getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n                getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n                getDisfuncao, getOrigemInfeccao, getDose, getPosologia, email\r\n            ).then((response) => {\r\n                if(response.updatedMedicalRecord){\r\n                    showToast('success', 'Sucesso!', `Prontuário atualizado com sucesso!`);\r\n                    getMedicalRecordsFunction()\r\n                    setDisplayDialog1(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        if(response.error.sqlState == 23000){\r\n                            if(String(response.error.sqlMessage).includes(\"(`CodDoencaPrincipal`)\") || String(response.error.sqlMessage).includes(\"(`CodDoencaSecundario`)\")){\r\n                                showToast('error', 'Erro!', `O campo código de doença está incorreto`);\r\n                            }\r\n                            else if(String(response.error.sqlMessage).includes(\"(`CodAtbPrimario`)\")  || String(response.error.sqlMessage).includes(\"(`CodAtbSecundario`)\")){\r\n                                showToast('error', 'Erro!', `O campo código de medicamento está incorreto`);\r\n                            }else{\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        }else{\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    let newMedicalRecord = true\r\n    function onMedicalRecordSelect (e: any) {\r\n        newMedicalRecord = false;\r\n        setMedicalRecordChange(e.value)\r\n        medicalRecordData = e.data;\r\n        \r\n        setSeqProntuario(medicalRecordData.SeqProntuario)\r\n        setNroProntuario(medicalRecordData.NroProntuario)\r\n        setSeqPaciente(medicalRecordData.SeqPaciente)\r\n        setNomePaciente(medicalRecordData.NomePaciente)\r\n        var res = medicalRecordData.DataInternacao.split(\"/\")\r\n        var newData = new Date(res[2], res[1]-1, res[0]);\r\n        setDataTratadaInternacao(medicalRecordData.DataInternacao)\r\n        setDataInternacao(newData)\r\n        setCodDoencaPrincipal(medicalRecordData.CodDoencaPrincipal)\r\n        setCodDoencaSecundario(medicalRecordData.CodDoencaSecundario)\r\n        setSistemaAcometido(medicalRecordData.SistemaAcometido)\r\n        setCodComorbidade(medicalRecordData.CodComorbidade)\r\n        setOrigem(medicalRecordData.Origem)\r\n        setAlocacao(medicalRecordData.Alocacao)\r\n        tratarDados(\"ResultadoColeta\")\r\n        setResultadoColeta(medicalRecordData.ResultadoColeta)\r\n        setCodAtbPrimario(medicalRecordData.CodAtbPrimario)\r\n        setCodAtbSecundario(medicalRecordData.CodAtbSecundario)\r\n        setSitioInfeccaoPrimario(medicalRecordData.SitioInfeccaoPrimario)\r\n        tratarDados(\"TratamentoCCIH\")\r\n        setTratamento(medicalRecordData.TratamentoCCIH)\r\n        tratarDados(\"IndicacaoSepse\")\r\n        setIndicacao(medicalRecordData.IndicacaoSepse)\r\n        tratarDados(\"DisfuncaoRenal\")\r\n        setDisfuncao(medicalRecordData.DisfuncaoRenal)\r\n        setOrigemInfeccao(medicalRecordData.OrigemInfeccao)\r\n        tratarDados(\"DoseCorreta\")\r\n        setDose(medicalRecordData.DoseCorreta)\r\n        tratarDados(\"PosologiaCorreta\")\r\n        setPosologia(medicalRecordData.PosologiaCorreta)\r\n        setDesfecho(medicalRecordData.Desfecho)\r\n        if(medicalRecordData.DataDesfecho == null){\r\n            setDataDesfecho(medicalRecordData.DataDesfecho)\r\n        }else{\r\n            setDataTratadaDesfecho(medicalRecordData.DataDesfecho)\r\n            var res1 = medicalRecordData.DataDesfecho.split(\"/\")\r\n            var newData1 = new Date(res1[2], res1[1]-1, res1[0]);\r\n            setDataDesfecho(newData1)\r\n        }\r\n\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    function tratarDados (e: string) {\r\n        if(eval(\"medicalRecordData.\" + e) == \"S\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim\"' + \")\")\r\n        if(eval(\"medicalRecordData.\" + e) == \"N\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não\"' + \")\")\r\n    }\r\n\r\n    function onClickDelete(){\r\n        medicalRecordsService.Delete(getNroProntuario, email)\r\n        .then((response) => {\r\n            if(response.deletedMedicalRecord){\r\n                showToast('success', 'Sucesso!', `Prontuário deletado com sucesso!`);\r\n                getMedicalRecordsFunction()\r\n                setTimeout(() => {\r\n                    setDisplayDialog2(false)\r\n                }, 2500)\r\n            }else{\r\n                if(response.error.sqlMessage){\r\n                    showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.error));\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleSubmit1(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getDesfecho, getDataDesfecho\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getDesfecho: Yup.string().oneOf([\"Alta\", \"Transferência\", \"Óbito\"]).required(),\r\n                getDataDesfecho: Yup.date().required()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            medicalRecordsService.Desfecho(getNroProntuario, getDesfecho, getDataDesfecho, email\r\n            ).then((response) => {\r\n                console.log(response)\r\n                if(response.updatedMedicalRecord){\r\n                    showToast('success', 'Sucesso!', `Desfecho atualizado com sucesso!`);\r\n                    getMedicalRecordsFunction()\r\n                    setDisplayDialog3(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    const SeqProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Seq Prontuário</span>\r\n                <a>{rowData.SeqProntuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const NroProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nro Prontuário</span>\r\n                <a>{rowData.NroProntuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const SeqPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Seq Paciente</span>\r\n                <a>{rowData.SeqPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataNascimentoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nascimento</span>\r\n                <a>{rowData.DataNascimento}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const NomePacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nome</span>\r\n                <a>{rowData.NomePaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const GeneroBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Gênero</span>\r\n                <a>{rowData.Genero}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataInternacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Data Internação</span>\r\n                <a>{rowData.DataInternacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DiagnosticoPrincipalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Diagnostico</span>\r\n                <a>{rowData.DiagnosticoPrincipal}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AlocacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Alocação</span>\r\n                <a>{rowData.Alocacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DesfechoBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.Desfecho;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Óbito')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Alta')\r\n            fontColor = \"#106b00\"\r\n        if(verifyStatus == 'Transferência')\r\n            fontColor = \"#0080FF\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Desfecho</span>\r\n                <a style={{color: fontColor}}>{rowData.Desfecho}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({...location, pathname: '/medicalRecords/create'})}><Button variant=\"outline-dark\" className=\"mb-2\" style={{borderRadius: '0', height:'41.5px'}}>Cadastrar Prontuário</Button></Link>\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar prontuário específico</Button>\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-2\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                {getOptionState === null\r\n                                    ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                    : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {searchInput === ''\r\n                                ? <></>\r\n                                :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getMedicalRecordsFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                        <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n                <div className=\"ml-auto\"></div>\r\n                \r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable value={MedicalRecords} paginator={true} rows={rows} header={header} totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                        onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedMedicalRecord} onSelectionChange={e => setSelectedMedicalRecord(e.value)}\r\n                        onRowSelect={(e) => {onMedicalRecordSelect(e);}}>\r\n                        <Column field=\"SeqProntuario\" header=\"Seq Prontuário\" body={SeqProntuarioBodyTemplate}/>\r\n                        <Column field=\"NroProntuario\" header=\"Nro Prontuário\" body={NroProntuarioBodyTemplate}/>\r\n                        <Column field=\"SeqPaciente\" header=\"Seq Paciente\" body={SeqPacienteBodyTemplate}/>\r\n                        <Column field=\"DataNascimento\" header=\"Nascimento\" body={DataNascimentoBodyTemplate}/>\r\n                        <Column field=\"NomePaciente\" header=\"Nome\" body={NomePacienteBodyTemplate}/>\r\n                        <Column field=\"Genero\" header=\"Gênero\" body={GeneroBodyTemplate}/>\r\n                        <Column field=\"DataInternacao\" header=\"Data Internação\" body={DataInternacaoBodyTemplate}/>\r\n                        <Column field=\"DiagnosticoPrincipal\" header=\"Diagnostico\" body={DiagnosticoPrincipalBodyTemplate}/>\r\n                        <Column field=\"Alocacao\" header=\"Alocação\" body={AlocacaoBodyTemplate}/>\r\n                        <Column field=\"Desfecho\" header=\"Desfecho\" body={DesfechoBodyTemplate}/>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Dialog visible={displayDialog} style={{width: '50%'}} header=\"Ações\" modal={true} onHide={() => setDisplayDialog(false)}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog4(true); setDisplayDialog(false)}}>Visualizar prontuário</Button>\r\n                        </div>\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog1(true); setDisplayDialog(false)}}>Atualizar prontuário</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-3\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog3(true); setDisplayDialog(false)}}>Atualizar desfecho</Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog2(true); setDisplayDialog(false)}}>Excluir prontuário</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row mt-3\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); history.push(`/medicalRecords/assessment/create/?seqProntuario=${getSeqProntuario}`)}}>Cadastrar avaliação</Button>\r\n                        </div>\r\n                        <div className=\"col ml-2\">\r\n                            <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); history.push(`/medicalRecords/assessment/?seqProntuario=${getSeqProntuario}`)}}>Visualizar avaliação</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog2} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                    <p className=\"h5 mx-2\">Deseja realmente excluir o prontuário {getNroProntuario} do paciente {getNomePaciente} do sistema?</p>\r\n                    <Button className=\"mx-2 mt-2 mb-2 mr-3 pr-3 pl-3\" variant=\"outline-danger\" onClick={() => {onClickDelete(); setDisplayDialog2(false)}}>Sim</Button>\r\n                    <Button className=\"mx-2 mt-2 mb-2 pr-3 pl-3\" variant=\"outline-success\"onClick={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>Não</Button>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog3} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.')}}>\r\n                    <div className=\"\">\r\n                        <p className=\"text-dark h3 text-center\">Atualização de Desfecho</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit1}>\r\n                            <DropdownReact/>\r\n                                <label htmlFor=\"Desfecho\" className=\"mt-4\">Desfecho</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDesfecho} options={options3} onChange={onDesfechoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                            <DropdownReact/>\r\n                            \r\n                            <label htmlFor=\"DataDesfecho\" className=\"mt-4\">Data do Desfecho</label>\r\n                            <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataDesfecho} \r\n                                    onChange={(e) => setDataDesfecho(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\" \r\n                                    placeholder=\"Selecione a data do desfecho\" showButtonBar monthNavigator \r\n                                    showIcon showOnFocus={false} required/>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-4 mb-4\">Atualizar</button>\r\n                        </form>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog4} style={{width: '50%'}} modal={true} onHide={() => setDisplayDialog4(false)} maximizable>\r\n                    <p className=\"text-dark h3 text-center mr-5 mb-2\">Prontuário {getNroProntuario} do paciente {getNomePaciente}</p>\r\n                    <p className=\"text-dark h5 mt-5\">Origem: {getOrigem}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Alocação: {getAlocacao}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Data da Internação: {getDataTratadaInternacao}</p>\r\n                    <p className=\"text-dark h5 mt-3\">Código de Doença Primário: {getCodDoencaPrincipal}</p>\r\n                    {getCodDoencaSecundario  &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Doença Secundário: {getCodDoencaSecundario}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Sistema Acometido: {getSistemaAcometido}</p>\r\n                    {getCodComorbidade &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Comorbidade: {getCodComorbidade}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Código de Medicamento Primário: {getCodAtbPrimario}</p>\r\n                    {getCodAtbSecundario &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Código de Medicamento Secundário: {getCodAtbSecundario}</p>\r\n                    }\r\n                    {getSitioInfeccaoPrimario &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Sítio de Infecção Primário: {getSitioInfeccaoPrimario}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Origem da Infecção: {getOrigemInfeccao}</p>\r\n                    {getResultadoColeta &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Resultado Coleta: {getResultadoColetaString}</p>\r\n                    }\r\n                    <p className=\"text-dark h5 text-left mt-3\">Tratamento CCIH: {getTratamentoCCIHString}</p>\r\n                    <p className=\"text-dark h5 text-left mt-3\">Indicação Sepse: {getIndicacaoSepseString}</p>\r\n                    <p className=\"text-dark h5 text-left mt-3\">Disfunção Renal: {getDisfuncaoRenalString}</p>\r\n                    {getDose &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Dose Correta: {getDoseCorretaString}</p>\r\n                    }\r\n                    {getPosologia &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Posologia Correta: {getPosologiaCorretaString}</p>\r\n                    }\r\n                    {getDataDesfecho &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Data do Desfecho: {getDataTratadaDesfecho}</p>\r\n                    }\r\n                    {getDesfecho != \"Sem desfecho\" &&\r\n                        <p className=\"text-dark h5 text-left mt-3\">Desfecho: {getDesfecho}</p>\r\n                    }\r\n                </Dialog>\r\n\r\n                <Dialog visible={displayDialog1} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog1(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}} maximizable>\r\n                    <div className=\"\">\r\n                    <p className=\"text-dark h3 text-center\">Atualização de Prontuário</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"NroProntuario\">Número do Prontuário</label>\r\n                                        <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroProntuario\" name=\"NroProntuario\"\r\n                                            defaultValue={getNroProntuario} onChange={(e) => setNroProntuario(Number((e.target as HTMLInputElement).value))}\r\n                                            placeholder=\"Digite o número do prontuário\" min=\"1\" max=\"999999999\" readOnly required autoFocus/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"SeqPaciente\">Sequência do Paciente</label>\r\n                                        <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"SeqPaciente\" name=\"SeqPaciente\"\r\n                                        defaultValue={getSeqPaciente} onChange={(e) => setSeqPaciente(Number((e.target as HTMLInputElement).value))}\r\n                                        placeholder=\"Digite o número do paciente\" min=\"1\" max=\"999999999\" required/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"Origem\">Origem</label>\r\n                                        <InputText style={{width: '100%'}} id=\"Origem\" name=\"Origem\"\r\n                                            defaultValue={getOrigem} onChange={(e) => setOrigem((e.target as HTMLInputElement).value)}\r\n                                            placeholder=\"Digite a origem\" required/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"Alocacao\">Alocação</label>\r\n                                        <InputText style={{width: '100%'}} id=\"Alocacao\" name=\"Alocacao\"\r\n                                            defaultValue={getAlocacao} onChange={(e) => setAlocacao((e.target as HTMLInputElement).value)}\r\n                                            placeholder=\"Digite a alocação\" required/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <label htmlFor=\"DataInternacao\" className=\"mt-4\">Data da Internação</label>\r\n                                <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataInternacao} \r\n                                    onChange={(e) => setDataInternacao(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\" \r\n                                    placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator \r\n                                    showIcon showOnFocus={false} required/>\r\n                                \r\n                                <label htmlFor=\"CodDoencaPrincipal\" className=\"mt-4\">Código de Doença Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodDoencaPrincipal\" name=\"CodDoencaPrincipal\"\r\n                                    defaultValue={getCodDoencaPrincipal} onChange={(e) => setCodDoencaPrincipal((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o código de doença primário\" required/>\r\n                                \r\n                                <label htmlFor=\"CodDoencaSecundario\" className=\"mt-4\">Código de Doença Secundário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodDoencaSecundario\" name=\"CodDoencaSecundario\"\r\n                                    defaultValue={getCodDoencaSecundario} onChange={(e) => {checkInput(1, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de doença secundário\" />\r\n                                \r\n                                <label htmlFor=\"SistemaAcometido\" className=\"mt-4\">Sistema Acometido</label>\r\n                                <InputText style={{width: '100%'}} id=\"SistemaAcometido\" name=\"SistemaAcometido\"\r\n                                    defaultValue={getSistemaAcometido} onChange={(e) => setSistemaAcometido((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o sistema acometido\" required/>\r\n                                \r\n                                <label htmlFor=\"CodComorbidade\" className=\"mt-4\">Código de Comorbidade</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodComorbidade\" name=\"CodComorbidade\"\r\n                                    defaultValue={getCodComorbidade} onChange={(e) => {checkInput(2, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de comorbidade\" />\r\n                                \r\n                                <label htmlFor=\"CodAtbPrimario\" className=\"mt-4\">Código de Medicamento Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodAtbPrimario\" name=\"CodAtbPrimario\"\r\n                                    defaultValue={getCodAtbPrimario} onChange={(e) => setCodAtbPrimario((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite o código de medicamento primário\" required/>\r\n\r\n                                <label htmlFor=\"CodAtbSecundario\" className=\"mt-4\">Código de Medicamento Secundário</label>\r\n                                <InputText style={{width: '100%'}} id=\"CodAtbSecundario\" name=\"CodAtbSecundario\"\r\n                                    defaultValue={getCodAtbSecundario} onChange={(e) => {checkInput(3, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o código de medicamento secundário\" />\r\n\r\n                                <label htmlFor=\"SitioInfeccaoPrimario\" className=\"mt-4\">Sítio de Infecção Primário</label>\r\n                                <InputText style={{width: '100%'}} id=\"SitioInfeccaoPrimario\" name=\"SitioInfeccaoPrimario\"\r\n                                    defaultValue={getSitioInfeccaoPrimario} onChange={(e) => {checkInput(4, (e.target as HTMLInputElement).value)}}\r\n                                    placeholder=\"Digite o sítio de infecção primário\" />\r\n\r\n                                <label htmlFor=\"OrigemInfeccao\" className=\"mt-4\">Origem da Infecção</label>\r\n                                <InputText style={{width: '100%'}} id=\"OrigemInfeccao\" name=\"OrigemInfeccao\"\r\n                                    defaultValue={getOrigemInfeccao} onChange={(e) => setOrigemInfeccao((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a origem da infecção\" required/>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"ResultadoColeta\">Resultado Coleta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getResultadoColeta} options={options} onChange={onResultadoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"TratamentoCCIH\">Tratamento CCIH</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getTratamento} options={options} onChange={onTratamentoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"IndicacaoSepse\">Indicação Sepse</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getIndicacao} options={options} onChange={onIndicacaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"DisfuncaoRenal\">Disfunção Renal</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getDisfuncao} options={options} onChange={onDisfuncaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col mr-4\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getDose} options={options} onChange={onDoseChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact/>\r\n                                            <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                            <br></br>\r\n                                            <Dropdown className=\"\" value={getPosologia} options={options} onChange={onPosologiaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n                                        <DropdownReact/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Atualizar</button>\r\n                        </form>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MedicalRecords;","import api from '../../services/api';\r\n\r\nclass MedicalRecordsService {\r\n    async getMedicalRecordsPaginate(endIndex: Number) {\r\n        return await api.get(`medicalRecords/paginate/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchMedicalRecordsGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'Pro') {\r\n            return await api.get(`medicalRecords/nroProntuario/?nroProntuario=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Pac') {\r\n            return await api.get(`medicalRecords/seqPaciente/?seqPaciente=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Int') {\r\n            return await api.get(`medicalRecords/dataInternacao/?dataInternacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async Update(getNroProntuario: any, getSeqPaciente: any, getDataInternacao: string, getCodDoencaPrincipal: string,\r\n        getCodDoencaSecundario: any, getSistemaAcometido: string, getCodComorbidade: any, getOrigem: string, getAlocacao: string,\r\n        getResultadoColeta: any, getCodAtbPrimario: string, getCodAtbSecundario: any, getSitioInfeccaoPrimario: any,\r\n        getTratamento: string, getIndicacao: string, getDisfuncao: string, getOrigemInfeccao: string, \r\n        getDose: any, getPosologia: any, email:any) {\r\n            return await api.put('medicalRecords/update', {\r\n            NroProntuario: getNroProntuario, SeqPaciente: getSeqPaciente, DataInternacao: getDataInternacao,\r\n            CodDoencaPrincipal: getCodDoencaPrincipal, CodDoencaSecundario: getCodDoencaSecundario,\r\n            SistemaAcometido: getSistemaAcometido, CodComorbidade: getCodComorbidade, Origem: getOrigem, \r\n            Alocacao: getAlocacao, ResultadoColeta: getResultadoColeta, CodAtbPrimario: getCodAtbPrimario,\r\n            CodAtbSecundario: getCodAtbSecundario, SitioInfeccaoPrimario: getSitioInfeccaoPrimario, \r\n            TratamentoCCIH: getTratamento, IndicacaoSepse: getIndicacao, DisfuncaoRenal: getDisfuncao, \r\n            OrigemInfeccao: getOrigemInfeccao, DoseCorreta: getDose, PosologiaCorreta: getPosologia, email: email\r\n        }).then(response => response.data);\r\n    }\r\n\r\n    async Delete(getNroProntuario: any, email:any) {\r\n        return await api.post('medicalRecords/delete', { NroProntuario: getNroProntuario, email: email })\r\n            .then(response => response.data);\r\n    }\r\n\r\n    async Desfecho(getNroProntuario: any, getDesfecho: any, getDataDesfecho: string, email:any) {\r\n        return await api.put('medicalRecords/desfecho', { NroProntuario: getNroProntuario, \r\n            Desfecho: getDesfecho, DataDesfecho: getDataDesfecho, email: email\r\n        }).then(response => response.data);\r\n    }\r\n\r\n}\r\n\r\nexport { MedicalRecordsService };","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport { Link, useLocation, useHistory} from 'react-router-dom';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport * as Yup from \"yup\";\r\n\r\nimport {AssessmentService} from './AssessmentService';\r\nimport Loading from '../../../components/Loading';\r\nimport './Assessment.css'\r\n\r\nconst Assessment = () => {\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const queryResponse = query.get(\"seqProntuario\") || \"\"\r\n\r\n    const [getNroAvaliacao, setNroAvaliacao] = useState<any>(null)\r\n    const [getDataAvaliacao, setDataAvaliacao] = useState<any>(null)\r\n    const [getResultadoCulturas, setResultadoCulturas] = useState<any>(null)\r\n    const [getResCulturasAcao, setResCulturasAcao] = useState<any>(null)\r\n    const [getDoseCorreta, setDoseCorreta] = useState<any>(null)\r\n    const [getDoseCorretaString, setDoseCorretaString] = useState<any>(null)\r\n    const [getPosologiaCorreta, setPosologiaCorreta] = useState<any>(null)\r\n    const [getPosologiaCorretaString, setPosologiaCorretaString] = useState<any>(null)\r\n    const [getAlertaDot, setAlertaDot] = useState<any>(null)\r\n    const [getAlertaDotString, setAlertaDotString] = useState<any>(null)\r\n    const [getAlertaDotDescricao, setAlertaDotDescricao] = useState<any>(null)\r\n    const [getDisfuncaoRenal, setDisfuncaoRenal] = useState<string>('')\r\n    const [getAtbContraindicacao, setAtbContraindicacao] = useState<any>(null)\r\n    const [getAlteracaoPrescricao, setAlteracaoPrescricao] = useState<any>(null)\r\n    const [getAlteracaoPrescricaoString, setAlteracaoPrescricaoString] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusao, setAtbDiluicaoInfusao] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusaoString, setAtbDiluicaoInfusaoString] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamento, setInteracaoAtbMedicamento] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamentoString, setInteracaoAtbMedicamentoString] = useState<any>(null)\r\n    const [getHemodialise, setHemodialise] = useState<any>(null)\r\n    const [getHemodialiseString, setHemodialiseString] = useState<any>(null)\r\n    const [getAtbOral, setAtbOral] = useState<any>(null)\r\n    const [getTrocaAtb, setTrocaAtb] = useState<any>(null)\r\n    const [getNovoAtb, setNovoAtb] = useState<any>(null)\r\n    const [getNomePaciente, setNomePaciente] = useState<string>('')\r\n    const [getDataAvaliacaoTratada, setDataAvaliacaoTratada] = useState<string>('')\r\n\r\n    const [assessment, setAssessment] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalAssessment, setTotalAssessment] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [selectedAssessment, setSelectedAssessment] = useState<any>(null);\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getAssessmentChange, setAssessmentChange] = useState();\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const assessmentService = new AssessmentService()\r\n    var assessmentData:any = {};\r\n\r\n    const history = useHistory()\r\n    \r\n    const rows = 10;\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        assessmentService.Verify(queryResponse).then(response => {\r\n            if(response.verifyMR){\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(response.error))\r\n                setTimeout(() => {\r\n                    history.push('/medicalRecords')\r\n                }, 2500)\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                getAssessmentFunction(data)\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    function getAssessmentFunction(data?: any){\r\n        setLoading(true);\r\n        if(!data){\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                if(data.showAssessments){\r\n                    setDatasource(data.assessments);\r\n                    setTotalAssessment(data.length);\r\n                    data = data.assessments;\r\n                    \r\n                    setAssessment(data.slice(0, rows));\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                    return \r\n                }else{\r\n                    showToast('error', 'Erro!', String(data.error));\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                }\r\n            })\r\n        }else{\r\n            if(data.showAssessments){\r\n                setDatasource(data.assessments);\r\n                setTotalAssessment(data.length);\r\n                data = data.assessments;\r\n                \r\n                setAssessment(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(data.error));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        \r\n        const startIndex = event.first;\r\n        const endIndex = event.first + rows;\r\n        assessmentService.getAssessmentPaginate(queryResponse, endIndex).then(data => {\r\n            getAssessmentFunction(data);\r\n        });\r\n        setFirst(startIndex);\r\n        setAssessment(datasource.slice(startIndex, endIndex));\r\n        setLoading(false);\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Avaliações</p>\r\n        </>;\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            assessmentService.getAssessmentPaginate(queryResponse, 10).then(data => {\r\n                getAssessmentFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        assessmentService.searchAssessmentGlobal(queryResponse, searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.showAssessments){\r\n                setLoading(false);\r\n                setAssessment([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getAssessmentFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nro Avaliação'){\r\n                searchType = 'NroAvaliacao';\r\n            }else if(getOptionState.name === 'Data Avaliação'){\r\n                searchType = 'DataAvaliacao';\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            console.log(data)\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    function checkInput(type: number, e: any){\r\n        if(type == 1){\r\n            if(e === ''){\r\n                setResultadoCulturas(null);\r\n            }else{\r\n                setResultadoCulturas(e)\r\n            }\r\n        }\r\n        if(type == 2){\r\n            if(e === ''){\r\n                setResCulturasAcao(null);\r\n            }else{\r\n                setResCulturasAcao(e)\r\n            }\r\n        }\r\n        if(type == 3){\r\n            if(e === ''){\r\n                setAlertaDotDescricao(null);\r\n            }else{\r\n                setAlertaDotDescricao(e)\r\n            }\r\n        }\r\n        if(type == 4){\r\n            if(e === ''){\r\n                setNovoAtb(null);\r\n            }else{\r\n                setNovoAtb(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDoseCorretaChange = (e: { value: string }) => {\r\n        setDoseCorreta(e.value);\r\n    };\r\n\r\n    const onPosologiaCorretaChange = (e: { value: string }) => {\r\n        setPosologiaCorreta(e.value);\r\n    };\r\n\r\n    const onAlertaDotChange = (e: { value: string }) => {\r\n        setAlertaDot(e.value);\r\n    };\r\n\r\n    const onAlteracaoPrescricaoChange = (e: { value: string }) => {\r\n        setAlteracaoPrescricao(e.value);\r\n    };\r\n\r\n    const onAtbContraindicacaoChange = (e: { value: string }) => {\r\n        setAtbContraindicacao(e.value);\r\n    };\r\n\r\n    const onAtbDiluicaoInfusaoChange = (e: { value: string }) => {\r\n        setAtbDiluicaoInfusao(e.value);\r\n    };\r\n\r\n    const onInteracaoAtbMedicamentoChange = (e: { value: string }) => {\r\n        setInteracaoAtbMedicamento(e.value);\r\n    };\r\n\r\n    const onHemodialiseChange = (e: { value: string }) => {\r\n        setHemodialise(e.value);\r\n    };\r\n\r\n    const onAtbOralChange = (e: { value: string }) => {\r\n        setAtbOral(e.value);\r\n    };\r\n\r\n    const onTrocaAtbChange = (e: { value: string }) => {\r\n        setTrocaAtb(e.value);\r\n    };\r\n\r\n    let options = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Não', value: 'N'}\r\n    ]\r\n\r\n    let options2 = [\r\n        {label: 'Sim', value: 'S'},\r\n        {label: 'Sim intermitente', value: 'SI'},\r\n        {label: 'Não', value: 'N'}\r\n    ]\r\n\r\n    let options3 = [\r\n        {label: 'Sim', value: 'Sim'},\r\n        {label: 'Não aplica', value: 'Não aplica'},\r\n        {label: 'Não', value: 'Não'}\r\n    ]\r\n\r\n    let options4 = [\r\n        {name: 'Nro Avaliação', cod: 'Nro'},\r\n        {name: 'Data Avaliação', cod: 'Dat'}\r\n    ]\r\n\r\n    let options5 = [\r\n        {label: 'Sim', value: 'Sim'},\r\n        {label: 'Não', value: 'Não'}\r\n    ]\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n            getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n            getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n            getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroAvaliacao: Yup.number().required(),\r\n                getDataAvaliacao: Yup.date().required(),\r\n                getResultadoCulturas: Yup.string().nullable(),\r\n                getResCulturasAcao: Yup.string().nullable(),\r\n                getDoseCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologiaCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDot: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDotDescricao: Yup.string().nullable(),\r\n                getDisfuncaoRenal: Yup.string().required(),\r\n                getHemodialise: Yup.string().oneOf([\"S\", \"SI\", \"N\"]).required(),\r\n                getAtbOral: Yup.string().oneOf([\"Sim\", \"Não aplica\", \"Não\"]).required(),\r\n                getAtbContraindicacao: Yup.string().oneOf([\"Sim\", \"Não\"]).required(),\r\n                getAlteracaoPrescricao: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAtbDiluicaoInfusao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getInteracaoAtbMedicamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getTrocaAtb: Yup.string().oneOf([\"Sim\", \"Não\"]).required(),\r\n                getNovoAtb: Yup.string().nullable()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            assessmentService.Update(queryResponse, getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n                getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n                getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao, \r\n                getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb)\r\n            .then((response) => {\r\n                if(response.updatedAssessment){\r\n                    showToast('success', 'Sucesso!', `Avaliação atualizada com sucesso!`);\r\n                    getAssessmentFunction()\r\n                    setDisplayDialog2(false)\r\n                }else{\r\n                    if(response.error.sqlMessage){\r\n                        if(response.error.sqlState == 23000){\r\n                            console.log(response.error.sqlState)\r\n                            if(String(response.error.sqlMessage).includes(\"(`NovoAtb`)\")){\r\n                                showToast('error', 'Erro!', `O campo Novo Atb está incorreto`);\r\n                            }else{\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        }else{\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    }else{\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function onClickDelete(){\r\n        assessmentService.Delete(getNroAvaliacao)\r\n        .then((response) => {\r\n            if(response.deletedAssessment){\r\n                showToast('success', 'Sucesso!', `Avaliação deletada com sucesso!`);\r\n                getAssessmentFunction()\r\n                setTimeout(() => {\r\n                    setDisplayDialog3(false)\r\n                }, 2500)\r\n            }else{\r\n                if(response.error.sqlMessage){\r\n                    showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.error));\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    let newAssessment = true\r\n    function onAssessmentSelect (e: any) {\r\n        newAssessment = false;\r\n        setAssessmentChange(e.value);\r\n        assessmentData = e.data;\r\n\r\n        setNroAvaliacao(assessmentData.NroAvaliacao)\r\n        var res = assessmentData.DataAvaliacao.split(\"/\")\r\n        var newData = new Date(res[2], res[1]-1, res[0]);\r\n        setDataAvaliacaoTratada(assessmentData.DataAvaliacao)\r\n        setDataAvaliacao(newData)\r\n        setResultadoCulturas(assessmentData.ResultadoCulturas)\r\n        setResCulturasAcao(assessmentData.ResCulturasAcao)\r\n        tratarDados(\"DoseCorreta\")\r\n        setDoseCorreta(assessmentData.DoseCorreta)\r\n        tratarDados(\"PosologiaCorreta\")\r\n        setPosologiaCorreta(assessmentData.PosologiaCorreta)\r\n        tratarDados(\"AlertaDot\")\r\n        setAlertaDot(assessmentData.AlertaDot)\r\n        setAlertaDotDescricao(assessmentData.AlertaDotDescricao)\r\n        setDisfuncaoRenal(assessmentData.DisfuncaoRenal)\r\n        setAtbContraindicacao(assessmentData.AtbContraindicacao)\r\n        tratarDados(\"AlteracaoPrescricao\")\r\n        setAlteracaoPrescricao(assessmentData.AlteracaoPrescricao)\r\n        tratarDados(\"AtbDiluicaoInfusao\")\r\n        setAtbDiluicaoInfusao(assessmentData.AtbDiluicaoInfusao)\r\n        tratarDados(\"InteracaoAtbMedicamento\")\r\n        setInteracaoAtbMedicamento(assessmentData.InteracaoAtbMedicamento)\r\n        tratarDados(\"Hemodialise\")\r\n        setHemodialise(assessmentData.Hemodialise)\r\n        setAtbOral(assessmentData.AtbOral)\r\n        setTrocaAtb(assessmentData.TrocaAtb)\r\n        setNovoAtb(assessmentData.NovoAtb)\r\n        setNomePaciente(assessmentData.NomePaciente)\r\n        \r\n        setDisplayDialog(true)\r\n    };\r\n\r\n    function tratarDados (e: string) {\r\n        if(eval(\"assessmentData.\" + e) == \"S\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"SI\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Sim intermitente\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"N\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não\"' + \")\")\r\n        if(eval(\"assessmentData.\" + e) == \"NA\")\r\n            eval(\"set\" + e + \"String\" + \"(\" + '\"Não aplica\"' + \")\")\r\n    }\r\n\r\n    const NroAvaliacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nro Avaliação</span>\r\n                <a>{rowData.NroAvaliacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const DataAvaliacaoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Data Avaliação</span>\r\n                <a>{rowData.DataAvaliacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AtbOralBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.AtbOral;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Não aplica')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Antibiótico Oral</span>\r\n                <a style={{color: fontColor}}>{rowData.AtbOral}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const AtbContraindicacaoBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.AtbContraindicacao;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Antibiótico Contraindicação</span>\r\n                <a style={{color: fontColor}}>{rowData.AtbContraindicacao}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const TrocaAtbBodyTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.TrocaAtb;\r\n        let fontColor: any\r\n        if(verifyStatus == 'Não')\r\n            fontColor = \"#a80000\"\r\n        if(verifyStatus == 'Sim')\r\n            fontColor = \"#106b00\"\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Troca antibiótico</span>\r\n                <a style={{color: fontColor}}>{rowData.TrocaAtb}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5 px-5\">\r\n            <Link to={location => ({...location, pathname: '/medicalRecords/assessment/create/'})}><Button variant=\"outline-dark\" className=\"mb-2\" style={{borderRadius: '0', height:'41.5px'}}>Cadastrar Avaliação</Button></Link>\r\n            <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar avaliação específica</Button>\r\n            <Collapse in={open} timeout={200}>\r\n                <div className=\"ml-2\">\r\n                    <div className=\"p-inputgroup\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                            {getOptionState === null\r\n                                ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                            }\r\n                        </span>\r\n                        {searchInput === ''\r\n                            ? <></>\r\n                            :\r\n                                <>\r\n                                    <Dropdown className=\"mx-1\" value={getOptionState} options={options4} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                    <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getAssessmentFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                    <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n            <div className=\"ml-auto\"></div>\r\n            \r\n            <div className=\"datatable-responsive-demo\">\r\n                <DataTable value={assessment} paginator={true} rows={rows} header={header} totalRecords={totalAssessment}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                    onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedAssessment} onSelectionChange={e => setSelectedAssessment(e.value)}\r\n                    onRowSelect={(e) => {onAssessmentSelect(e);}}>\r\n                    <Column field=\"NroAvaliacao\" header=\"Nro Avaliação\" body={NroAvaliacaoBodyTemplate}/>\r\n                    <Column field=\"DataAvaliacao\" header=\"Data Avaliação\" body={DataAvaliacaoBodyTemplate}/>\r\n                    <Column field=\"AtbOral\" header=\"Antibiótico Oral\" body={AtbOralBodyTemplate}/>\r\n                    <Column field=\"AtbContraindicacao\" header=\"Antibiótico Contraindicação\" body={AtbContraindicacaoBodyTemplate}/>\r\n                    <Column field=\"TrocaAtb\" header=\"Troca antibiótico\" body={TrocaAtbBodyTemplate}/>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '50%'}} header=\"Ações\" modal={true} onHide={() => setDisplayDialog(false)}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog1(true)}}>Visualizar avaliação</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog2(true)}}>Atualizar avaliação</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{width: '100%'}} onClick={() => {setDisplayDialog(false); setDisplayDialog3(true)}}>Excluir avaliação</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog3} style={{width: '50%'}} modal={true} onHide={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                <p className=\"h5 mx-2\">Deseja realmente excluir a avaliação {getNroAvaliacao} do paciente {getNomePaciente} do sistema?</p>\r\n                <Button className=\"mx-2 mt-2 mb-2 mr-3 pr-3 pl-3\" variant=\"outline-danger\" onClick={() => {onClickDelete(); setDisplayDialog3(false)}}>Sim</Button>\r\n                <Button className=\"mx-2 mt-2 mb-2 pr-3 pl-3\" variant=\"outline-success\"onClick={() => {setDisplayDialog3(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>Não</Button>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog1} style={{width: '50%'}} modal={true} maximizable onHide={() => {setDisplayDialog1(false);}}>\r\n                <p className=\"text-dark h3 text-center mr-5 mb-2\">Avaliação {getNroAvaliacao} do paciente {getNomePaciente}</p>\r\n                <p className=\"text-dark h5 mt-5\">Data da Avaliação: {getDataAvaliacaoTratada}</p>\r\n                {getResultadoCulturas &&\r\n                    <p className=\"text-dark h5 mt-3\">Resultado das Culturas: {getResultadoCulturas}</p>\r\n                }\r\n                {getResCulturasAcao &&\r\n                    <p className=\"text-dark h5 mt-3\">Ação do Resultado das Culturas: {getResCulturasAcao}</p>\r\n                }\r\n                {getDoseCorreta &&\r\n                    <p className=\"text-dark h5 mt-3\">Dose Correta: {getDoseCorretaString}</p>\r\n                }\r\n                {getPosologiaCorreta &&\r\n                    <p className=\"text-dark h5 mt-3\">Posologia Correta: {getPosologiaCorretaString}</p>\r\n                }\r\n                {getAlertaDot &&\r\n                    <p className=\"text-dark h5 mt-3\">Alerta Dot: {getAlertaDotString}</p>\r\n                }\r\n                {getAlertaDotDescricao &&\r\n                    <p className=\"text-dark h5 mt-3\">Descrição do Alerta Dot: {getAlertaDotDescricao}</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-3\">Disfuncao Renal: {getDisfuncaoRenal}</p>\r\n                <p className=\"text-dark h5 mt-3\">Contraindicação de Atb: {getAtbContraindicacao}</p>\r\n                {getAlteracaoPrescricao &&\r\n                    <p className=\"text-dark h5 mt-3\">Alteração da Prescrição: {getAlteracaoPrescricaoString}</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-3\">Diluição e/ou Infusão de Atb: {getAtbDiluicaoInfusaoString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Interação Atb e Medicamento: {getInteracaoAtbMedicamentoString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Hemodialise: {getHemodialiseString}</p>\r\n                <p className=\"text-dark h5 mt-3\">Atb Oral: {getAtbOral}</p>\r\n                <p className=\"text-dark h5 mt-3\">Troca do Atb: {getTrocaAtb}</p>\r\n                {getNovoAtb &&\r\n                    <p className=\"text-dark h5 mt-3\">Novo Atb: {getNovoAtb}</p>\r\n                }\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{width: '50%'}} header=\"\" modal={true} maximizable onHide={() => {setDisplayDialog2(false); showToast('warn', 'Aviso!', 'Operação cancelada pelo usuário.');}}>\r\n                <div className=\"\">\r\n                    <p className=\"text-dark h3 text-center\">Atualização de Avaliação</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <label htmlFor=\"NroAvaliacao\">Número da Avaliação</label>\r\n                                    <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroAvaliacao\" name=\"NroAvaliacao\"\r\n                                        defaultValue={getNroAvaliacao} onChange={(e) => setNroAvaliacao(Number((e.target as HTMLInputElement).value))}\r\n                                        placeholder=\"Digite o número da avaliação\" min=\"1\" max=\"999999999\" required autoFocus readOnly/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"DataAvaliacao\" className=\"mt\">Data da Avaliação</label>\r\n                                    <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataAvaliacao} \r\n                                        onChange={(e) => setDataAvaliacao(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\" \r\n                                        placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator \r\n                                        showIcon showOnFocus={false} required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"ResultadoCulturas\" className=\"mt-4\">Resultado das Culturas</label>\r\n                            <InputText style={{width: '100%'}} id=\"ResultadoCulturas\" name=\"ResultadoCulturas\"\r\n                                defaultValue={getResultadoCulturas} onChange={(e) => {checkInput(1, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite o resultado das culturas\"/>\r\n                            \r\n                            <label htmlFor=\"ResCulturasAcao\" className=\"mt-4\">Ação do Resultado das Culturas</label>\r\n                            <InputText style={{width: '100%'}} id=\"ResCulturasAcao\" name=\"ResCulturasAcao\"\r\n                                defaultValue={getResCulturasAcao} onChange={(e) => {checkInput(2, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite a ação do resultado das culturas\"/>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getDoseCorreta} options={options} \r\n                                        onChange={onDoseCorretaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getPosologiaCorreta} options={options} \r\n                                        onChange={onPosologiaCorretaChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AlertaDot\">Alerta Dot</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAlertaDot} options={options} \r\n                                        onChange={onAlertaDotChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"AlertaDotDescricao\" className=\"mt-4\">Descrição do Alerta Dot</label>\r\n                            <InputText style={{width: '100%'}} id=\"AlertaDotDescricao\" name=\"AlertaDotDescricao\"\r\n                                defaultValue={getAlertaDotDescricao} onChange={(e) => {checkInput(3, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite a descrição do alerta dot\"/>\r\n\r\n                            <label htmlFor=\"DisfuncaoRenal\" className=\"mt-4\">Disfuncao Renal</label>\r\n                            <InputText style={{width: '100%'}} id=\"DisfuncaoRenal\" name=\"DisfuncaoRenal\"\r\n                                defaultValue={getDisfuncaoRenal} onChange={(e) => setDisfuncaoRenal((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite a disfunção renal\" required/>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbContraindicacao\">Contraindicação de Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbContraindicacao} options={options5} \r\n                                        onChange={onAtbContraindicacaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AlteracaoPrescricao\">Alteração da Prescrição</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAlteracaoPrescricao} options={options} \r\n                                        onChange={onAlteracaoPrescricaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}}/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbDiluicaoInfusao\">Diluição e/ou Infusão de Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbDiluicaoInfusao} options={options} \r\n                                        onChange={onAtbDiluicaoInfusaoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"InteracaoAtbMedicamento\">Interação Atb e Medicamento</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getInteracaoAtbMedicamento} options={options} \r\n                                        onChange={onInteracaoAtbMedicamentoChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"Hemodialise\">Hemodialise</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getHemodialise} options={options2} \r\n                                        onChange={onHemodialiseChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col mr-4\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"AtbOral\">Atb Oral</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getAtbOral} options={options3} \r\n                                        onChange={onAtbOralChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <DropdownReact/>\r\n                                        <label htmlFor=\"TrocaAtb\">Troca do Atb</label>\r\n                                        <br></br>\r\n                                        <Dropdown className=\"\" value={getTrocaAtb} options={options5} \r\n                                        onChange={onTrocaAtbChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n\r\n                                    <DropdownReact/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"NovoAtb\" className=\"mt-4\">Novo Atb</label>\r\n                            <InputText style={{width: '100%'}} id=\"NovoAtb\" name=\"NovoAtb\"\r\n                                defaultValue={getNovoAtb} onChange={(e) => {checkInput(4, (e.target as HTMLInputElement).value)}}\r\n                                placeholder=\"Digite o novo Atb\"/>\r\n\r\n                        </div>\r\n                        \r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Atualizar</button>\r\n                    </form>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assessment;","import api from '../../../services/api';\r\n\r\nclass AssessmentService {\r\n    async getAssessmentPaginate(queryResponse: any, endIndex: Number) {\r\n        return await api.get(`/medicalRecords/assessment/paginate/?seqProntuario=${queryResponse}&page=${endIndex}`).then(response => { console.log(response); return response.data });\r\n    }\r\n\r\n    async searchAssessmentGlobal(queryResponse: any, searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'Nro') {\r\n            return await api.get(`/medicalRecords/assessment/nroAvaliacao/?seqProntuario=${queryResponse}&nroAvaliacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Dat') {\r\n            return await api.get(`/medicalRecords/assessment/dataAvaliacao/?seqProntuario=${queryResponse}&dataAvaliacao=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async Update(queryResponse: any, getNroAvaliacao: any, getDataAvaliacao: string, getResultadoCulturas: any, getResCulturasAcao: any,\r\n        getDoseCorreta: any, getPosologiaCorreta: any, getAlertaDot: any, getAlertaDotDescricao: any, getDisfuncaoRenal: string, getHemodialise: string,\r\n        getAtbOral: string, getAtbContraindicacao: string, getAlteracaoPrescricao: any, getAtbDiluicaoInfusao: string, getInteracaoAtbMedicamento: string,\r\n        getTrocaAtb: string, getNovoAtb: any) {\r\n            return await api.put('medicalRecords/assessment/update', {\r\n            IdProntuario: queryResponse, NroAvaliacao: getNroAvaliacao, DataAvaliacao: getDataAvaliacao,\r\n            ResultadoCulturas: getResultadoCulturas, ResCulturasAcao: getResCulturasAcao, DoseCorreta: getDoseCorreta, \r\n            PosologiaCorreta: getPosologiaCorreta, AlertaDot: getAlertaDot, AlertaDotDescricao: getAlertaDotDescricao, \r\n            DisfuncaoRenal: getDisfuncaoRenal, Hemodialise: getHemodialise, AtbOral: getAtbOral, \r\n            AtbContraindicacao: getAtbContraindicacao, AlteracaoPrescricao: getAlteracaoPrescricao, \r\n            AtbDiluicaoInfusao: getAtbDiluicaoInfusao, InteracaoAtbMedicamento: getInteracaoAtbMedicamento, \r\n            TrocaAtb: getTrocaAtb, NovoAtb: getNovoAtb\r\n        }).then(response => response.data)\r\n    }\r\n\r\n    async Delete(getNroAvaliacao: any) {\r\n        return await api.post('medicalRecords/assessment/delete', { \r\n            NroAvaliacao: getNroAvaliacao\r\n        }).then(response => response.data);\r\n    }\r\n\r\n    async Verify(queryResponse: any){\r\n        return await api.post('/medicalRecords/assessment/verify/', { \r\n            seqProntuario: queryResponse\r\n        }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { AssessmentService }","import React from 'react';\r\n\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <div className=\"loading\">\r\n            <ProgressSpinner style={{ width: '100px', height: '100px' }} strokeWidth=\"8\" animationDuration=\"1s\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RiLoginBoxLine } from 'react-icons/ri';\r\nimport { IoIosCreate } from 'react-icons/io';\r\n\r\nconst Root = () => {\r\n    return (\r\n        // <div className=\"card-columns m-5 p-3\">\r\n        <div className=\"card mt-5 mx-auto col-sm-10 text-center text-decoration-none\">\r\n            <h2>Root Page</h2>\r\n            <Link to=\"/login\">\r\n                <RiLoginBoxLine className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} />\r\n                <p className=\"h6\">Login</p>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n                <IoIosCreate className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} />\r\n                <p className=\"h6\">Sign Up</p>\r\n            </Link>\r\n        </div>\r\n\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Root;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RiComputerLine, RiBarChart2Line, RiPagesLine } from \"react-icons/ri\";\r\nimport { FaMicroscope, FaHospital, FaHistory } from 'react-icons/fa';\r\n\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Home';\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-5 p-3 card-columns\">\r\n                <Link className=\"text-decoration-none\" to=\"/medicalRecords\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiPagesLine\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>PRONTUÁRIOS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/registrations\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiComputerLine\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>CADASTROS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/dashboard\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <RiBarChart2Line\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>DASHBOARD</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"m-5 p-3 card-columns justify-content-center\">\r\n                <Link className=\"text-decoration-none\" to=\"/microbiology\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaMicroscope\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>MICROBIOLOGIA</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/recomendations\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaHospital\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>RECOMENDAÇÕES CCIH</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none\" to=\"/history\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <FaHistory\r\n                                className=\"mt-3 mb-3 ml-auto mr-auto\"\r\n                                size={40}\r\n                            />\r\n                            <br />\r\n                            <strong>HISTÓRICO</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, {useState, ChangeEvent, FormEvent, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nimport './login.css';\r\n\r\nimport { InputText } from 'primereact/inputtext';\r\nimport loginFiocruzCustomImage from '../../assets/fiocruzFrente.jpeg';\r\nimport loginFiocruzCasteloImage from '../../assets/fiocruzCastelo.jpg';\r\nimport loginBanner from '../../assets/fiocruzBanner.jpg';\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\n// const secretWord = 'PalavraSecreta';\r\n\r\ndeclare module \"jsonwebtoken\"{\r\n    export function decode(\r\n        token: string\r\n    ): {Email: string, Nome: string, TipoUsuario: string, CodUsuario: string};\r\n}\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n\r\n    const [, setCookies] = useCookies([]);\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [getEmail, setEmail] = useState<string>('');\r\n    const [getPassword, setPassword] = useState<string>('');\r\n\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex: any, e: any) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n     \r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        // const token = jwt.sign({email: email, senha: senha}, secretWord);\r\n        localStorage.setItem('@gafio-user/email', getEmail);\r\n        try{\r\n            await api.post('session/login', {email: getEmail, senha: getPassword})\r\n            .then(function(response){\r\n                if(response.data.userLogin){\r\n                    const tokenLoginResponse = jwt.decode(response.data.userToken);\r\n                    console.log(tokenLoginResponse)\r\n                    var Email = tokenLoginResponse.Email;\r\n                    let Nome = tokenLoginResponse.Nome;\r\n                    let TipoUsuario = tokenLoginResponse.TipoUsuario;\r\n                    let CodUsuario = tokenLoginResponse.CodUsuario;\r\n                    setCookiesLogin(Email, Nome, TipoUsuario, CodUsuario);\r\n                }else{\r\n                    showToast('error', 'Erro!', response.data.error);\r\n                }\r\n            })\r\n        }catch(err) {\r\n            if(err.message === \"Network Error\"){\r\n                showToast('error', 'Erro!', 'Não foi possível conectar ao servidor.')\r\n            }\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    async function setCookiesLogin(email: string, nome: string, tipoUsuario: string, codUsuario: string){\r\n        let nomeArray = nome.split(' ');\r\n        nome = nomeArray[0];\r\n        // await api.post(`notifications/length/${codUsuario}`, {TipoUsuario: tipoUsuario}).then(response => {\r\n        //     console.log(response)\r\n        //     if(response.data.notificationFound){\r\n        //         setCookies('notificationLength', {length: response.data.length})\r\n        //     }\r\n        // })\r\n        setCookies('userData', {Email: email, Nome: nome, TipoUsuario: tipoUsuario, CodUsuario: codUsuario});\r\n        history.push('/home');\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Login';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row m-5\"> \r\n                    {/* <img className=\"rounded col-sm-7 \" src={loginBanner} alt=\"Banner\"/> */}\r\n                    {/* <img className=\"rounded col-sm-7 \" src={loginFiocruzCustomImage} alt=\"Banner\"/> */}\r\n                <Carousel className=\"rounded col-sm-7 d-none d-md-block\" activeIndex={index} onSelect={handleSelect}>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginFiocruzCustomImage} alt=\"First slide\" />\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginFiocruzCasteloImage} alt=\"Second slide\" />\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img className=\"d-block w-100\" style={{\"maxHeight\": \"440px\"}} src={loginBanner} alt=\"Third slide\" />\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                <div className=\"card col-md-5 p-5 bg-light shadow-lg float-right text-center\">\r\n                    <form className=\"was-validated pb-2\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <InputText type=\"email\" style={{width: '100%'}} id=\"email\" name=\"email\" onChange={(e) => setEmail((e.target as HTMLInputElement).value)} placeholder=\"Digite seu email\" required autoFocus autoComplete=\"off\"/>\r\n                        \r\n                        <div className=\"valid-feedback text-left\">Válido.</div>\r\n                        <div className=\"invalid-feedback text-left\">Preencha este campo.</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"password\" name=\"senha\" onChange={(e) => setPassword((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Digite sua senha\" required/>\r\n                        \r\n                        <div className=\"valid-feedback text-left\">Válido.</div>\r\n                        <div className=\"invalid-feedback text-left\">Preencha este campo.</div>\r\n                    </div>\r\n                    {\r\n                        getEmail.length < 8 || getPassword.length < 8\r\n                        ? <button type=\"submit\" className=\"btn btn-info btn-primary disabled mt-2 mb-3\" disabled>Entrar</button>\r\n                        : <button type=\"submit\" className=\"btn btn-info btn-primary mt-2 mb-3\">Entrar</button>\r\n                    }\r\n                    </form>\r\n                    <div col-1>\r\n                        <span>Ainda não possui cadastro?</span><br/>\r\n                        <Link to=\"/signUp\">\r\n                            <span className=\"text-info\">Crie já o seu</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState, FormEvent, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\n// import jwt from 'jsonwebtoken';\r\n\r\nimport '../Login/login.css';\r\n\r\nimport api from '../../services/api';\r\n\r\n// const secretWord = 'PalavraSecreta';\r\n\r\nconst SignUp = () => {\r\n    const [getNome, setNome] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getMatricula, setMatricula] = useState('');\r\n    const [getSenha, setSenha] = useState('');\r\n    const [getRedefinirSenha, setRedefinirSenha] = useState('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const history = useHistory()\r\n    \r\n    function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        const nome = getNome;\r\n        const email = getEmail;\r\n        const matricula = getMatricula;\r\n        const senha = getSenha;\r\n        const confirmarSenha = getRedefinirSenha;\r\n        \r\n        // const token = jwt.sign({nome: nome, email: email, senha: senha, confirmarSenha: confirmarSenha, matricula: matricula}, secretWord);\r\n        api.post('users', {nome: nome, email: email, senha: senha, confirmarSenha: confirmarSenha, matricula: matricula})\r\n        .then(function(response){\r\n            if(response.data.createdUser){\r\n                showToast('success', 'Sucesso!', `Usuário criado com sucesso.`);\r\n                // setTimeout(function(){history.push('/login')}, 1750);\r\n                setTimeout(() => {\r\n                    history.push('/login')\r\n                }, 2500);\r\n            }else{\r\n                if(response.data.status === 502){\r\n                    showToast('error', 'Erro!', `Error 502 Bad Gateway. Contate o administrador do sistema para mais detalhes. Erro: UserCreationDatabase`);\r\n                }else{\r\n                    showToast('error', 'Erro!', String(response.data.error));\r\n                }\r\n            }\r\n        })\r\n        // history.push('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Cadastro de Usuário';\r\n    }, []);\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row m-5\">\r\n                <div className=\"card shadow-lg p-3 col-md-6 offset-md-3 border\">\r\n                    <p className=\"text-dark h3 text-center\">Cadastro de Usuário</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nome\">Nome Completo:</label>\r\n                        <InputText type=\"text\" style={{width: '100%'}} id=\"nome\" name=\"nome\" defaultValue={getNome} onChange={(e) => setNome((e.target as HTMLInputElement).value)} placeholder=\"Digite seu nome\" required autoFocus/>\r\n                        \r\n                        <label htmlFor=\"email\" className=\"mt-4\">Email:</label>\r\n                        <InputText type=\"email\" style={{width: '100%'}} id=\"email\" name=\"email\" defaultValue={getEmail} onChange={(e) => setEmail((e.target as HTMLInputElement).value)} placeholder=\"Digite seu email\" required/>\r\n                        \r\n                        <label htmlFor=\"matricula\" className=\"mt-4\">Matrícula:</label>\r\n                        <InputText type=\"text\" style={{width: '100%'}} id=\"matricula\" name=\"matricula\" defaultValue={getMatricula} onChange={(e) => setMatricula((e.target as HTMLInputElement).value)} placeholder=\"Digite sua matrícula\" required/>\r\n                        \r\n                        <label htmlFor=\"senha\" className=\"mt-4\">Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"senha\" name=\"senha\" defaultValue={getSenha} onChange={(e) => setSenha((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Digite sua senha\" required/>\r\n                        \r\n                        <label htmlFor=\"confirmarSenha\" className=\"mt-4\">Confirmar Senha:</label>\r\n                        <InputText type=\"password\" style={{width: '100%'}} id=\"confirmarSenha\" name=\"confirmarSenha\" defaultValue={getRedefinirSenha} onChange={(e) => setRedefinirSenha((e.target as HTMLInputElement).value)} minLength={8} placeholder=\"Confirme sua senha\" required/>\r\n                    </div>\r\n                    {/* {\r\n                    enableSubmitButton === 0\r\n                    ? <button type=\"submit\" className=\"btn btn-info btn-primary disabled\" disabled>Cadastrar</button>\r\n                    : <button type=\"submit\" className=\"btn btn-info btn-primary\">Cadastrar</button>\r\n                    } */}\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState, ChangeEvent, FormEvent, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaPenAlt } from 'react-icons/fa'\r\n\r\nimport api from '../../../services/api';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nimport { Dialog } from 'primereact/dialog';\r\nimport ToastComponent from '../../../components/Toast';\r\n// import {Button} from 'primereact/button';\r\n\r\nconst MyProfile = () => {\r\n    const history = useHistory();\r\n\r\n    const [cookies] = useCookies([]);\r\n    const [responseDataStatus, setResponseDataStatus] = useState(Number);\r\n    const [, setEditable] = useState(0);\r\n    const [responseData, setResponseData] = useState('');\r\n    const [pharmaceuticalStatus, setPharmaceuticalStatus] = useState('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [initData, setInitData] = useState({\r\n        id: '',\r\n        nome: '',\r\n        email: '',\r\n        matricula: '',\r\n        tipoUsuario: ''\r\n    })\r\n\r\n    const [formData, setFormData] = useState({\r\n        nome: \"null\",\r\n        email: \"null\",\r\n        matricula: \"null\",\r\n        tipoUsuario: \"null\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Meu Perfil';\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (cookies.userData) {\r\n            const email = cookies.userData.Email;\r\n            api.get(`users/email/?email=${email}&page=10`).then(response => {\r\n                var { CodUsuario, Nome, Matricula, Email, TipoUsuario } = response.data.users[0];\r\n                setInitData({ ...initData, id: CodUsuario, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                setFormData({ ...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                // setFormData({...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario});\r\n                setPharmaceuticalStatus(TipoUsuario);\r\n            })\r\n        } else {\r\n            history.push('/login');\r\n            alert('ERROR. Faça login novamente para acessar o conteúdo.');\r\n        }\r\n    }, [cookies.userData, history]);\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target\r\n        setFormData({ ...formData, [name]: value })\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        const { nome, email, matricula } = formData;\r\n\r\n        // const token = jwt.sign({nome: nome, email: email, matricula: matricula}, secretWord);\r\n        await api.put(`/users/${initData['id']}}`, { nome: nome, email: email, matricula: matricula })\r\n            .then(function (response) {\r\n                if (response.data.updatedUser) {\r\n                    showToast('success', 'Sucesso!', 'Informações alteradas com sucesso.');\r\n                    api.get(`users/email/?email=${email}&page=10`).then(response1 => {\r\n                        var { CodUsuario, Nome, Matricula, Email, TipoUsuario } = response1.data.users[0];\r\n                        setFormData({ ...formData, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                        setInitData({ ...initData, id: CodUsuario, nome: Nome, email: Email, matricula: Matricula, tipoUsuario: TipoUsuario });\r\n                        setPharmaceuticalStatus(TipoUsuario);\r\n                    })\r\n                    // setTimeout(function(){history.push('/login')}, 3000);\r\n                } else {\r\n                    showToast('error', 'Erro!', response.data.error);\r\n                }\r\n            })\r\n    }\r\n\r\n    function requestChangeUserType() {\r\n        api.put(`users/requestChangeUserType/${initData['id']}`, { TipoNotificacao: \"Change\" }).then(response => {\r\n            if (response.data.requestChangeUserType) {\r\n                showToast('success', 'Sucesso!', 'Solicitação feita com sucesso.');\r\n            } else {\r\n                showToast('error', 'Erro!', response.data.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const [position, setPosition] = useState('center');\r\n    const [displayPosition, setDisplayPosition] = useState(false);\r\n\r\n    const onClick = (stateMethod: any, position: string = '') => {\r\n        stateMethod(true);\r\n\r\n        if (position) {\r\n            setPosition(position);\r\n        }\r\n    }\r\n\r\n    const onHide = (stateMethod: any) => {\r\n        stateMethod(false);\r\n    }\r\n\r\n    const renderFooter = (stateMethod: any) => {\r\n        return (\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => { handleSubmit(e); onHide(stateMethod) }}><FiCheckCircle size={25} />  Finalizar Edição</button>\r\n                {/* <Button label=\"Yes\" icon=\"pi pi-check\"  />\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => onHide(stateMethod)} className=\"p-button-secondary\"/> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Dados do usuário</p>\r\n                <Button type=\"button\" variant=\"outline-info\" className=\"float-right\" onClick={() => { onClick(setDisplayPosition, 'top'); setEditable(1) }}><FaPenAlt size={15} />  Editar Informações</Button>\r\n                <Dialog header=\"Editar dados do Usuário\" visible={displayPosition} style={{ width: '50vw' }} onHide={() => onHide(setDisplayPosition)} position={position} footer={renderFooter(setDisplayPosition)}>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nome\">Nome Completo:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"nome\" name=\"nome\" onChange={handleInputChange} defaultValue={initData['nome']} placeholder=\"Digite seu nome\" required />\r\n                            {/* <input type=\"text\" className=\"form-control\" id=\"nome\" name=\"nome\" onChange={handleInputChange} defaultValue={initData['nome']} placeholder=\"Digite seu nome\" required/> */}\r\n                            <div className=\"m-4\"></div>\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <input type=\"email\" className=\"form-control disabled\" disabled id=\"email\" name=\"email\" onChange={handleInputChange} defaultValue={initData['email']} placeholder=\"Digite seu email\" required />\r\n                            <div className=\"m-4\"></div>\r\n                            <label htmlFor=\"matricula\">Matrícula:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"matricula\" name=\"matricula\" onChange={handleInputChange} defaultValue={initData['matricula']} placeholder=\"Digite sua matrícula\" required />\r\n                        </div>\r\n                    </form>\r\n                </Dialog>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"nome\">Nome Completo:</label>\r\n                <label className=\"form-control\">{initData['nome']}</label>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\" className=\"form-control disabled\" disabled id=\"email\" name=\"email\" onChange={handleInputChange} defaultValue={initData['email']} placeholder=\"Digite seu email\" required />\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"matricula\">Matrícula:</label>\r\n                <label className=\"form-control\">{initData['matricula']}</label>\r\n                <div className=\"m-2\"></div>\r\n                <label htmlFor=\"matricula\">Tipo de usuário atual:\r\n                    {\r\n                        pharmaceuticalStatus === 'F'\r\n                            ? <label><strong>Farmacêutico</strong></label>\r\n                            : pharmaceuticalStatus === 'M'\r\n                                ? <label><strong>Médico</strong></label>\r\n                                : <label><strong>Administrador</strong></label>\r\n                    }\r\n                </label>\r\n                <br />\r\n                {\r\n                    pharmaceuticalStatus === 'F'\r\n                        ? <button type=\"button\" onClick={requestChangeUserType} className=\"btn btn-outline-secondary\">Solicitar alteração</button>\r\n                        : <></>\r\n                }\r\n                {/* {editable === 0\r\n                ? <Button type=\"button\" variant=\"outline-info\" className=\"float-right\" onClick={() => setEditable(1)}><FaPenAlt size={15}/></Button>\r\n                : <Button type=\"button\" variant=\"outline-info\" className=\"float-right disabled\" disabled onClick={() => setEditable(1)}><FaPenAlt size={15}/></Button>\r\n                } */}\r\n\r\n                <br />\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import api from '../../services/api';\r\n\r\nclass UsersService {\r\n    async getUsersPaginate(endIndex: Number) {\r\n        return await api.get(`users/paginate/${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async deleteUser(CodUsuario: Number, Email: string) {\r\n        return await api.post('users/delete', { Email: Email }).then(response => response.data);\r\n    }\r\n\r\n    async searchUserGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'C') {\r\n            return await api.get(`users/id/?id=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'N') {\r\n            return await api.get(`users/name/?nome=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'E') {\r\n            return await api.get(`users/email/?email=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'M') {\r\n            return await api.get(`users/registrations/?matricula=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'TU') {\r\n            return await api.get(`users/userType/?userType=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async changeUserType(userId: Number, newUserType: string) {\r\n        return await api.post('users/changeUserType', { userId: userId, newUserType: newUserType }).then(response => response.data);\r\n    }\r\n\r\n    async changeVerifyUser(userId: Number, newUserType: string) {\r\n        return await api.post(`users/changeVerifyUser`, { userId: userId, verifyUserOption: newUserType }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { UsersService };","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dropdown as DropdownReact } from 'react-bootstrap';\r\n\r\nimport { FiCheck, FiSearch, FiRefreshCcw } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport { UsersService } from './UsersService';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport './Users.css';\r\nimport ToastComponent from '../../components/Toast';\r\nimport Loading from '../../components/Loading';\r\n\r\nconst Users = () => {\r\n    const [cookie] = useCookies();\r\n    const [prontuario, setProntuario] = useState([]);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [getEnd, setEnd] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [getMode, setMode] = useState<string>('N');\r\n\r\n    const [selectedUser, setSelectedUser] = useState<any>(null);\r\n    const [getUser, setUser] = useState<any>(null);\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    let newUser = false;\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [getUserChange, setUserChange] = useState<string>('');\r\n    const [getUserVerifyOption, setUserVerifyOption] = useState<string>('');\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const usersService = new UsersService();\r\n    const rows = 10;\r\n\r\n    let dt = useRef<any>(null);\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    const onUserSelectChange = (e: { value: any }) => {\r\n        setUserChange(e.value);\r\n    };\r\n\r\n    const onUserSelectVerifyChange = (e: { value: any }) => {\r\n        setUserVerifyOption(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { name: 'CódUsuário', cod: 'C' },\r\n        { name: 'Nome', cod: 'N' },\r\n        { name: 'Email', cod: 'E' },\r\n        { name: 'Matrícula', cod: 'M' },\r\n        { name: 'TipoUsuário', cod: 'TU' }\r\n    ];\r\n\r\n    let tipoUsuario = [\r\n        { label: 'Administrador', value: 'A' },\r\n        { label: 'Médico', value: 'M' },\r\n        { label: 'Farmacêutico', value: 'F' },\r\n        { label: 'Leitor', value: 'L' },\r\n    ];\r\n\r\n    let verifyOptions = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' },\r\n    ];\r\n\r\n    //DataTable\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            usersService.getUsersPaginate(10).then(data => {\r\n                getUsersFunction(data)\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${data.length} resultados.`)\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            if (getMode === 'S') {\r\n                usersService.searchUserGlobal(searchInput, getOptionState.cod, endIndex).then(data => {\r\n                    if (!data.userFound) {\r\n                        setLoading(false);\r\n                        setProntuario([]);\r\n                        return\r\n                    }\r\n                    getUsersFunction(data)\r\n                })\r\n            } else if (getMode === 'N') {\r\n                usersService.getUsersPaginate(endIndex).then(data => {\r\n                    getUsersFunction(data);\r\n                });\r\n            }\r\n            setFirst(startIndex);\r\n            setEnd(endIndex);\r\n            setProntuario(datasource.slice(startIndex, endIndex));\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: codUsuarioBodyTemplate, nomeBodyTemplate, emailBodyTemplate, matriculaBodyTemplate, tipoUsuarioBodyTemplate\r\n     * Descricao:\r\n     *  Ao chamar a funcao, o mesmo faz o tratamento dos dados para que a visualizacao seja responsiva\r\n     * Parametros:\r\n     *  rowData: Conteudo da linha a ser mostrado. Objeto\r\n     * Retorno:\r\n     *  Codigo em HTML para ser adicionado ao campo do datatable\r\n    **************************************************/\r\n    const codUsuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Código</span>\r\n                <a>{rowData.CodUsuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const nomeBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Nome</span>\r\n                <a>{rowData.Nome}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const emailBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Email</span>\r\n                <a>{rowData.Email}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const matriculaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Matrícula</span>\r\n                <a>{rowData.Matricula}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const tipoUsuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Tipo usuário</span>\r\n                <a>{rowData.TipoUsuario}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n    /*************************************************\r\n     * Nome: VerifiedTemplate\r\n     * Descricao:\r\n     *  Ao chamar a funcao, o mesmo faz o tratamento dos dados para que a visualizacao seja responsiva e facilite a visualizacao dos dados com cores\r\n     * Parametros:\r\n     *  rowData: Conteudo da linha a ser mostrado. Objeto\r\n     * Retorno:\r\n     *  Codigo em HTML para ser adicionado ao campo do datatable\r\n    **************************************************/\r\n    const VerifiedTemplate = (rowData: any) => {\r\n        let verifyStatus = rowData.isVerified;\r\n        let fontColor: any = verifyStatus === 'Não' ? \"#a80000\" : \"#106b00\";\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Verificado</span>\r\n                <a style={{ color: fontColor }}>{verifyStatus}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: deleteUser\r\n     * Descricao:\r\n     *  Funcao para fazer a exclusao do usuario selecionado\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function deleteUser() {\r\n        const codUsuarioDelete = selectedUser.CodUsuario;\r\n        const Email = selectedUser.Email;\r\n        setDisplayDialog(false);\r\n        if (codUsuarioDelete !== cookie.userData.CodUsuario) {\r\n            usersService.deleteUser(codUsuarioDelete, Email).then(response => {\r\n                if (response.deletedUser) {\r\n                    showToast('success', 'Sucesso!', 'Usuário exluído com sucesso.');\r\n                    setProntuario([]);\r\n                    usersService.getUsersPaginate(10).then(data => {\r\n                        getUsersFunction(data)\r\n                    });\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n            })\r\n        } else {\r\n            showToast('error', 'Erro!', 'Não é possível excluir o próprio usuário.');\r\n        }\r\n        setUserChange('F');\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: dialogCancel\r\n     * Descricao:\r\n     *  Funcao para administrar o fechamento de um Dialog\r\n     * Parametros:\r\n     *  status: Status da mensagem a ser mostrada no Toast de alerta\r\n     *  message: Mensagem a ser mostrada no Toast de alerta\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function dialogCancel(status: string, message: string) {\r\n        setDisplayDialog(false);\r\n        showToast(status, 'Aviso!', message);\r\n        setUserChange('F');\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: changeUserType\r\n     * Descricao:\r\n     *  Funcao para fazer a alteração de tipo de usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function changeUserType() {\r\n        const userId = selectedUser.CodUsuario;\r\n        setTimeout(() => {\r\n            usersService.changeUserType(userId, getUserChange).then(response => {\r\n                if (response.updatedUser) {\r\n                    showToast('success', 'Sucesso!', `A permissão do usuário ${selectedUser.Nome} foi alterada com sucesso.`);\r\n                    getUsersFunction();\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n                setDisplayDialog(false);\r\n            })\r\n            setUserChange('F');\r\n        }, 300);\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: changeVerifyUser\r\n     * Descricao:\r\n     *  Funcao para fazer a alteração da verificacao de usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    function changeVerifyUser() {\r\n        const userId = selectedUser.CodUsuario;\r\n        setTimeout(() => {\r\n            usersService.changeVerifyUser(userId, getUserVerifyOption).then(response => {\r\n                if (response.verifyUser) {\r\n                    showToast('success', 'Sucesso!', `A verificação do usuário \"${selectedUser.Nome}\" foi alterada com sucesso.`);\r\n                    getUsersFunction();\r\n                } else {\r\n                    showToast('error', 'Erro!', response.error);\r\n                }\r\n            })\r\n            setUserVerifyOption('N');\r\n        }, 300);\r\n        setDisplayDialog(false);\r\n    }\r\n    /*************************************************\r\n     * Nome: getUsersFunction\r\n     * Descricao:\r\n     *  Funcao para buscar e receber os dados a serem inseridos no datatable assim como o tratamento básico dos mesmos\r\n     * Parametros:\r\n     *  data: Opcional. Objeto a ser tratado\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function getUsersFunction(data?: any) {\r\n        setLoading(true);\r\n        if (!data) {\r\n            usersService.getUsersPaginate(getEnd).then(data => {\r\n                if(!data.showUsers){\r\n                    showToast('danger', 'Erro!', 'Não foi possível exibir a lista de usuários');\r\n                    return \r\n                }else{\r\n                    setDatasource(data.users);\r\n                    setTotalRecords(data.length);\r\n                    data = data.users;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        if (data[i]['TipoUsuario'] === 'A') {\r\n                            data[i]['TipoUsuario'] = 'Administrador';\r\n                        } else if (data[i]['TipoUsuario'] === 'M') {\r\n                            data[i]['TipoUsuario'] = 'Médico';\r\n                        } else if (data[i]['TipoUsuario'] === 'L'){\r\n                            data[i]['TipoUsuario'] = 'Leitor';\r\n                        } else {\r\n                            data[i]['TipoUsuario'] = 'Farmacêutico';\r\n                        }\r\n                        if (data[i]['isVerified'] === 1) {\r\n                            data[i]['isVerified'] = 'Sim';\r\n                        } else {\r\n                            data[i]['isVerified'] = 'Não';\r\n                        }\r\n                    }\r\n                    setProntuario(data.slice(0, rows));\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                    return\r\n                }\r\n            })\r\n        } else {\r\n            if(!data.showUsers){\r\n                showToast('danger', 'Erro!', 'Não foi possível exibir a lista de usuários');\r\n                return\r\n            }else{\r\n                setDatasource(data.users);\r\n                setTotalRecords(data.length);\r\n                data = data.users;\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if (data[i]['TipoUsuario'] === 'A') {\r\n                        data[i]['TipoUsuario'] = 'Administrador';\r\n                    } else if (data[i]['TipoUsuario'] === 'M') {\r\n                        data[i]['TipoUsuario'] = 'Médico';\r\n                    } else if (data[i]['TipoUsuario'] === 'L'){\r\n                        data[i]['TipoUsuario'] = 'Leitor';\r\n                    } else {\r\n                        data[i]['TipoUsuario'] = 'Farmacêutico';\r\n                    }\r\n                    if (data[i]['isVerified'] === 1) {\r\n                        data[i]['isVerified'] = 'Sim';\r\n                    } else {\r\n                        data[i]['isVerified'] = 'Não';\r\n                    }\r\n                }\r\n                setProntuario(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: handleSearch\r\n     * Descricao:\r\n     *  Funcao para fazer o tratamento e busca de termos no registro de usuarios\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function handleSearch() {\r\n        if (!getOptionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if (!searchInput) {\r\n            usersService.getUsersPaginate(10).then(data => {\r\n                getUsersFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        // const primeiro = getFirstString();\r\n        setMode('S');\r\n        usersService.searchUserGlobal(searchInput, getOptionState.cod, getFirst + rows).then(data => {\r\n            if (!data.userFound) {\r\n                setLoading(false);\r\n                setProntuario([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getUsersFunction(data)\r\n            let searchType;\r\n            if (getOptionState.name === 'CódUsuário') {\r\n                searchType = 'CodUsuario';\r\n            } else if (getOptionState.name === 'Matrícula') {\r\n                searchType = 'Matricula';\r\n            } else if (getOptionState.name === 'TipoUsuário') {\r\n                searchType = 'TipoUsuario'\r\n            } else {\r\n                searchType = getOptionState.name\r\n            }\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n        })\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: showToast\r\n     * Descricao:\r\n     *  Funcao para fazer o intermedio a fim de mostrar o component Toast na tela do usuario\r\n     * Parametros:\r\n     *  Nao possui parametros\r\n     * Retorno:\r\n     *  Retorno para parar a execucao da funcao\r\n    **************************************************/\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: showData\r\n     * Descricao:\r\n     *  Faz tratamento de erros ao mostrar mensagens\r\n     * Parametros:\r\n     *  data: objeto a ser tratado\r\n     * Retorno:\r\n     *  Retorna String com frase a ser mostrada no componente\r\n    **************************************************/\r\n    function showData(data:any): String{\r\n        try {\r\n            if(data){\r\n                let nome = String(data.Nome);\r\n                let codUsuario = String(data.CodUsuario);\r\n                return `Deseja excluir o usuário \"${nome}\" de código \"${codUsuario}\" do sistema?`;\r\n            }else{\r\n                return \"Data error! Data is null\";\r\n            }\r\n        } catch (error) {\r\n            // showToast('warn', \"Erro\", error);\r\n            alert(error);\r\n            return error;\r\n        }\r\n    }\r\n\r\n    /*************************************************\r\n     * Nome: onUserSelect\r\n     * Descricao:\r\n     *  Ao selecionar um usuario no datatable, a funcao atribui o usuario selecionado a variavel para uso futuro\r\n     * Parametros:\r\n     *  e: evento do tipo any, que em sua maioria sera um objeto\r\n     * Retorno:\r\n     *  Nao possui retorno\r\n    **************************************************/\r\n    const onUserSelect = (e: any) => {\r\n        newUser = false;\r\n        setUser(Object.assign({}, e.data));\r\n        setUserChange(e.data['TipoUsuario'][0]);\r\n        setUserVerifyOption(e.data['isVerified'][0]);\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    const header = (\r\n        <>\r\n            <p style={{ textAlign: 'left' }} className=\"p-clearfix d-inline\">Dados dos usuários</p>\r\n            <Button variant=\"success\" className=\"float-right\" title=\"Atualizar\" onClick={() => {getUsersFunction(); showToast('info', 'Notificação', `Foram encontrados ${totalRecords} resultados.`)}}><FiRefreshCcw size={20}/></Button>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 pl-2\">\r\n                    <span className=\"p-float-label p-inputgroup\">\r\n                        <div className=\"p-col-12\">\r\n                            <div className=\"p-inputgroup mt-4 mb-1\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }} onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }} style={{ minWidth: '8em', borderRadius: '0' }} size={50} />\r\n                                    {getOptionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput === ''\r\n                                    ? <></>\r\n                                    :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{ width: '12em' }} />\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{ width: '17px', borderRadius: '0' }} onClick={() => { setSearchInput(''); getUsersFunction(); setMode('N'); setOptionState(null) }}><AiOutlineClose size={15} /></Button>\r\n                                        <Button onClick={handleSearch} style={{ borderRadius: '0' }}><FiSearch size={20} /></Button>\r\n                                    </>\r\n                                }\r\n                                {/* <Dropdown className=\"mx-1\" value={getOptionState} options={options} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px'}} onClick={() => {setSearchInput(''); getUsersFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                <Button onClick={handleSearch}><FiSearch size={20}/></Button> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* {getOptionState === null\r\n                            ? <label htmlFor=\"float-input\">Buscar</label>\r\n                            : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                        } */}\r\n                    </span>\r\n                </div>\r\n                {/* <Button className=\"col-md-2 offset-md-6\" type=\"button\" variant=\"outline-success\" onClick={onExport}><AiOutlineDownload size={20}/>  Exportar dados</Button> */}\r\n            </div>\r\n            <p style={{ textAlign: 'left' }} className=\"p-clearfix d-inline text-secondary\">Selecione um usuário para mais informações</p>\r\n\r\n        </>\r\n    );\r\n\r\n    const dialogFooter =\r\n        <div className=\"ui-dialog-buttonpane p-clearfix\">\r\n            <Button className=\"mx-2\" variant=\"outline-danger\" onClick={() => { dialogCancel('warn', 'Operação cancelada pelo usuário.') }}><p className=\"d-inline\"><AiOutlineClose size={20} />  Cancelar</p></Button>\r\n        </div>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-md-5 px-5\">\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable ref={dt} value={prontuario} paginator={true} rows={rows} header={header} totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading} first={getFirst}\r\n                        onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedUser} onSelectionChange={e => {setSelectedUser(e.value)}}\r\n                        onRowSelect={onUserSelect} dataKey=\"CodUsuario\">\r\n                        <Column field=\"CodUsuario\" header=\"Código\" body={codUsuarioBodyTemplate}/>\r\n                        <Column field=\"Nome\" header=\"Nome\" body={nomeBodyTemplate}/>\r\n                        <Column field=\"Email\" header=\"Email\" body={emailBodyTemplate}/>\r\n                        <Column field=\"Matricula\" header=\"Matrícula\" body={matriculaBodyTemplate}/>\r\n                        <Column field=\"TipoUsuario\" header=\"Tipo usuário\" body={tipoUsuarioBodyTemplate}/>\r\n                        <Column field=\"isVerified\" header=\"Verificado\" body={VerifiedTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n                <Dialog visible={displayDialog} className=\"sol-sm-6\" header=\"Ações\" modal={true} onHide={() => setDisplayDialog(false)}\r\n                    blockScroll={true} footer={dialogFooter}>\r\n                    <p className=\"h3 mx-2\">Alterar tipo de usuário</p>\r\n                    {getUser &&\r\n                        <Dropdown className=\"mx-2\" value={getUserChange} options={tipoUsuario} onChange={onUserSelectChange} style={{ width: '12em' }} />\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => { changeUserType() }}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                    <br /><br />\r\n                    <DropdownReact.Divider />\r\n                    <p className=\"h3 mx-2\">Alterar verificação do usuário</p>\r\n                    {getUser &&\r\n                        <Dropdown className=\"mx-2\" value={getUserVerifyOption} options={verifyOptions} onChange={onUserSelectVerifyChange} style={{ width: '12em' }} />\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => { changeVerifyUser() }}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                    <br /><br />\r\n                    <DropdownReact.Divider />\r\n                    <p className=\"h3 mx-2\">Exclusão</p>\r\n                    {getUser &&\r\n                        // <p className=\"h6 mx-2\">Deseja excluir o usuário \"{showData(selectedUser, 1)}\" de código \"{showData(selectedUser, 2)}\" do sistema?</p>\r\n                        <p className=\"h6 mx-2\">{showData(selectedUser)}</p>\r\n                    }\r\n                    <Button className=\"mx-2\" variant=\"outline-success\" onClick={() => deleteUser()}><p className=\"d-inline\"><FiCheck size={20} />  Confirmar</p></Button>\r\n                </Dialog>\r\n                {getToast &&\r\n                    <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n                }\r\n                {loading1 &&\r\n                    <Loading />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import api from '../../../services/api';\r\n\r\nclass NotificationsService {\r\n    async getNotifications(CodUsuario: Number, TipoUsuario: String, endIndex: number) {\r\n        return await api.post(`notifications/id/?id${CodUsuario}&page=${endIndex}`, { TipoUsuario: TipoUsuario }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { NotificationsService };","import React, { useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport api from '../../../services/api';\r\n\r\nimport { NotificationsService } from './NotificationsService';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { start } from 'repl';\r\nimport Loading from '../../../components/Loading';\r\n\r\nconst Notifications = () => {\r\n    const [cookies] = useCookies([]);\r\n    const [getNotifications, setNotifications] = useState([]);\r\n    const [responseDataStatus, setResponseDataStatus] = useState(Number);\r\n    const [responseData, setResponseData] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [getFirst, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n    const notificationsService = new NotificationsService();\r\n\r\n    const rows = 10;\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Notificações';\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            getNotificationFunction();\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            let CodUsuario = cookies.userData.CodUsuario;\r\n            let TipoUsuario = cookies.userData.TipoUsuario;\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            console.log(endIndex);\r\n            notificationsService.getNotifications(CodUsuario, TipoUsuario, endIndex).then(data => {\r\n                console.log(data)\r\n                setNotifications(data.notifications)\r\n                setLoading(false)\r\n            })\r\n            setFirst(startIndex);\r\n            setNotifications(getNotifications.slice(startIndex, endIndex));\r\n            setLoading(false);\r\n        }, 1000)\r\n    }\r\n\r\n    function getNotificationFunction() {\r\n        if (cookies.userData) {\r\n            setNotifications([])\r\n            let CodUsuario = cookies.userData.CodUsuario;\r\n            let TipoUsuario = cookies.userData.TipoUsuario;\r\n            setTimeout(() => {\r\n                notificationsService.getNotifications(CodUsuario, TipoUsuario, getFirst + rows).then(data => {\r\n                    console.log(data)\r\n                    setTotalRecords(data.length - 10);\r\n                    setNotifications(data.notifications)\r\n                    setLoading(false)\r\n                    setLoading1(false)\r\n                })\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    function accept(NotificationId: Number, tipoNotificacao: string) {\r\n        if (tipoNotificacao === \"Change\") {\r\n            api.put(`notifications/status/accept/${NotificationId}`, { notificationType: tipoNotificacao }).then(response => {\r\n                if (response.data.updatedStatusNotification) {\r\n                    getNotificationFunction();\r\n                    setResponseDataStatus(1);\r\n                    setResponseData(\"Notificação alterada com sucesso.\");\r\n                } else {\r\n                    setResponseDataStatus(2);\r\n                    setResponseData(\"Não foi possível alterar a notificação.\");\r\n                }\r\n            });\r\n        } else {\r\n            api.put(`notifications/status/accept/${NotificationId}`).then(response => {\r\n                if (response.data.updatedStatusNotification) {\r\n                    getNotificationFunction();\r\n                    setResponseDataStatus(1);\r\n                    setResponseData(\"Notificação alterada com sucesso.\");\r\n                } else {\r\n                    setResponseDataStatus(2);\r\n                    setResponseData(\"Não foi possível alterar a notificação.\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function refuse(NotificationId: Number, tipoNotificacao: string) {\r\n        api.put(`notifications/status/refuse/${NotificationId}`).then(response => {\r\n            if (response.data.updatedStatusNotification) {\r\n                getNotificationFunction();\r\n                setResponseDataStatus(1);\r\n                setResponseData(\"Notificação alterada com sucesso.\");\r\n            } else {\r\n                setResponseDataStatus(2);\r\n                setResponseData(\"Não foi possível alterar a notificação.\");\r\n            }\r\n        });\r\n    }\r\n\r\n    const actionTemplate = (rowData: any, column: any) => {\r\n        return (\r\n            <div>\r\n                <Button variant=\"outline-success\" onClick={() => { accept(rowData['CodNotificacao'], rowData['TipoNotificacao']) }}>Aceitar</Button>\r\n                <div className=\"mr-2 d-inline\"></div>\r\n                <Button variant=\"outline-danger\" onClick={() => { refuse(rowData['CodNotificacao'], rowData['TipoNotificacao']) }}>Recusar</Button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading1 &&\r\n                <Loading />\r\n            }\r\n            <div className=\"row m-5\">\r\n                {responseDataStatus === 0\r\n                    ? <></>\r\n                    : responseDataStatus === 1\r\n                        ?\r\n                        <div className=\"alert alert-success col-sm-8 m-0 mx-auto mb-4 p-3 alert-dismissible fade show\">\r\n                            {responseData}\r\n                        </div>\r\n                        :\r\n                        <div className=\"alert alert-danger col-sm-8 m-0 mx-auto mb-4 p-3 alert-dismissible fade show\">\r\n                            {responseData}\r\n                        </div>\r\n                }\r\n\r\n                <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 border\">\r\n                    <p className=\"text-center h3\">Notificações</p>\r\n                </div>\r\n                {getNotifications &&\r\n                    <DataTable className=\"col-sm-8 offset-sm-8 mx-auto p-0 shadow-lg p-datatable-responsive-demo\" value={getNotifications} paginator={true}\r\n                        rows={rows} totalRecords={totalRecords} emptyMessage=\"Nenhum resultado encontrado\" resizableColumns={true}\r\n                        loading={loading} first={getFirst} onPage={onPage} lazy={true}>\r\n\r\n                        <Column field=\"CodNotificacao\" header=\"CodNotificação\" style={{ width: '15%', textAlign: 'center' }} />\r\n                        <Column field=\"CodUsuario\" header=\"CodUsuário\" style={{ width: '15%', textAlign: 'center' }} />\r\n                        <Column field=\"Descricao\" header=\"Descrição\" style={{ width: '45%', textAlign: 'center' }} />\r\n                        <Column header=\"Ações\" body={actionTemplate} style={{ width: '20%', textAlign: 'center' }} />\r\n                    </DataTable>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport logo from '../../assets/logoFiocruz.png';\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const [cookies] = useCookies([]);\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        if (cookies.userData) {\r\n            history.push('/home');\r\n        }\r\n    }, [cookies.userData, history]);\r\n\r\n    useEffect(() => {\r\n        api.get('/serverStatus').then(response => {\r\n            if (!response.data.serverRunning) {\r\n                showToast('error', 'Erro na conexão!', response.data.error + '\\nErro: ' + String(response.data.errorType.code))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    function handleBackButton() {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid m-0 p-0\">\r\n                <nav className=\"navbar navbar-expand-sm header-background navbar-dark\">\r\n                    <a href=\"/\" className=\"navbar-brand cursor-pointer text-big\">GAFio</a>\r\n                    <a href=\"/\" className=\"navbar-brand cursor-pointer ml-auto\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n                    </a>\r\n                </nav>\r\n            </div>\r\n            <button className=\"btn\" onClick={handleBackButton}>\r\n                <FiArrowLeft size={20} />\r\n            </button>\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { MdPersonOutline, MdNotificationsNone } from 'react-icons/md';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Dropdown, Button, Badge } from 'react-bootstrap';\r\n\r\nimport '../Home/Home.css';\r\nimport './Header.css';\r\n\r\nimport api from '../../services/api';\r\nimport ToastComponent from '../../components/Toast';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const [cookies, , removeCookie] = useCookies([]);\r\n    const [userName, setUserName] = useState('');\r\n    const [tipoUsuario, setTipoUsuario] = useState('');\r\n    const [notificationsLength, setNotificationsLength] = useState(Number);\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n    const [getLifeTime, setLifeTime] = useState<Number>(4000);\r\n\r\n    function handleBackButton() {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cookies.userData) {\r\n            history.push('/login');\r\n            alert('Faça login para acessar o conteúdo')\r\n            return\r\n        } else {\r\n            const cookie = cookies.userData;\r\n            setUserName(cookie.Nome);\r\n            setTipoUsuario(cookie.TipoUsuario)\r\n        }\r\n    }, [cookies, history]);\r\n\r\n    useEffect(() => {\r\n        const getNotifications = async () => {\r\n            const cookie = cookies.userData;\r\n            const CodUsuario = cookie.CodUsuario;\r\n            try {\r\n                await api.get(`notifications/length/${CodUsuario}`).then(response => {\r\n                    if (response.data.notificationFound) {\r\n                        let dataSize = response.data.length[0][`COUNT('Status')`]\r\n                        setNotificationsLength(dataSize)\r\n                        if (dataSize === 0) {\r\n                            showToast('info', 'Notificação', `Você não possui notificações.`)\r\n                        } else {\r\n                            showToast('info', 'Notificação', `Você possui ${dataSize} notificações.`)\r\n                        }\r\n                    } else {\r\n                        showToast('info', 'Notificação', `Você não possui notificações.`)\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                if (err.message === \"Network Error\") {\r\n                    showToast('error', 'Erro!', 'Não foi possível conectar ao servidor. O sistema se desconectará! Contacte o administrador do sistema para mais informações!', 8000)\r\n                }\r\n                // showToast('error', 'Erro!', 'teste');\r\n            }\r\n        };\r\n\r\n        getNotifications();\r\n\r\n    }, [cookies.userData])\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string, lifeTime?: number) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        if (lifeTime) {\r\n            setLifeTime(lifeTime);\r\n            setTimeout(() => {\r\n                setToast(false);\r\n            }, 8500)\r\n        } else {\r\n            setTimeout(() => {\r\n                setToast(false);\r\n            }, 4500)\r\n        }\r\n        setToast(true);\r\n    }\r\n\r\n    function logoutFunction() {\r\n        removeCookie('userData');\r\n        removeCookie('notificationLength');\r\n        localStorage.removeItem('@gafio-user/email');\r\n        history.push('/login');\r\n    }\r\n\r\n    function myProfile() {\r\n        history.push('/myProfile');\r\n    }\r\n\r\n    function toNotifications() {\r\n        history.push('/notifications');\r\n    }\r\n\r\n    function toHome() {\r\n        history.push('/home');\r\n    }\r\n    function toUsers() {\r\n        history.push('/users');\r\n    }\r\n\r\n    return (\r\n        <div className=\"no-select\">\r\n            <title>GAFio</title>\r\n            <div className=\"container-fluid m-0 p-0\">\r\n                <nav className=\"navbar navbar-expand-sm header-background navbar-dark\">\r\n                    {/* <Link to=\"/home\"> */}\r\n                    <p onClick={toHome} className=\"navbar-brand m-0 cursor-pointer text-small\">GAFio</p>\r\n                    {/* </Link> */}\r\n                    <div className=\"ml-auto text-dark\">\r\n                    </div>\r\n                    <div className=\"ml-auto text-dark\">\r\n                        <Button onClick={toNotifications} variant=\"outline-dark\">\r\n                            <p className=\"d-inline\">Notificações</p>\r\n                            <MdNotificationsNone className=\"ml-2\" size={30} />\r\n                            {\r\n                                notificationsLength > 0\r\n                                    ?\r\n                                    <Badge variant=\"danger\">{notificationsLength}</Badge>\r\n                                    :\r\n                                    // <Badge variant=\"secondary\">{notificationsLength}</Badge>\r\n                                    <></>\r\n                            }\r\n\r\n                        </Button>\r\n                        <Dropdown className=\"ml-2 d-inline\">\r\n                            <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\r\n                                <strong className=\"text-capitalize\">{userName}</strong>\r\n\r\n                                <MdPersonOutline className=\"ml-2\" size={30} />\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item onClick={myProfile}>Gerenciar sua conta</Dropdown.Item>\r\n                                {tipoUsuario === 'A'\r\n                                    ? <Dropdown.Item className=\"bg-secondary-custom\" onClick={toUsers}>Gerenciar usuários</Dropdown.Item>\r\n                                    : <></>\r\n                                }\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item onClick={logoutFunction}>Logout</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        {/* <a className=\"navbar-brand cursor-pointer ml-auto text-dark\">teste</a> */}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div className=\"container-fluid bg-light shadow-lg mb-5\">\r\n                <div className=\"row align-items-center justify-content-center\">\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none home-label\" to=\"/home\">\r\n                            HOME\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/medicalRecords\">\r\n                            PRONTUÁRIOS\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/registrations\">\r\n                            CADASTROS\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/dashboard\">\r\n                            DASHBOARD\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/microbiology\">\r\n                            MICROBIOLOGIA\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/recomendations\">\r\n                            RECOMENDAÇÕES CCIH\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-md-auto mx-2\">\r\n                        <Link className=\"text-decoration-none\" to=\"/history\">\r\n                            HISTÓRICO\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"position-absolute arrow-left\" style={{ left: '0px', top: '50px' }}>\r\n                <button className=\"btn\" onClick={handleBackButton}>\r\n                    <FiArrowLeft size={20} />\r\n                </button>\r\n            </div>\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} lifeTime={getLifeTime} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { RiCopyrightLine } from 'react-icons/ri';\r\nimport { IoLogoGithub } from 'react-icons/io';\r\nimport { AiFillRobot } from 'react-icons/ai';\r\n\r\nimport '../../App.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"card col-sm-11 mx-auto mt-5 text-center text-light text-decoration-none header-background border-0\">\r\n            <div className=\"row mx-auto\">\r\n                <p className=\"h5 mt-1\"><RiCopyrightLine size={20} /> GAFio Devs, 2020</p>\r\n                <a className=\"h5 mt-1 ml-3 text-light\" href=\"https://github.com/gabrielrbernardi/gafio\" target=\"_blank\" rel=\"noopener noreferrer\"><IoLogoGithub size={25} /></a>\r\n                <a className=\"h5 mt-1 ml-3 text-light\" href=\"https://primefaces.org/primereact/showcase/#/setup\" target=\"_blank\" rel=\"noopener noreferrer\"><AiFillRobot size={25} /></a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n    const data = {\r\n        labels: ['Ciprofloxacino', 'Sulfadiazina', 'Gentamicina', 'Teicoplanina'],\r\n        datasets: [\r\n            {\r\n                data: [100, 50, 75, 25],\r\n                backgroundColor: [\r\n                    \"#23ad48\",\r\n                    \"#258bba\",\r\n                    \"#ff9100\",\r\n                    \"#00cfcf\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#1c8a39\",\r\n                    \"#195f80\",\r\n                    \"#cf7500\",\r\n                    \"#007373\"\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    const data1 = {\r\n        labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul'],\r\n        datasets: [\r\n            {\r\n                label: 'Azitromicina',\r\n                backgroundColor: '#9CCC65',\r\n                data: [65, 59, 80, 81, 56, 55, 40, 10]\r\n            },\r\n            {\r\n                label: 'Amoxicilina',\r\n                backgroundColor: '#42A5F5',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n        ]\r\n    };\r\n    const data2 = {\r\n        labels: [\"Médico\", \"Farmácia\", \"Enferamaria\", \"Pronto Socorro\"],\r\n        datasets: [{\r\n            data: [11, 16, 7, 12],\r\n            backgroundColor: [\r\n                \"#FF6384\",\r\n                \"#4BC0C0\",\r\n                \"#FFCE56\",\r\n                \"#36A2EB\"\r\n            ],\r\n            label: 'My dataset'\r\n        }],\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-2\">\r\n                <div className=\"card shadow-lg p-3 col-sm-5 mx-auto border\">\r\n                    <p className=\"h5\">Valores gerais</p>\r\n                    <Chart type=\"pie\" data={data} />\r\n                </div>\r\n                <div className=\"card shadow-lg p-3 col-sm-6 mx-auto border\">\r\n                    <p className=\"h5\">Doses por mês</p>\r\n                    <Chart type=\"bar\" data={data1} />\r\n                </div>\r\n                <div className=\"card shadow-lg mt-3 p-3 col-sm-6 mx-auto border\">\r\n                    <p className=\"h5\">Doses por departamento</p>\r\n                    <Chart type=\"polarArea\" data={data2} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import api from '../../../services/api';\r\n\r\nclass CreateMedicalRecordsService {\r\n    async Create(getNroProntuario: any, getSeqPaciente: any, getDataInternacao: string, getCodDoencaPrincipal: string,\r\n        getCodDoencaSecundario: any, getSistemaAcometido: string, getCodComorbidade: any, getOrigem: string, getAlocacao: string,\r\n        getResultadoColeta: any, getCodAtbPrimario: string, getCodAtbSecundario: any, getSitioInfeccaoPrimario: any,\r\n        getTratamento: string, getIndicacao: string, getDisfuncao: string, getOrigemInfeccao: string, \r\n        getDose: any, getPosologia: any, email:any) {\r\n        return await api.post('medicalRecords', {\r\n            NroProntuario: getNroProntuario, SeqPaciente: getSeqPaciente, DataInternacao: getDataInternacao,\r\n            CodDoencaPrincipal: getCodDoencaPrincipal, CodDoencaSecundario: getCodDoencaSecundario,\r\n            SistemaAcometido: getSistemaAcometido, CodComorbidade: getCodComorbidade, Origem: getOrigem, \r\n            Alocacao: getAlocacao, ResultadoColeta: getResultadoColeta, CodAtbPrimario: getCodAtbPrimario,\r\n            CodAtbSecundario: getCodAtbSecundario, SitioInfeccaoPrimario: getSitioInfeccaoPrimario, \r\n            TratamentoCCIH: getTratamento, IndicacaoSepse: getIndicacao, DisfuncaoRenal: getDisfuncao, \r\n            OrigemInfeccao: getOrigemInfeccao, DoseCorreta: getDose, PosologiaCorreta: getPosologia, email: email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateMedicalRecordsService };","import api from '../../../services/api';\r\n\r\nclass DiseasesService {\r\n\r\n    async getDiseasesPaginate(endIndex: Number) {\r\n        return await api.get(`diseases/page/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchDiseasesGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === \"C\") {\r\n            return await api.get(`diseases/code/?code=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === \"N\") {\r\n            return await api.get(`diseases/name/?name=${searchKey}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async getDiseaseInformation(codDoenca: Number) {\r\n        return await api.get(`diseases/info/?id=${codDoenca}`).then(response => response.data);\r\n    }\r\n\r\n    async updateDisease(codDoenca: Number, nome: string) {\r\n        return await api.put(`/diseases/${codDoenca}`, { codDoenca, nome }).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch((err) => {\r\n            return { error: err };\r\n        });\r\n    }\r\n\r\n    async deleteDisease(codDoenca: String) {\r\n        return await api.delete(`/diseases/${codDoenca}`).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async updateDiseasesDB() {\r\n        const updatedDiseasesDB = await api.get(\"https://cid10-api.herokuapp.com/cid10\");\r\n        const currentDiseasesDB = await api.get(\"diseases\").then(response => response.data);\r\n\r\n        if (updatedDiseasesDB.data.length !== currentDiseasesDB.length) {\r\n            await api.delete(\"/diseases/deleteAll\");\r\n            await api.post(\"/diseases/importDB\");\r\n\r\n            alert(\"Banco de dados foi atualizado\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { DiseasesService };","import api from \"../../../services/api\";\r\n\r\nclass MedicinesService {\r\n\r\n    async getMedicinesPaginate(endIndex: Number) {\r\n        return await api.get(`medicines/page/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async searchMedicineGlobal(searchKey: String, searchCode: String, first: number) {\r\n        if (searchCode === 'E') {\r\n            return await api.get(`medicines/ean/?ean=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === 'P') {\r\n            return await api.get(`medicines/principle/?principle=${searchKey}`).then(response => response.data);\r\n        }\r\n        else if (searchCode === 'C') {\r\n            return await api.get(`medicines/class/?medicineClass=${searchKey}`).then(response => response.data);\r\n        }\r\n    }\r\n\r\n    async getMedicineInformation(ean: String) {\r\n        return await api.get(`medicines/info/?id=${ean}`).then(response => response.data);\r\n    }\r\n\r\n    async updateMedicine(ean: String) {\r\n        return await api.put(`/medicines/${ean}`, { ean }).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch((err) => {\r\n            return { error: err };\r\n        });\r\n    }\r\n\r\n    async deleteMedicine(ean: String) {\r\n        return await api.delete(`/medicines/${ean}`).then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport { MedicinesService };\r\n","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dropdown as DropdownReact, ResponsiveEmbed } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport Loading from '../../../components/Loading';\r\nimport * as Yup from \"yup\";\r\n\r\nimport { CreateMedicalRecordsService } from './CreateMedicalRecordsService'\r\nimport { DiseasesService } from '../../Registrations/Diseases/DiseasesService';\r\nimport { MedicinesService } from '../../Registrations/Medicines/MedicinesService';\r\n\r\nconst MedicalRecordsForm = () => {\r\n\r\n    const [getNroProntuario, setNroProntuario] = useState<any>(null)\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>(null)\r\n    const [getDataInternacao, setDataInternacao] = useState<any>(null)\r\n    const [getCodDoencaPrincipal, setCodDoencaPrincipal] = useState<string>('')\r\n    const [getCodDoencaSecundario, setCodDoencaSecundario] = useState<any>(null)\r\n    const [getSistemaAcometido, setSistemaAcometido] = useState<string>('')\r\n    const [getCodComorbidade, setCodComorbidade] = useState<any>(null)\r\n    const [getOrigem, setOrigem] = useState<string>('')\r\n    const [getAlocacao, setAlocacao] = useState<string>('')\r\n    const [getResultadoColeta, setResultadoColeta] = useState<any>(null)\r\n    const [getCodAtbPrimario, setCodAtbPrimario] = useState<string>('')\r\n    const [getCodAtbSecundario, setCodAtbSecundario] = useState<any>(null)\r\n    const [getSitioInfeccaoPrimario, setSitioInfeccaoPrimario] = useState<any>(null)\r\n    const [getTratamento, setTratamento] = useState<string>('')\r\n    const [getIndicacao, setIndicacao] = useState<string>('')\r\n    const [getDisfuncao, setDisfuncao] = useState<string>('')\r\n    const [getOrigemInfeccao, setOrigemInfeccao] = useState<string>('')\r\n    const [getDose, setDose] = useState<any>(null)\r\n    const [getPosologia, setPosologia] = useState<any>(null)\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [diseases, setDiseases] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [mode, setMode] = useState('N');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [getDiseasesChange, setDiseasesChange] = useState();\r\n    const [selectedDiseases, setSelectedDiseases] = useState<any>(null);\r\n    const [getType, setType] = useState<number>(0);\r\n    const diseasesService = new DiseasesService();\r\n    const rows = 10;\r\n\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [totalRecords2, setTotalRecords2] = useState(0);\r\n    const [first2, setFirst2] = useState(0);\r\n    const [searchInput2, setSearchInput2] = useState('');\r\n    const [getOptionState2, setOptionState2] = useState<any>(null);\r\n    const [mode2, setMode2] = useState('N');\r\n    const [open2, setOpen2] = useState(false);\r\n    const [getMedicinesChange, setMedicinesChange] = useState();\r\n    const [selectedMedicines, setSelectedMedicines] = useState<any>(null);\r\n    const medicinesService = new MedicinesService();\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n\r\n    const history = useHistory()\r\n\r\n    const createMedicalRecordsService = new CreateMedicalRecordsService()\r\n    var DiseasesData:any = {};\r\n    var MedicinesData:any = {};\r\n\r\n    const onResultadoChange = (e: { value: string }) => {\r\n        setResultadoColeta(e.value);\r\n    };\r\n\r\n    const onTratamentoChange = (e: { value: string }) => {\r\n        setTratamento(e.value);\r\n    };\r\n\r\n    const onIndicacaoChange = (e: { value: string }) => {\r\n        setIndicacao(e.value);\r\n    };\r\n\r\n    const onDisfuncaoChange = (e: { value: string }) => {\r\n        setDisfuncao(e.value);\r\n    };\r\n\r\n    const onDoseChange = (e: { value: string }) => {\r\n        setDose(e.value);\r\n    };\r\n\r\n    const onPosologiaChange = (e: { value: string }) => {\r\n        setPosologia(e.value);\r\n    };\r\n\r\n    function checkInput(type: number, e: any) {\r\n        if (type == 1) {\r\n            if (e === '') {\r\n                setCodDoencaSecundario(null);\r\n            } else {\r\n                setCodDoencaSecundario(e)\r\n            }\r\n        }\r\n        if (type == 2) {\r\n            if (e === '') {\r\n                setCodComorbidade(null);\r\n            } else {\r\n                setCodComorbidade(e)\r\n            }\r\n        }\r\n        if (type == 3) {\r\n            if (e === '') {\r\n                setCodAtbSecundario(null);\r\n            } else {\r\n                setCodAtbSecundario(e)\r\n            }\r\n        }\r\n        if (type == 4) {\r\n            if (e === '') {\r\n                setSitioInfeccaoPrimario(null);\r\n            } else {\r\n                setSitioInfeccaoPrimario(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    const onOptionChange2 = (e: { value: any }) => {\r\n        setOptionState2(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' }\r\n    ];\r\n\r\n    let options2 = [\r\n        { name: 'Código', cod: 'C' },\r\n        { name: 'Nome', cod: 'N' }\r\n    ];\r\n\r\n    let options3 = [\r\n        { name: 'Código', cod: 'E' },\r\n        { name: 'Princípio', cod: 'P' },\r\n    ];\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        \r\n        const data = {\r\n            getNroProntuario, getSeqPaciente,\r\n            getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n            getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n            getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n            getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n            getDisfuncao, getOrigemInfeccao, getDose, getPosologia\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroProntuario: Yup.number().required(),\r\n                getSeqPaciente: Yup.number().required(),\r\n                getDataInternacao: Yup.date().required(),\r\n                getCodDoencaPrincipal: Yup.string().required(),\r\n                getCodDoencaSecundario: Yup.string().nullable(),\r\n                getSistemaAcometido: Yup.string().required(),\r\n                getCodComorbidade: Yup.string().nullable(),\r\n                getOrigem: Yup.string().required(),\r\n                getAlocacao: Yup.string().required(),\r\n                getResultadoColeta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getCodAtbPrimario: Yup.string().required(),\r\n                getCodAtbSecundario: Yup.string().nullable(),\r\n                getSitioInfeccaoPrimario: Yup.string().nullable(),\r\n                getTratamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getIndicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getDisfuncao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getOrigemInfeccao: Yup.string().required(),\r\n                getDose: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologia: Yup.string().nullable().oneOf([null, \"S\", \"N\"])\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createMedicalRecordsService.Create(getNroProntuario, getSeqPaciente,\r\n                getDataInternacao, getCodDoencaPrincipal, getCodDoencaSecundario,\r\n                getSistemaAcometido, getCodComorbidade, getOrigem, getAlocacao,\r\n                getResultadoColeta, getCodAtbPrimario, getCodAtbSecundario,\r\n                getSitioInfeccaoPrimario, getTratamento, getIndicacao,\r\n                getDisfuncao, getOrigemInfeccao, getDose, getPosologia, email\r\n            ).then((response) => {\r\n                if (response.CreatedMedicalRecord) {\r\n                    showToast('success', 'Sucesso!', `Prontuário criado com sucesso!`);\r\n                    setTimeout(() => {\r\n                        history.push('/medicalRecords')\r\n                    }, 3500)\r\n                } else {\r\n                    if (response.error.sqlMessage) {\r\n                        if (response.error.sqlState == 23000) {\r\n                            if (String(response.error.sqlMessage).includes(\"(`CodDoencaPrincipal`)\") || String(response.error.sqlMessage).includes(\"(`CodDoencaSecundario`)\")) {\r\n                                showToast('error', 'Erro!', `O campo código de doença está incorreto`);\r\n                            }\r\n                            else if (String(response.error.sqlMessage).includes(\"(`CodAtbPrimario`)\") || String(response.error.sqlMessage).includes(\"(`CodAtbSecundario`)\")) {\r\n                                showToast('error', 'Erro!', `O campo código de medicamento está incorreto`);\r\n                            } else {\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        } else {\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    } else {\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const header = \r\n        <>\r\n            <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Doenças</p>\r\n        </>;\r\n\r\n    const header2 = \r\n    <>\r\n        <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Medicamentos</p>\r\n    </>;\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getDiseasesFunction(data);\r\n            });\r\n        }, 1000)\r\n    }, []);\r\n\r\n    function getDiseasesFunction(data?: any) {\r\n        setLoading(true);\r\n        if (!data) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setDatasource(data.diseases);\r\n                setTotalRecords(data.length);\r\n                data = data.diseases;\r\n\r\n                setDiseases(data.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setDatasource(data.diseases);\r\n            setTotalRecords(data.length);\r\n            data = data.diseases;\r\n\r\n            setDiseases(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return;\r\n        }\r\n    }\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            diseasesService.getDiseasesPaginate(endIndex).then(data => {\r\n                getDiseasesFunction(data.diseases);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!getOptionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                getDiseasesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        diseasesService.searchDiseasesGlobal(searchInput, getOptionState.cod, first + rows).then(data => {\r\n            if (!data.diseases) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getDiseasesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newDiseases = true\r\n    function onDiseasesSelect (e: any, type: any) {\r\n        newDiseases = false;\r\n        setDiseasesChange(e.value)\r\n        DiseasesData = e.data;\r\n        if(type == 1){\r\n            setCodDoencaPrincipal(DiseasesData.CodDoenca) \r\n        }\r\n        if(type == 2){\r\n            setCodDoencaSecundario(DiseasesData.CodDoenca)\r\n        }\r\n        setTimeout(() => {\r\n            setDisplayDialog(false)\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords2(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                console.log(data);\r\n\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            console.log(data);\r\n\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage2 = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex2 = event.first2;\r\n            const endIndex2 = event.first2 + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex2).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst2(startIndex2);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch2() {\r\n        if (!getOptionState2) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput2) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode2('S');\r\n        medicinesService.searchMedicineGlobal(searchInput2, getOptionState2.cod, first2 + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newMedicines = true\r\n    function onMedicinesSelect (e: any, type: any) {\r\n        newMedicines = false;\r\n        setMedicinesChange(e.value)\r\n        MedicinesData = e.data;\r\n        if(type == 1){\r\n            setCodAtbPrimario(MedicinesData.EAN) \r\n        }\r\n        if(type == 2){\r\n            setCodAtbSecundario(MedicinesData.EAN)\r\n        }\r\n        setTimeout(() => {\r\n            setDisplayDialog2(false)\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Prontuário</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"NroProntuario\">Número do Prontuário</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"NroProntuario\" name=\"NroProntuario\"\r\n                                    defaultValue={getNroProntuario} onChange={(e) => setNroProntuario(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número do prontuário\" min=\"1\" max=\"999999999\" required autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"SeqPaciente\">Sequência do Paciente</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"SeqPaciente\" name=\"SeqPaciente\"\r\n                                    defaultValue={getSeqPaciente} onChange={(e) => setSeqPaciente(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número do paciente\" min=\"1\" max=\"999999999\" required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"Origem\">Origem</label>\r\n                                <InputText style={{ width: '100%' }} id=\"Origem\" name=\"Origem\"\r\n                                    defaultValue={getOrigem} onChange={(e) => setOrigem((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a origem\" required />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"Alocacao\">Alocação</label>\r\n                                <InputText style={{ width: '100%' }} id=\"Alocacao\" name=\"Alocacao\"\r\n                                    defaultValue={getAlocacao} onChange={(e) => setAlocacao((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Digite a alocação\" required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"DataInternacao\" className=\"mt-4\">Data da Internação</label>\r\n                        <Calendar id=\"DataInternacao\" style={{ width: '100%' }} value={getDataInternacao}\r\n                            onChange={(e) => setDataInternacao(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\"\r\n                            placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator\r\n                            showIcon showOnFocus={false} required />\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodDoencaPrincipal\" className=\"mt-4 ml-1\">Código de Doença Primário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodDoencaPrincipal\" name=\"CodDoencaPrincipal\"\r\n                                defaultValue={getCodDoencaPrincipal} onChange={(e) => setCodDoencaPrincipal((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o código de doença primário\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true); setType(1);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodDoencaSecundario\" className=\"mt-4 ml-1\">Código de Doença Secundário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodDoencaSecundario\" name=\"CodDoencaSecundario\"\r\n                                defaultValue={getCodDoencaSecundario} onChange={(e) => { checkInput(1, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o código de doença secundário\" />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true); setType(2);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"SistemaAcometido\" className=\"mt-4\">Sistema Acometido</label>\r\n                        <InputText style={{ width: '100%' }} id=\"SistemaAcometido\" name=\"SistemaAcometido\"\r\n                            defaultValue={getSistemaAcometido} onChange={(e) => setSistemaAcometido((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite o sistema acometido\" required />\r\n\r\n                        <label htmlFor=\"CodComorbidade\" className=\"mt-4\">Código de Comorbidade</label>\r\n                        <InputText style={{ width: '100%' }} id=\"CodComorbidade\" name=\"CodComorbidade\"\r\n                            defaultValue={getCodComorbidade} onChange={(e) => { checkInput(2, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o código de comorbidade\" />\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodAtbPrimario\" className=\"mt-4 ml-1\">Código de Medicamento Primário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodAtbPrimario\" name=\"CodAtbPrimario\"\r\n                                defaultValue={getCodAtbPrimario} onChange={(e) => setCodAtbPrimario((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o código de medicamento primário\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog2(true); setType(1);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"CodAtbSecundario\" className=\"mt-4 ml-1\">Código de Medicamento Secundário</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"CodAtbSecundario\" name=\"CodAtbSecundario\"\r\n                                defaultValue={getCodAtbSecundario} onChange={(e) => { checkInput(3, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o código de medicamento secundário\" />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog2(true); setType(2);}}>Buscar</Button><br/>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"SitioInfeccaoPrimario\" className=\"mt-4\">Sítio de Infecção Primário</label>\r\n                        <InputText style={{ width: '100%' }} id=\"SitioInfeccaoPrimario\" name=\"SitioInfeccaoPrimario\"\r\n                            defaultValue={getSitioInfeccaoPrimario} onChange={(e) => { checkInput(4, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o sítio de infecção primário\" />\r\n\r\n                        <label htmlFor=\"OrigemInfeccao\" className=\"mt-4\">Origem da Infecção</label>\r\n                        <InputText style={{ width: '100%' }} id=\"OrigemInfeccao\" name=\"OrigemInfeccao\"\r\n                            defaultValue={getOrigemInfeccao} onChange={(e) => setOrigemInfeccao((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite a origem da infecção\" required />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"ResultadoColeta\">Resultado Coleta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getResultadoColeta} options={options} onChange={onResultadoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"TratamentoCCIH\">Tratamento CCIH</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getTratamento} options={options} onChange={onTratamentoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"IndicacaoSepse\">Indicação Sepse</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getIndicacao} options={options} onChange={onIndicacaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DisfuncaoRenal\">Disfunção Renal</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDisfuncao} options={options} onChange={onDisfuncaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDose} options={options} onChange={onDoseChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getPosologia} options={options} onChange={onPosologiaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog(false); setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null); setOpen(false)}}>\r\n            <div className=\"form-row\">\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0', height:'41.5px'}}>Buscar doença específica</Button>\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-1\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                {getOptionState === null\r\n                                    ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                    : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {searchInput === ''\r\n                                ? <></>\r\n                                :\r\n                                    <>\r\n                                        <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                        <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                        <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n\r\n            <div className=\"ml-auto\"></div>\r\n            \r\n            <DataTable value={diseases} style={{ margin: 4 }} paginator={true} rows={rows} header={header} \r\n                totalRecords={totalRecords} emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                resizableColumns={true} loading={loading} first={first} onPage={onPage} lazy={true} \r\n                selectionMode=\"single\" selection={selectedDiseases}\r\n                onSelectionChange={e => setSelectedDiseases(e.value)} onRowSelect={(e) => {onDiseasesSelect(e, getType);}} >\r\n                <Column field=\"CodDoenca\" header=\"Código\" style={{ width: '50%', textAlign: 'center' }} />\r\n                <Column field=\"Nome\" header=\"Nome\" style={{ width: '50%', textAlign: 'center' }} />\r\n            </DataTable>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog2(false); setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null); setOpen2(false)}}>\r\n                <div className=\"form-row\">\r\n                    <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen2(!open2)} aria-controls=\"example-collapse-text\" aria-expanded={open2} style={{borderRadius: '0', height:'41.5px'}}>Buscar medicamento específico</Button>\r\n                    <Collapse in={open2} timeout={200}>\r\n                        <div className=\"ml-1\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput2} onChange={(e) => {setSearchInput2((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch2(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState2 === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState2.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput2 === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState2} options={options3} onChange={onOptionChange2} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch2} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <DataTable value={medicines} paginator={true} rows={rows}\r\n                    header={header2} totalRecords={totalRecords2}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true} loading={loading} first={first2} onPage={onPage2} lazy={true}\r\n                    selectionMode=\"single\" selection={selectedMedicines}\r\n                    onSelectionChange={e => setSelectedMedicines(e.value)} onRowSelect={(e) => {onMedicinesSelect(e, getType);}}>\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"33.4%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicalRecordsForm;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GiMedicines, GiVirus } from 'react-icons/gi';\r\nimport { BsFillPeopleFill } from 'react-icons/bs';\r\n\r\nconst Registrations = () => {\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Cadastro';\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p className=\"h3 text-center\">Cadastros</p>\r\n            <div className=\"mx-5 p-3 mt-0 pt-0 row\">\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/patient\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <BsFillPeopleFill className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>PACIENTES</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/medicines\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <GiMedicines className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>MEDICAMENTOS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n                <Link className=\"text-decoration-none col-sm-4 mx-auto\" to=\"/registrations/diseases\">\r\n                    <div className=\"card text-center shadow zoom-hover\">\r\n                        <p className=\"h6\">\r\n                            <GiVirus className=\"mt-3 mb-3 ml-auto mr-auto\" size={40} /><br />\r\n                            <strong>DOENÇAS</strong>\r\n                        </p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registrations;","import api from '../../../services/api';\r\nimport Patient from './Patient';\r\n\r\nclass PatientService {\r\n    async getPatientPaginate(endIndex: Number) {\r\n        return await api.get(`patient/?page=${endIndex}`).then(response => response.data);\r\n    }\r\n\r\n    async getPatientInformation(idPatient: Number) {\r\n        return await api.get(`patient/search/searchPatientData/?id=${idPatient}&page=10`).then(response => response.data);\r\n    }\r\n\r\n    async updatePatientInformation(IdPaciente: Number, NomePaciente: string, Genero: string, DataNascimento: Date, email:any) {\r\n        return await api.put(`/patient/update/${IdPaciente}`, { NomePaciente, Genero, DataNascimento, email}).then(response => {\r\n            return response.data;\r\n        }).catch((err) => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async deletePatient(IdPaciente: Number, email:any) {\r\n        return await api.delete(`/patient/delete/${IdPaciente}/${email}`).then(response => {\r\n            return response.data;\r\n        }).catch(err => {\r\n            return { error: err };\r\n        })\r\n    }\r\n\r\n    async searchPatientGlobal(searchKey: String, searchCode: String, first: number){\r\n        if (searchCode === 'Name') {\r\n            return await api.get(`/patient/name/?name=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Nro') {\r\n            return await api.get(`/patient/id/?nroPaciente=${searchKey}&page=${first}`).then(response => response.data);\r\n        } else if (searchCode === 'Nas') {\r\n            return await api.get(`/patient/birthday/?dataNascimento=${searchKey}&page=${first}`).then(response => response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport { PatientService };","import { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport React, { useEffect, useState, FormEvent } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../../../components/Loading';\r\nimport ToastComponent from '../../../components/Toast';\r\nimport { PatientService } from './PatientService';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport * as Yup from \"yup\";\r\n\r\nimport './Patient.css';\r\n\r\nconst Patient = (props: any) => {\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [loading1, setLoading1] = useState<boolean>(false);\r\n    const [getFirst, setFirst] = useState(0);\r\n\r\n    const rows = 10;\r\n    let newUser = false;\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [paciente, setPaciente] = useState([]);\r\n    const [getPacienteSelect, setPacienteSelect] = useState<any>(null);\r\n\r\n    //const para listagem\r\n    const [getPacienteSeq, setPacienteSeq] = useState<any>('');\r\n    const [getPacienteNro, setPacienteNro] = useState<any>('');\r\n    const [getPacienteGenero, setPacienteGenero] = useState<any>('');\r\n    const [getPacienteNome, setPacienteNome] = useState<any>('');\r\n    const [getPacienteDataNascimento, setPacienteDataNascimento] = useState<any>('');\r\n    const [getPacienteProntuario, setPacienteProntuario] = useState<any>();\r\n    const [getPacienteAvalicao, setPacienteAvaliacao] = useState<any>();\r\n\r\n    const [getPacienteIdade, setPacienteIdade] = useState<any>('');\r\n\r\n    const [selectedUser, setSelectedUser] = useState<any>(null);\r\n\r\n    const patientService = new PatientService();\r\n\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    //const para atualizacao\r\n    const [getPacienteNomeUpdate, setPacienteNomeUpdate] = useState<any>('');\r\n    const [getPacienteDataNascimentoUpdate, setPacienteDataNascimentoUpdate] = useState<any>('');\r\n    const [getPacienteGeneroUpdate, setPacienteGeneroUpdate] = useState<any>('');\r\n\r\n    const [getMode, setMode] = useState<string>('N');\r\n    const [getOptionState, setOptionState] = useState<any>(null)\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    let optionsDropdownGenero = [\r\n        { label: 'Masculino', value: 'M' },\r\n        { label: 'Feminino', value: 'F' }\r\n    ];\r\n\r\n    //Calendario local\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio | Paciente';\r\n        try {\r\n            const id = props.match.params.idPatient\r\n            console.log(id)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        getPatientFunction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n            patientService.getPatientPaginate(endIndex).then(response => getPatientFunction(response))\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        }, 300);\r\n    }\r\n    function getPatientFunction1(data: any) {\r\n        setDatasource(data.patients);\r\n        let dataSize = data.length[0]['count(`NroPaciente`)']\r\n        setTotalRecords(dataSize);\r\n        data = data.patients;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i]['Genero'] === 'M') {\r\n                data[i]['Genero'] = 'Masculino';\r\n            } else if (data[i]['Genero'] === 'F') {\r\n                data[i]['Genero'] = 'Feminino';\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setPaciente(data.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n        }, 500);\r\n        return\r\n    }\r\n\r\n    async function getPatientFunction(data?: any) {\r\n        setLoading(true);\r\n        setLoading1(true);\r\n        if (!data) {\r\n            await patientService.getPatientPaginate(10).then(data => {\r\n                if (data.patientFound) {\r\n                    getPatientFunction1(data);\r\n                } else {\r\n                    showToast('error', 'Erro!', 'Nenhum paciente encontrado.');\r\n                    setLoading(false);\r\n                    setLoading1(false);\r\n                }\r\n            })\r\n        } else {\r\n            getPatientFunction1(data);\r\n        }\r\n    }\r\n\r\n    async function getPatientInformation() {\r\n        var tempoAtual = new Date();\r\n        var parseDataAniversario = getPacienteDataNascimento.split('/')\r\n        var dataAniversario = new Date(parseDataAniversario[2], parseDataAniversario[1], parseDataAniversario[0]);\r\n        var age = tempoAtual.getFullYear() - dataAniversario.getFullYear();\r\n        var m = tempoAtual.getMonth() - dataAniversario.getMonth();\r\n        if (m < 0 || (m === 0 && tempoAtual.getDate() < dataAniversario.getDate())) {\r\n            age--;\r\n        }\r\n        if (age < 0) {\r\n            setPacienteIdade(0);\r\n        } else {\r\n            setPacienteIdade(age);\r\n        }\r\n\r\n        await patientService.getPatientInformation(getPacienteSeq).then(response => {\r\n            if (response.patientFound) {\r\n                setPacienteProntuario(response.medicalRecordsLength);\r\n                setPacienteAvaliacao(response.assessmentLength);\r\n            } else {\r\n                showToast('error', \"Erro!\", response.error);\r\n            }\r\n        })\r\n    }\r\n\r\n    function getPatientInformationUpdate() {\r\n        setPacienteNomeUpdate(getPacienteNome);\r\n        var parseDataAniversario = getPacienteDataNascimento.split('/')\r\n        var dataNascimento = new Date(parseDataAniversario[2], parseDataAniversario[1] - 1, parseDataAniversario[0]);\r\n        setPacienteDataNascimentoUpdate(dataNascimento);\r\n        setPacienteGeneroUpdate(getPacienteGenero[0]);\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n            const data = {\r\n                getPacienteNomeUpdate,\r\n                getPacienteDataNascimentoUpdate,\r\n                getPacienteGeneroUpdate\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                getPacienteNomeUpdate: Yup.string().required(),\r\n                getPacienteDataNascimentoUpdate: Yup.date().required(),\r\n                getPacienteGeneroUpdate: Yup.string().nullable().oneOf([null, \"M\", \"F\"]).required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            patientService.updatePatientInformation(getPacienteSeq, getPacienteNomeUpdate, getPacienteGeneroUpdate, getPacienteDataNascimentoUpdate, email).then(response => {\r\n                if (response.updatedPatient) {\r\n                    showToast('success', \"Atualização!\", \"Paciente atualizado com sucesso.\");\r\n                    setDisplayDialog2(false);\r\n                    getPatientFunction();\r\n                } else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            });\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    async function deletePatient() {\r\n        await patientService.deletePatient(getPacienteSeq, email).then(response => {\r\n            if (response.deletedPatient) {\r\n                showToast('success', \"Atualização!\", \"Paciente excluído com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getPatientFunction();\r\n            } else {\r\n                console.log(response.error)\r\n                if (response.error.code) {\r\n                    showToast('error', \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const onUserSelect = (e: any) => {\r\n        newUser = false;\r\n        setPacienteSelect(Object.assign({}, e.data));\r\n        var pacienteData = e.data;\r\n        setPacienteDataNascimento(pacienteData.DataNascimento);\r\n        setPacienteNome(pacienteData.NomePaciente);\r\n        setPacienteGenero(pacienteData.Genero);\r\n        setPacienteNro(pacienteData.NroPaciente);\r\n        setPacienteSeq(pacienteData.SeqPaciente);\r\n        setDisplayDialog(true);\r\n    };\r\n\r\n    const onGeneroChange = (e: { value: string }) => {\r\n        setPacienteGeneroUpdate(e.value);\r\n    };\r\n\r\n    const seqPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">SeqPaciente</span>\r\n                <a>{rowData.SeqPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const nroPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">NroPaciente</span>\r\n                <a>{rowData.NroPaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const generoPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Genero</span>\r\n                <a>{rowData.Genero}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const nomePacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">NomePaciente</span>\r\n                <a>{rowData.NomePaciente}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    const dataNascimentoPacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">DataNascimento</span>\r\n                <a>{rowData.DataNascimento}</a>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    let options2 = [\r\n        {name: 'Nome', cod: 'Name'},\r\n        {name: 'Nro Paciente', cod: 'Nro'},\r\n        {name: 'Data Nascimento', cod: 'Nas'}\r\n    ];\r\n\r\n    const onOptionChange = (e: { value: any }) => {\r\n        setOptionState(e.value);\r\n    };\r\n\r\n    function handleSearch(){\r\n        if(!getOptionState){\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return\r\n        }\r\n        setLoading(true);\r\n        if(!searchInput){\r\n            patientService.getPatientPaginate(10).then(data => {\r\n                getPatientFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            })\r\n            return\r\n        }\r\n        setMode('S');\r\n        patientService.searchPatientGlobal(searchInput, getOptionState.cod, getFirst+rows).then(data => {\r\n            if(!data.patientFound){\r\n                setLoading(false);\r\n                setPaciente([]);\r\n                showToast('warn', 'Resultados não encontrados!', 'Não foram encontrados resultados para a busca desejada')\r\n                return\r\n            }\r\n            getPatientFunction(data)\r\n            let searchType;\r\n            if(getOptionState.name === 'Nome'){\r\n                searchType = 'NomePaciente';\r\n            }else if(getOptionState.name === 'Nro Paciente'){\r\n                searchType = 'NroPaciente';\r\n            }else if(getOptionState.name === 'Data Nascimento'){\r\n                searchType = 'DataNascimento'\r\n            }else{\r\n                searchType = getOptionState.name\r\n            }\r\n            console.log(data)\r\n            let dataSize = data.length[0]['count(`' + searchType + '`)']\r\n            if(dataSize == 1){\r\n                showToast('info', 'Resultado Encontrado!', `Foi encontrado ${dataSize} resultado.`)\r\n            }else{\r\n                showToast('info', 'Resultados Encontrados!', `Foram encontrados ${dataSize} resultados.`)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n            <Link to={location => ({ ...location, pathname: '/registrations/patient/create' })}><Button variant=\"outline-dark\" className=\"mb-2\" style={{ borderRadius: '0', height: '41.5px' }}>Cadastrar Paciente</Button></Link>\r\n                <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open} style={{borderRadius: '0'}}>Buscar paciente específico</Button>\r\n                    <Collapse in={open} timeout={200}>\r\n                        <div className=\"ml-2\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput} onChange={(e) => {setSearchInput((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState} options={options2} onChange={onOptionChange} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput(''); getPatientFunction(); setMode('N'); setOptionState(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable value={paciente} paginator={true} rows={rows} header=\"Pacientes\" totalRecords={totalRecords}\r\n                        emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\" resizableColumns={true} loading={loading}\r\n                        first={getFirst} onPage={onPage} lazy={true} selectionMode=\"single\" selection={selectedUser} onSelectionChange={e => setSelectedUser(e.value)}\r\n                        onRowSelect={onUserSelect}>\r\n                        <Column field=\"SeqPaciente\" header=\"SeqPaciente\" body={seqPacienteBodyTemplate} />\r\n                        <Column field=\"NroPaciente\" header=\"NroPaciente\" body={nroPacienteBodyTemplate} />\r\n                        <Column field=\"Genero\" header=\"Gênero\" body={generoPacienteBodyTemplate} />\r\n                        <Column field=\"NomePaciente\" header=\"NomePaciente\" body={nomePacienteBodyTemplate} />\r\n                        <Column field=\"DataNascimento\" header=\"DataNascimento\" body={dataNascimentoPacienteBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Dialog visible={displayDialog} style={{ width: '50%' }} header=\"Ações\" modal={true} onHide={() => setDisplayDialog(false)}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"info\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { getPatientInformation(); setDisplayDialog1(true); setDisplayDialog(false) }}>Visualizar Paciente</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"primary\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { getPatientInformationUpdate(); setDisplayDialog2(true); setDisplayDialog(false) }}>Atualizar paciente</Button>\r\n                    </div>\r\n                    <div className=\"col ml-2\">\r\n                        <Button variant=\"danger\" className=\"mt-2 mb-2 p-3\" style={{ width: '100%' }} onClick={() => { setDisplayDialog3(true); setDisplayDialog(false) }}>Excluir Paciente</Button>\r\n                    </div>\r\n                    {/* <div className=\"col mr-4\">\r\n                        <Button className=\"mx-2 mt-2 mb-2 p-3\" onClick={() => {setDisplayDialog1(true); setDisplayDialog(false)}}>Atualizar <br></br> prontuário</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col\">\r\n                        <Button className=\"mx-2 mt-2 mb-2 mr-2 p-3\" onClick={() => {setDisplayDialog2(true); setDisplayDialog(false)}}>Excluir <br></br> prontuário</Button>\r\n                    </div> */}\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* Caixa de dialogo de listagem de paciente */}\r\n            <Dialog visible={displayDialog1} style={{ width: '50%' }} modal={true} onHide={() => setDisplayDialog1(false)} maximizable>\r\n                <p className=\"text-dark h5 mt-2\">Número: {getPacienteNro}</p>\r\n                <p className=\"text-dark h5 mt-2\">Sequência: {getPacienteSeq}</p>\r\n                <p className=\"text-dark h5 mt-2\">Nome: {getPacienteNome}</p>\r\n                {getPacienteIdade > 1\r\n                    ? <p className=\"text-dark h5 mt-2\">Idade: {getPacienteIdade} anos</p>\r\n                    : <p className=\"text-dark h5 mt-2\">Idade: {getPacienteIdade} ano</p>\r\n                }\r\n                <p className=\"text-dark h5 mt-2\">Data de nascimento: {getPacienteDataNascimento}</p>\r\n                <p className=\"text-dark h5 mt-2\">Gênero: {getPacienteGenero}</p>\r\n                <br></br>\r\n                <p className=\"text-dark h5 mt-2\">Quantidade de <b>Prontuários</b>: {getPacienteProntuario}</p>\r\n                <p className=\"text-dark h5 mt-2\">Quantidade de <b>Avaliações</b>: {getPacienteAvalicao}</p>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog2} style={{ width: '70%' }} modal={true} onHide={() => setDisplayDialog2(false)} maximizable maximized>\r\n                <p className=\"text-dark h3 text-center\">Atualização dos dados do(a) paciente {getPacienteNome}</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"NomeUpdate\" style={{ width: '100%' }} value={getPacienteNomeUpdate} onChange={(e) => setPacienteNomeUpdate((e.target as HTMLInputElement).value)} />\r\n                            <label htmlFor=\"NomeUpdate\">Nome</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Dropdown className=\"my-2\" value={getPacienteGeneroUpdate} options={optionsDropdownGenero} onChange={onGeneroChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Calendar id=\"DataInternacao\" className=\"mt-2\" style={{ width: '100%' }} value={getPacienteDataNascimentoUpdate} onChange={(e) => setPacienteDataNascimentoUpdate(e.value)}\r\n                                locale={pt_br} dateFormat=\"dd/mm/yy\" placeholder=\"Selecione a data de nascimento do paciente\" showButtonBar monthNavigator showIcon showOnFocus={false} required/>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog visible={displayDialog3} style={{ width: '50%' }} modal={true} header=\"Exclusão de paciente\" onHide={() => setDisplayDialog3(false)}>\r\n                <p className=\"text-dark h5 mt-2\">Deseja exluir o paciente {getPacienteNome} de código {getPacienteSeq}?</p>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-danger\" onClick={() => deletePatient()} style={{ width: '100%' }}>Sim</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Patient;","import api from '../../../../services/api';\r\n\r\nclass CreatePatientService{\r\n    async create(NroPaciente: Number, NomePaciente: String, DataNascimento: String, GeneroPaciente: String, email: any) {\r\n        return await api.post('/patient', {NroPaciente, NomePaciente, DataNascimento, Genero: GeneroPaciente, email}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport {CreatePatientService};","import React, { FormEvent, useState } from 'react';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport {Dropdown as DropdownReact} from 'react-bootstrap';\r\nimport { CreatePatientService } from './CreatePatientService';\r\nimport { Button } from 'primereact/button';\r\nimport ToastComponent from '../../../../components/Toast';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nconst PatientCreate = () => {\r\n    const history = useHistory();\r\n\r\n    const [getNroPaciente, setNroPaciente] = useState<any>();\r\n    const [getSeqPaciente, setSeqPaciente] = useState<any>();\r\n    const [getNomePaciente, setNomePaciente] = useState<any>();\r\n    const [getDataNascimentoPaciente, setDataNascimentoPaciente] = useState<any>();\r\n    const [getGeneroPaciente, setGeneroPaciente] = useState<any>();\r\n    \r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 1;\r\n    let prevYear = (prevMonth === 11) ? year - 1 : year;\r\n    let nextMonth = (month === 11) ? 0 : month + 1;\r\n    let nextYear = (nextMonth === 0) ? year + 1 : year;\r\n\r\n    const [date, setDate] = useState<Date | Date[] | undefined>(undefined);\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    const createPatientService = new CreatePatientService();\r\n    \r\n    let optionsDropdown = [\r\n        { label: 'Masculino', value: 'M' },\r\n        { label: 'Feminino', value: 'F' }\r\n    ];\r\n\r\n    const onGeneroChange = (e: { value: string }) => {\r\n        setGeneroPaciente(e.value);\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n            const data = {\r\n                getNroPaciente,\r\n                getNomePaciente,\r\n                getDataNascimentoPaciente,\r\n                getGeneroPaciente\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                getNroPaciente: Yup.number().required(),\r\n                getNomePaciente: Yup.string().required(),\r\n                getDataNascimentoPaciente: Yup.date().required(),\r\n                getGeneroPaciente: Yup.string().nullable().oneOf([null, \"M\", \"F\"]).required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            \r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createPatientService.create(getNroPaciente, getNomePaciente, getDataNascimentoPaciente, getGeneroPaciente, email).then((response) => {\r\n                if (response.createdPatient) {\r\n                    history.push('/registrations/patient');\r\n                } else {\r\n                    if (response.err) {\r\n                        showToast('error', 'Erro!', response.error + ' ' + String(response.err.code));\r\n                    } else {\r\n                        showToast('error', 'Erro!', response.error);\r\n                    }\r\n                }\r\n            })\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n}\r\n      \r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string){\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"row m-5\">\r\n                <div className=\"card shadow-lg p-3 col-sm-8 offset-md-2 border\">\r\n                    <p className=\"text-dark h3 text-center\">Cadastro de Paciente</p>\r\n                    <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-row mt-4\">\r\n                                <div className=\"col mr-4\">\r\n                                    <label htmlFor=\"NroProntuario\">Número do Paciente</label>\r\n                                    <br></br>\r\n                                    <InputText keyfilter=\"pint\" style={{width: '100%'}} id=\"NroProntuario\" name=\"NroProntuario\" defaultValue={getNroPaciente} \r\n                                        onChange={(e) => setNroPaciente(Number((e.target as HTMLInputElement).value))} placeholder=\"Digite o número do paciente\"\r\n                                        required autoFocus/>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <label htmlFor=\"DataInternacao\">Data de Nascimento</label>\r\n                                    <br></br>\r\n                                    <Calendar id=\"DataInternacao\" style={{width: '100%'}} value={getDataNascimentoPaciente} onChange={(e) => setDataNascimentoPaciente(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\" placeholder=\"Selecione a data de nascimento do paciente\" showButtonBar monthNavigator yearNavigator yearRange=\"1910:2021\" showIcon showOnFocus={false} touchUI required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <label htmlFor=\"Nome\" className=\"mt-4\">Nome</label>\r\n                            <br></br>\r\n                            <InputText  style={{width: '100%'}} id=\"Nome\" name=\"Nome\" defaultValue={getNomePaciente} onChange={(e) => setNomePaciente((e.target as HTMLInputElement).value)}\r\n                                placeholder=\"Digite o nome do paciente\" required/>\r\n                            \r\n                            <label htmlFor=\"Genero\" className=\"mt-4\">Gênero</label>\r\n                            <br></br>\r\n                            <Dropdown className=\"\" value={getGeneroPaciente} options={optionsDropdown} onChange={onGeneroChange} placeholder=\"Selecione uma opção\" style={{width: '100%'}} required/>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                    </form>\r\n                    {getToast &&\r\n                        <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PatientCreate;","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { DiseasesService } from './DiseasesService';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst Diseases = () => {\r\n    const [diseases, setDiseases] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n\r\n    const diseasesService = new DiseasesService();\r\n    const rows = 10;\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [mode, setMode] = useState('N');\r\n    const [toast, setToast] = useState<boolean>();\r\n    const [messageType, setMessageType] = useState<string>('');\r\n    const [messageTitle, setMessageTitle] = useState<string>('');\r\n    const [messageContent, setMessageContent] = useState<string>('');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [displayDialogs, setDisplayDialogs] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [codDoenca, setCodDoenca] = useState<any>('');\r\n    const [nome, setNome] = useState<any>('');\r\n\r\n    var diseaseData:any = {}\r\n\r\n    const [updatedCodDoenca, setUpdatedCodDoenca] = useState<any>('');\r\n    const [updatedNome, setUpdatedNome] = useState<any>('');\r\n\r\n    const [selectedRow, setSelectedRow] = useState<any>(null);\r\n    const [selectedDisease, setSelectedDisease] = useState<any>(null);\r\n\r\n    function getDiseasesFunction(data?: any) {\r\n        setLoading(true);\r\n        \r\n        if (!data) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setDatasource(data.diseases);\r\n                setTotalRecords(data.length);\r\n                data = data.diseases;\r\n\r\n                setDiseases(data.slice(0, rows));\r\n                setLoading(false);\r\n\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setDatasource(data.diseases);\r\n            setTotalRecords(data.length);\r\n            data = data.diseases;\r\n\r\n            setDiseases(data.slice(0, rows));\r\n            setLoading(false);\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getDiseasesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            diseasesService.getDiseasesPaginate(endIndex).then(data => {\r\n                getDiseasesFunction(data.diseases);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            showToast(\"error\", \"Erro!\", \"Selecione um filtro para buscar.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            diseasesService.getDiseasesPaginate(10).then(data => {\r\n                getDiseasesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        diseasesService.searchDiseasesGlobal(searchInput, optionState.cod, first + rows).then(data => {\r\n            if (!data.diseases) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getDiseasesFunction(data);\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => { setToast(false) }, 4500);\r\n    }\r\n\r\n    function onUserSelect(e: any) {\r\n        setSelectedDisease(Object.assign({}, e.data));\r\n\r\n        diseaseData = e.data;\r\n        console.log(e.data);\r\n\r\n        setCodDoenca(diseaseData.CodDoenca);\r\n        setNome(diseaseData.Nome);\r\n        setDisplayDialogs(true);\r\n        console.log(codDoenca, nome);\r\n    };\r\n\r\n    function updateDisease() {\r\n        setUpdatedCodDoenca(codDoenca);\r\n        setUpdatedNome(nome);\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        try {\r\n            event.preventDefault();\r\n\r\n            const data = {updatedCodDoenca, updatedNome};\r\n            const schema = Yup.object().shape({\r\n                up: Yup.string().required(),\r\n                updatedCodDoenca: Yup.string().required(),\r\n                updatedNome: Yup.string().required()\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n\r\n            diseasesService.updateDisease(updatedCodDoenca, updatedNome).then(response => {\r\n                if (response.updatedDisease) {\r\n                    showToast(\"success\", \"Atualização!\", \"Doença atualizada com sucesso.\");\r\n                    setDisplayDialog2(false);\r\n                    getDiseasesFunction();\r\n                } \r\n                else {\r\n                    showToast(\"error\", \"Erro!\", String(response.error));\r\n                }\r\n            });\r\n        } \r\n        catch (err) {\r\n            if (err instanceof Yup.ValidationError) {\r\n                showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    async function deleteDisease() {\r\n        await diseasesService.deleteDisease(codDoenca).then(response => {\r\n\r\n            if (response.deletedDisease) {\r\n                showToast(\"success\", \"Atualização!\", \"Doença excluída com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getDiseasesFunction();\r\n            } \r\n            else {\r\n                console.log(response.error);\r\n\r\n                if (response.error.code) {\r\n                    showToast(\"error\", \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } \r\n                else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({ ...location, pathname: '/registrations/diseases/create' })}>\r\n                    <Button \r\n                        variant=\"outline-dark\" \r\n                        className=\"mr-2 mb-2\" \r\n                        style={{ borderRadius: '0', height:'41.5px' }}\r\n                    >\r\n                        Cadastrar Doença\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    className=\"mr-2 mb-2\"\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => setOpen(!open)}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    style={{ borderRadius: '0', height:'41.5px' }}\r\n                >\r\n                    Buscar doença específica\r\n                </Button>\r\n                <Collapse className=\"mb-2\" in={open} timeout={200}>\r\n                    <div>\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label mr-2\">\r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={searchInput}\r\n                                    onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }}\r\n                                    onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }}\r\n                                    style={{ minWidth: '4em', borderRadius: '0', height:'41.5px' }}\r\n                                />\r\n                                {\r\n                                    optionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {optionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {\r\n                                searchInput === ''\r\n                                    ? <></>\r\n                                    : <>\r\n                                        <Dropdown\r\n                                            className=\"mr-2\"\r\n                                            value={optionState}\r\n                                            options={[\r\n                                                { name: 'Código', cod: 'C' },\r\n                                                { name: 'Nome', cod: 'N' },\r\n                                            ]}\r\n                                            onChange={(e: { value: any }) => setOptionState(e.value)}\r\n                                            placeholder=\"Selecione um filtro\"\r\n                                            optionLabel=\"name\"\r\n                                            style={{ width: '12em' }}\r\n                                        />\r\n                                        <Button\r\n                                            tabIndex={2}\r\n                                            variant=\"outline-danger\"\r\n                                            className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                                            style={{ borderRadius: '0' }}\r\n                                            onClick={() => { setSearchInput(''); getDiseasesFunction(); setMode('N'); setOptionState(null) }}\r\n                                        >\r\n                                            <AiOutlineClose size={18} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={handleSearch}\r\n                                            style={{ borderRadius: '0' }}\r\n                                            className=\"d-inline-flex justify-content-center align-items-center\"\r\n                                        >\r\n                                            <FiSearch size={18} />\r\n                                        </Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n\r\n                <DataTable\r\n                    value={diseases}\r\n                    paginator={true}\r\n                    rows={rows}\r\n                    header={<h5 className=\"py-1\">Tabela de doenças</h5>}\r\n                    totalRecords={totalRecords}\r\n                    emptyMessage=\"Nenhum resultado encontrado\"\r\n                    className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true}\r\n                    loading={loading}\r\n                    first={first}\r\n                    onPage={onPage}\r\n                    lazy={true}\r\n                    selectionMode=\"single\" \r\n                    selection={selectedRow} \r\n                    onSelectionChange={(e) => setSelectedRow(e.value)}\r\n                    onRowSelect={(e) => onUserSelect(e)}\r\n                >\r\n                    <Column field=\"CodDoenca\" header=\"Código\" style={{ width: '8%', textAlign: 'center' }} />\r\n                    <Column field=\"Nome\" header=\"Nome\" style={{ width: '20%', textAlign: 'center' }} />\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog \r\n                visible={displayDialogs} \r\n                style={{ width: '50%' }} \r\n                header=\"Ações\" \r\n                modal={true} \r\n                onHide={() => setDisplayDialogs(false)}\r\n            >\r\n                <div className=\"form-row\">\r\n                    <div className=\"col\">\r\n                        <Button \r\n                            variant=\"info\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                setDisplayDialog1(true); \r\n                                setDisplayDialogs(false);\r\n                            }}\r\n                        >\r\n                            Visualizar doença\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"col ml-2\">\r\n                        <Button \r\n                            variant=\"primary\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                updateDisease(); \r\n                                setDisplayDialog2(true); \r\n                                setDisplayDialogs(false) \r\n                            }}\r\n                        >\r\n                            Atualizar doença\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                    <div className=\"col ml-2\">\r\n                        <Button \r\n                            variant=\"danger\" \r\n                            className=\"mt-2 mb-2 p-3\" \r\n                            style={{ width: '100%' }} \r\n                            onClick={() => { \r\n                                setDisplayDialog3(true); \r\n                                setDisplayDialogs(false) \r\n                            }}\r\n                        >\r\n                            Excluir doença\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* Caixa de dialogo de listagem de doenças */}\r\n            <Dialog \r\n                visible={displayDialog1} \r\n                style={{ width: '50%' }} \r\n                modal={true} \r\n                onHide={() => setDisplayDialog1(false)} \r\n                maximizable\r\n            >\r\n                <p className=\"text-dark h5 mt-2\">Código: {codDoenca}</p>\r\n                <p className=\"text-dark h5 mt-2\">Nome: {nome}</p>\r\n            </Dialog>\r\n\r\n            <Dialog \r\n                visible={displayDialog2} \r\n                style={{ width: '70%' }} \r\n                modal={true} \r\n                onHide={() => setDisplayDialog2(false)} \r\n                maximizable maximized\r\n            >\r\n                <p className=\"text-dark h3 text-center\">Atualização dos dados da doença {nome}</p>\r\n                \r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText \r\n                                id=\"codeUpdate\" \r\n                                style={{ width: '100%' }} \r\n                                value={updatedCodDoenca} \r\n                                onChange={(e) => setUpdatedCodDoenca((e.target as HTMLInputElement).value)} \r\n                            />\r\n                            <label htmlFor=\"NomeUpdate\">Código da doença</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 mb-2\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText \r\n                                id=\"nameUpdate\" \r\n                                style={{ width: '100%' }} \r\n                                value={updatedNome} \r\n                                onChange={(e) => setUpdatedNome((e.target as HTMLInputElement).value)} \r\n                            />\r\n                            <label htmlFor=\"NomeUpdate\">Nome da doença</label>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog \r\n                visible={displayDialog3} \r\n                style={{ width: '50%' }} \r\n                modal={true}\r\n                header=\"Exclusão de doença\" \r\n                onHide={() => setDisplayDialog3(false)}\r\n            >\r\n                <p className=\"text-dark h5 mt-2\">Deseja exluir a doença {nome} de código {codDoenca}?</p>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-danger\" onClick={() => deleteDisease()} style={{ width: '100%' }}>Sim</Button>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Diseases;","import api from '../../../../services/api';\r\n\r\nclass CreateDiseaseService {\r\n\r\n    async Create(\r\n        codDoenca: string,\r\n        nome: string,\r\n        email:any\r\n    ) {\r\n        return await api.post('diseases', {\r\n            codDoenca,\r\n            nome,\r\n            email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateDiseaseService };","import React, { useState, FormEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from \"yup\";\r\n\r\nimport ToastComponent from \"../../../../components/Toast\";\r\n\r\nimport { CreateDiseaseService } from './CreateDiseaseService';\r\n\r\nconst DiseasesCreate = () => {\r\n\r\n    const [codDoenca, setCodDoeca] = useState<string>('');\r\n    const [nome, setNome] = useState<string>('');\r\n\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const createDiseaseService = new CreateDiseaseService();\r\n\r\n   async function handleSubmit(event: FormEvent) {\r\n       try {\r\n            event.preventDefault();\r\n            const data = {\r\n                codDoenca,\r\n                nome,\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                codDoenca: Yup.string().required(),\r\n                nome: Yup.string().required()\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n\r\n            createDiseaseService.Create(\r\n                codDoenca,\r\n                nome,\r\n                email\r\n            ).then(() => {\r\n                HandleToast(\"success\", \"Sucesso!\", \"Doença criada com sucesso!\");\r\n                history.push('/registrations/diseases');\r\n            });\r\n\r\n        } \r\n        catch (err) {\r\n            if (err instanceof Yup.ValidationError) HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Doenças</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"codDoenca\" className=\"mt-4\">Código da doença</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"codDoenca\"\r\n                                    name=\"codDoenca\"\r\n                                    defaultValue={codDoenca}\r\n                                    onChange={(e) => setCodDoeca((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Código da doença\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"nome\" className=\"mt-4\">Nome da doença</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"nome\"\r\n                                    name=\"nome\"\r\n                                    defaultValue={nome}\r\n                                    onChange={(e) => setNome((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"Nome da doença\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-2\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        { \r\n            toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            ) \r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DiseasesCreate;","import React, { useState, useEffect, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MedicinesService } from './MedicinesService';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst Medicines = () => {\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [first, setFirst] = useState(0);\r\n\r\n    const medicinesService = new MedicinesService();\r\n    const rows = 10;\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [mode, setMode] = useState('N');\r\n    const [toast, setToast] = useState<boolean>();\r\n    const [messageType, setMessageType] = useState<string>('');\r\n    const [messageTitle, setMessageTitle] = useState<string>('');\r\n    const [messageContent, setMessageContent] = useState<string>('');\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [displayDialogs, setDisplayDialogs] = useState(false);\r\n    const [displayDialog1, setDisplayDialog1] = useState(false);\r\n    const [displayDialog2, setDisplayDialog2] = useState(false);\r\n    const [displayDialog3, setDisplayDialog3] = useState(false);\r\n\r\n    const [ean, setEan] = useState<any>('');\r\n\r\n    var medicineData:any = {}\r\n\r\n    const [updatedEan, setUpdatedEan] = useState<any>('');\r\n\r\n    const [selectedRow, setSelectedRow] = useState<any>(null);\r\n    const [selectedMedicine, setSelectedMedicine] = useState<any>(null);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                console.log(data);\r\n\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            console.log(data);\r\n\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    const onPage = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst(startIndex);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode('S');\r\n        medicinesService.searchMedicineGlobal(searchInput, optionState.cod, first + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => { setToast(false) }, 4500);\r\n    }\r\n\r\n    function onUserSelect(e: any) {\r\n        setSelectedMedicine(Object.assign({}, e.data));\r\n\r\n        medicineData = e.data;\r\n        console.log(e.data);\r\n\r\n        setEan(medicineData.EAN);\r\n        setDisplayDialogs(true);\r\n    };\r\n\r\n    function updateMedicine() {\r\n        setUpdatedEan(ean);\r\n    }\r\n\r\n    // async function handleSubmit(event: FormEvent) {\r\n    //     try {\r\n    //         event.preventDefault();\r\n\r\n    //         const data = {};\r\n    //         const schema = Yup.object().shape({\r\n    //             up: Yup.string().required(),\r\n    //             updatedCodDoenca: Yup.string().required(),\r\n    //             updatedNome: Yup.string().required()\r\n    //         })\r\n\r\n    //         await schema.validate(data, { abortEarly: false });\r\n\r\n    //         medicinesService.updateMedicine().then(response => {\r\n    //             if (response.updatedMedicine) {\r\n    //                 showToast(\"success\", \"Atualização!\", \"Medicamento atualizado com sucesso.\");\r\n    //                 setDisplayDialog2(false);\r\n    //                 getMedicinesFunction();\r\n    //             } \r\n    //             else {\r\n    //                 showToast(\"error\", \"Erro!\", String(response.error));\r\n    //             }\r\n    //         });\r\n    //     } \r\n    //     catch (err) {\r\n    //         if (err instanceof Yup.ValidationError) {\r\n    //             showToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n    //         }\r\n    //         else return;\r\n    //     }\r\n    // }\r\n\r\n    async function deleteMedicine() {\r\n        await medicinesService.deleteMedicine(ean).then(response => {\r\n\r\n            if (response.deletedMedicine) {\r\n                showToast(\"success\", \"Atualização!\", \"Medicamento excluído com sucesso.\");\r\n                setDisplayDialog3(false);\r\n                getMedicinesFunction();\r\n            } \r\n            else {\r\n                console.log(response.error);\r\n\r\n                if (response.error.code) {\r\n                    showToast(\"error\", \"Erro!\", String(response.error.code) + ' ' + String(response.error.sqlMessage));\r\n                } \r\n                else {\r\n                    showToast('error', \"Erro!\", String(response.error));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to={location => ({ ...location, pathname: '/registrations/medicines/create' })}>\r\n                    <Button \r\n                        variant=\"outline-dark\" \r\n                        className=\"mr-2 mb-2\" \r\n                        style={{ borderRadius: '0', height:'41.5px' }}\r\n                    >\r\n                        Cadastrar Medicamento\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    className=\"mr-2 mb-2\"\r\n                    variant=\"outline-secondary\"\r\n                    onClick={() => setOpen(!open)}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    style={{ borderRadius: '0', height:'41.5px' }}\r\n                >\r\n                    Buscar medicamento específico\r\n                </Button>\r\n                <Collapse className=\"mb-2\" in={open} timeout={200}>\r\n                    <div>\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label mr-2\"> \r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={searchInput}\r\n                                    onChange={(e) => { setSearchInput((e.target as HTMLInputElement).value) }}\r\n                                    onKeyPress={(ev) => { if (ev.key === 'Enter') { handleSearch(); ev.preventDefault(); } }}\r\n                                    style={{ minWidth: '4em', borderRadius: '0', height:'41.5px' }}\r\n                                />\r\n                                {\r\n                                    optionState === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {optionState.name}</label>\r\n                                }\r\n                            </span>\r\n                            {\r\n                                searchInput === ''\r\n                                    ? <></>\r\n                                    : <>\r\n                                        <Dropdown\r\n                                            className=\"mr-2\"\r\n                                            value={optionState}\r\n                                            options={[\r\n                                                { name: 'EAN', cod: 'E' },\r\n                                                { name: 'Princípio', cod: 'P' },\r\n                                                { name: 'Classe', cod: 'C' },\r\n                                            ]}\r\n                                            onChange={(e: { value: any }) => setOptionState(e.value)}\r\n                                            placeholder=\"Selecione um filtro\"\r\n                                            optionLabel=\"name\"\r\n                                            style={{ width: '12em' }}\r\n                                        />\r\n                                        <Button\r\n                                            tabIndex={2}\r\n                                            variant=\"outline-danger\"\r\n                                            className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                                            style={{ borderRadius: '0' }}\r\n                                            onClick={() => { setSearchInput(''); getMedicinesFunction(); setMode('N'); setOptionState(null) }}\r\n                                        >\r\n                                            <AiOutlineClose size={18} />\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={handleSearch}\r\n                                            style={{ borderRadius: '0' }}\r\n                                            className=\"d-inline-flex justify-content-center align-items-center\"\r\n                                        >\r\n                                            <FiSearch size={18} />\r\n                                        </Button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n\r\n                <DataTable\r\n                    value={medicines}\r\n                    paginator={true}\r\n                    rows={rows}\r\n                    header={<h5 className=\"py-1\">Tabela de medicamentos</h5>}\r\n                    totalRecords={totalRecords}\r\n                    emptyMessage=\"Nenhum resultado encontrado\"\r\n                    className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true}\r\n                    loading={loading}\r\n                    first={first}\r\n                    onPage={onPage}\r\n                    lazy={true}\r\n                    selectionMode=\"single\" \r\n                    selection={selectedRow} \r\n                    onSelectionChange={(e) => setSelectedRow(e.value)}\r\n                    onRowSelect={(e) => onUserSelect(e)}\r\n                >\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"CNPJ\" header=\"CNPJ\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Laboratorio\" header=\"Laboratório\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Registro\" header=\"Registro\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Produto\" header=\"Produto\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                    <Column field=\"ClasseTerapeutica\" header=\"Classe Terapêutica\" style={{ width: \"12.5%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n\r\n                <Dialog \r\n                    visible={displayDialogs} \r\n                    style={{ width: '50%' }} \r\n                    header=\"Ações\" \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialogs(false)}\r\n                >\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col\">\r\n                            <Button \r\n                                variant=\"info\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    setDisplayDialog1(true); \r\n                                    setDisplayDialogs(false);\r\n                                }}\r\n                            >\r\n                                Visualizar medicamento\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button \r\n                                variant=\"primary\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    updateMedicine(); \r\n                                    setDisplayDialog2(true); \r\n                                    setDisplayDialogs(false) \r\n                                }}\r\n                            >\r\n                                Atualizar medicamento\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col ml-2\">\r\n                            <Button \r\n                                variant=\"danger\" \r\n                                className=\"mt-2 mb-2 p-3\" \r\n                                style={{ width: '100%' }} \r\n                                onClick={() => { \r\n                                    setDisplayDialog3(true); \r\n                                    setDisplayDialogs(false) \r\n                                }}\r\n                            >\r\n                                Excluir medicamento\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                {/* Caixa de dialogo de listagem de medicamentos */}\r\n                <Dialog \r\n                    visible={displayDialog1} \r\n                    style={{ width: '50%' }} \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialog1(false)} \r\n                    maximizable\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">EAN: {ean}</p>\r\n                </Dialog>\r\n\r\n                <Dialog \r\n                    visible={displayDialog2} \r\n                    style={{ width: '70%' }} \r\n                    modal={true} \r\n                    onHide={() => setDisplayDialog2(false)} \r\n                    maximizable maximized\r\n                >\r\n                    <p className=\"text-dark h3 text-center\">Atualização dos dados do medicamento {ean}</p>\r\n\r\n                    <form className=\"was-validated\" /*onSubmit={handleSubmit}*/>\r\n                        <div className=\"mt-4 mb-2\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText \r\n                                    id=\"codeUpdate\" \r\n                                    style={{ width: '100%' }} \r\n                                    value={updatedEan} \r\n                                    onChange={(e) => setUpdatedEan((e.target as HTMLInputElement).value)} \r\n                                />\r\n                                <label htmlFor=\"NomeUpdate\">EAN</label>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\">Cadastrar</button>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Dialog \r\n                    visible={displayDialog3} \r\n                    style={{ width: '50%' }} \r\n                    modal={true}\r\n                    header=\"Exclusão de medicamento\" \r\n                    onHide={() => setDisplayDialog3(false)}\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">Deseja exluir o medicamento de EAN {ean}?</p>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Button variant=\"outline-danger\" onClick={() => deleteMedicine()} style={{ width: '100%' }}>Sim</Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button variant=\"outline-info\" onClick={() => setDisplayDialog3(false)} style={{ width: '100%' }}>Não</Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Medicines;","import api from '../../../../services/api';\r\n\r\nclass CreateMedicineService {\r\n\r\n    async Create(\r\n        EAN: string,\r\n        PrincipioAtivo: string,\r\n        Registro: string,\r\n        Laboratorio: string,\r\n        Produto: string,\r\n        Apresentacao: string,\r\n        ClasseTerapeutica: string,\r\n        CNPJ: string,\r\n        email:any\r\n    ) {\r\n        return await api.post('medicines', {\r\n            EAN,\r\n            PrincipioAtivo,\r\n            Registro,\r\n            Laboratorio,\r\n            Produto,\r\n            Apresentacao,\r\n            ClasseTerapeutica,\r\n            CNPJ,\r\n            email\r\n        }).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport { CreateMedicineService };","import React, { useState, FormEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from \"yup\";\r\n\r\nimport ToastComponent from \"../../../../components/Toast\";\r\n\r\nimport { CreateMedicineService } from './CreateMedicineService';\r\n\r\nconst MedicinesCreate = () => {\r\n    const [EAN, setEAN] = useState<string>('');\r\n    const [principioAtivo, setPrincipioAtivo] = useState<string>('');\r\n    const [registro, setRegistro] = useState<string>('');\r\n    const [laboratorio, setLaboratorio] = useState<string>('');\r\n    const [produto, setProduto] = useState<string>('');\r\n    const [apresentacao, setApresentacao] = useState<string>('');\r\n    const [classeTerapeutica, setClasseTerapeutica] = useState<string>('');\r\n    const [CNPJ, setCNPJ] = useState<string>('');\r\n\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    const createMedicineService = new CreateMedicineService();\r\n\r\n   async function handleSubmit(event: FormEvent) {\r\n       try {\r\n            event.preventDefault();\r\n            const data = {\r\n                EAN,\r\n                principioAtivo,\r\n                registro,\r\n                laboratorio,\r\n                produto,\r\n                apresentacao,\r\n                classeTerapeutica,\r\n                CNPJ\r\n            };\r\n            //Validação de dados\r\n            const schema = Yup.object().shape({\r\n                EAN: Yup.string().required(),\r\n                principioAtivo: Yup.string().required(),\r\n                registro: Yup.string().required(),\r\n                laboratorio: Yup.string().required(),\r\n                produto: Yup.string().required(),\r\n                apresentacao: Yup.string().required(),\r\n                classeTerapeutica: Yup.string().required(),\r\n                CNPJ: Yup.string().required(),\r\n            })\r\n\r\n            await schema.validate(data, { abortEarly: false });\r\n            const email = localStorage.getItem('@gafio-user/email');\r\n            createMedicineService.Create(\r\n            EAN,\r\n            principioAtivo,\r\n            registro,\r\n            laboratorio,\r\n            produto,\r\n            apresentacao,\r\n            classeTerapeutica,\r\n            CNPJ,\r\n            email\r\n            ).then(() => {\r\n                HandleToast(\"success\", \"Sucesso!\", \"Medicamento criado com sucesso!\");\r\n                history.push('/registrations/medicines')\r\n            });\r\n\r\n        } catch (err) {\r\n            if (err instanceof Yup.ValidationError) HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Medicamento</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"EAN\" className=\"mt-4\">EAN</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"EAN\"\r\n                                    name=\"EAN\"\r\n                                    defaultValue={EAN}\r\n                                    onChange={(e) => setEAN((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"EAN\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"CNPJ\" className=\"mt-4\">CNPJ</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"CNPJ\"\r\n                                    name=\"CNPJ\"\r\n                                    defaultValue={CNPJ}\r\n                                    onChange={(e) => setCNPJ((e.target as HTMLInputElement).value)}\r\n                                    placeholder=\"CNPJ\"\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"principioAtivo\" className=\"mt-4\">Princípio Ativo</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"principioAtivo\"\r\n                            name=\"principioAtivo\"\r\n                            defaultValue={principioAtivo}\r\n                            onChange={(e) => setPrincipioAtivo((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Princípio Ativo\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"registro\" className=\"mt-4\">Registro</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"registro\"\r\n                            name=\"registro\"\r\n                            defaultValue={registro}\r\n                            onChange={(e) => setRegistro((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Registro\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"laboratorio\" className=\"mt-4\">Laboratório</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"laboratorio\"\r\n                            name=\"laboratorio\"\r\n                            defaultValue={laboratorio}\r\n                            onChange={(e) => setLaboratorio((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Laboratório\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"produto\" className=\"mt-4\">Produto</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"produto\"\r\n                            name=\"produto\"\r\n                            defaultValue={produto}\r\n                            onChange={(e) => setProduto((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Produto\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"apresentacao\" className=\"mt-4\">Apresentação</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"apresentacao\"\r\n                            name=\"apresentacao\"\r\n                            defaultValue={apresentacao}\r\n                            onChange={(e) => setApresentacao((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Apresentação\"\r\n                            required={true}\r\n                        />\r\n\r\n                        <label htmlFor=\"classeTerapeutica\" className=\"mt-4\">Classe Terapeutica</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"classeTerapeutica\"\r\n                            name=\"classeTerapeutica\"\r\n                            defaultValue={classeTerapeutica}\r\n                            onChange={(e) => setClasseTerapeutica((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Classe Terapeutica\"\r\n                            required={true}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-2\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        { \r\n            toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MedicinesCreate;","import React, { useRef, useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst History = () => {\r\n    const myToast: any = useRef(null);\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const items = [\r\n        {\r\n            label: 'Entrada',\r\n            command: (event: any) => {\r\n                showToast('info', 'Data de entrada', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Avaliações',\r\n            command: (event: any) => {\r\n                showToast('info', 'Data da avaliação', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Verificação',\r\n            command: (event: any) => {\r\n                showToast('info', 'Status verificação', event.item.label)\r\n            }\r\n        },\r\n        {\r\n            label: 'Desfecho',\r\n            command: (event: any) => {\r\n                showToast('info', 'Desfecho', event.item.label)\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n\r\n    function showToast(severity: String, summary: String, detail: String) {\r\n        myToast.current.show({ severity: severity, summary: summary, detail: detail, life: 6000 });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={myToast} position=\"bottom-left\"></Toast>\r\n            <div className=\"card row mx-4 p-4\">\r\n                <h5 className=\"py-1\">Histórico do paciente</h5>\r\n\r\n                <div className=\"p-inputgroup py-1\">\r\n                    <InputText \r\n                        placeholder=\"Pesquisar por paciente\"\r\n                        className=\"mr-2\"\r\n                        style={{ maxWidth: '20vw' }}\r\n                    />\r\n                    <Dropdown\r\n                        optionLabel=\"name\"\r\n                        placeholder=\"Selecione um filtro\"\r\n                        className=\"mr-2\"\r\n                        style={{ maxWidth: '14vw' }}\r\n                        options={[\r\n                            { name: 'Nome do paciente', cod: 'No' },\r\n                            { name: 'Número do paciente', cod: 'Nu' },\r\n                        ]}\r\n                        value={optionState}\r\n                        onChange={(e: { value: any }) => { setOptionState(e.value) }}\r\n                    />\r\n                    <Button \r\n                        className=\"d-inline-flex justify-content-center align-items-center mr-2\"\r\n                        variant=\"outline-danger\"\r\n                    >\r\n                        <AiOutlineClose size={18} />\r\n                    </Button>\r\n                    <Button className=\"d-inline-flex justify-content-center align-items-center\">\r\n                        <FiSearch size={18} />\r\n                    </Button>\r\n                </div>\r\n\r\n                <Steps \r\n                    className=\"pt-4 pb-2\" \r\n                    model={items} \r\n                    activeIndex={activeIndex} \r\n                    onSelect={(e) => setActiveIndex(e.index)} \r\n                    readOnly={false} \r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default History;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 rounded-pill border bg-info text-light\">\r\n                <p className=\"text-center h2\">Erro 404</p>\r\n                <p className=\"text-center h4\">Página não encontrada.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-3 col-sm-8 offset-md-3 rounded-pill border border-primary bg-light text-info\">\r\n                <p className=\"text-center h2\">Erro 302</p>\r\n                <p className=\"text-center h4\">Página em desenvolvimento. Volte mais tarde.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound","import api from '../../../../services/api'\r\n\r\nclass CreateAssessmentService {\r\n    async Create(queryResponse: any, getNroAvaliacao: any, getDataAvaliacao: string, getResultadoCulturas: any, getResCulturasAcao: any,\r\n        getDoseCorreta: any, getPosologiaCorreta: any, getAlertaDot: any, getAlertaDotDescricao: any, getDisfuncaoRenal: string, getHemodialise: string,\r\n        getAtbOral: string, getAtbContraindicacao: string, getAlteracaoPrescricao: any, getAtbDiluicaoInfusao: string, getInteracaoAtbMedicamento: string,\r\n        getTrocaAtb: string, getNovoAtb: any) {\r\n        return await api.post('medicalRecords/assessment', {\r\n            IdProntuario: queryResponse, NroAvaliacao: getNroAvaliacao, DataAvaliacao: getDataAvaliacao,\r\n            ResultadoCulturas: getResultadoCulturas, ResCulturasAcao: getResCulturasAcao, DoseCorreta: getDoseCorreta, \r\n            PosologiaCorreta: getPosologiaCorreta, AlertaDot: getAlertaDot, AlertaDotDescricao: getAlertaDotDescricao, \r\n            DisfuncaoRenal: getDisfuncaoRenal, Hemodialise: getHemodialise, AtbOral: getAtbOral, \r\n            AtbContraindicacao: getAtbContraindicacao, AlteracaoPrescricao: getAlteracaoPrescricao, \r\n            AtbDiluicaoInfusao: getAtbDiluicaoInfusao, InteracaoAtbMedicamento: getInteracaoAtbMedicamento, \r\n            TrocaAtb: getTrocaAtb, NovoAtb: getNovoAtb\r\n        }).then(response => response.data)\r\n    }\r\n\r\n    async Verify(queryResponse: any){\r\n        return await api.post('/medicalRecords/assessment/verify/', { \r\n            seqProntuario: queryResponse \r\n        }).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport { CreateAssessmentService }","import React, { useState, FormEvent, useEffect } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dropdown as DropdownReact } from 'react-bootstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ToastComponent from '../../../../components/Toast';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {FiSearch} from 'react-icons/fi';\r\nimport {AiOutlineClose} from 'react-icons/ai';\r\nimport Loading from '../../../../components/Loading';\r\nimport * as Yup from \"yup\";\r\n\r\nimport { CreateAssessmentService } from './CreateAssessmentService'\r\nimport { MedicinesService } from '../../../Registrations/Medicines/MedicinesService';\r\n\r\nconst AssessmentForm = () => {\r\n    const query = new URLSearchParams(useLocation().search)\r\n    const queryResponse = query.get(\"seqProntuario\") || \"\"\r\n\r\n    const [getNroAvaliacao, setNroAvaliacao] = useState<any>(null)\r\n    const [getDataAvaliacao, setDataAvaliacao] = useState<any>(null)\r\n    const [getResultadoCulturas, setResultadoCulturas] = useState<any>(null)\r\n    const [getResCulturasAcao, setResCulturasAcao] = useState<any>(null)\r\n    const [getDoseCorreta, setDoseCorreta] = useState<any>(null)\r\n    const [getPosologiaCorreta, setPosologiaCorreta] = useState<any>(null)\r\n    const [getAlertaDot, setAlertaDot] = useState<any>(null)\r\n    const [getAlertaDotDescricao, setAlertaDotDescricao] = useState<any>(null)\r\n    const [getDisfuncaoRenal, setDisfuncaoRenal] = useState<string>('')\r\n    const [getAtbContraindicacao, setAtbContraindicacao] = useState<any>(null)\r\n    const [getAlteracaoPrescricao, setAlteracaoPrescricao] = useState<any>(null)\r\n    const [getAtbDiluicaoInfusao, setAtbDiluicaoInfusao] = useState<any>(null)\r\n    const [getInteracaoAtbMedicamento, setInteracaoAtbMedicamento] = useState<any>(null)\r\n    const [getHemodialise, setHemodialise] = useState<any>(null)\r\n    const [getAtbOral, setAtbOral] = useState<any>(null)\r\n    const [getTrocaAtb, setTrocaAtb] = useState<any>(null)\r\n    const [getNovoAtb, setNovoAtb] = useState<any>(null)\r\n    const [getToast, setToast] = useState<boolean>();\r\n    const [getMessageType, setMessageType] = useState<string>('');\r\n    const [getMessageTitle, setMessageTitle] = useState<string>('');\r\n    const [getMessageContent, setMessageContent] = useState<string>('');\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loading1, setLoading1] = useState(true);\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [medicines, setMedicines] = useState([]);\r\n    const [totalRecords2, setTotalRecords2] = useState(0);\r\n    const [first2, setFirst2] = useState(0);\r\n    const [searchInput2, setSearchInput2] = useState('');\r\n    const [getOptionState2, setOptionState2] = useState<any>(null);\r\n    const [mode2, setMode2] = useState('N');\r\n    const [open2, setOpen2] = useState(false);\r\n    const [getMedicinesChange, setMedicinesChange] = useState();\r\n    const [selectedMedicines, setSelectedMedicines] = useState<any>(null);\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const medicinesService = new MedicinesService();\r\n    var MedicinesData:any = {};\r\n    const rows = 10;\r\n\r\n    const history = useHistory()\r\n\r\n    const createAssessmentService = new CreateAssessmentService()\r\n\r\n    useEffect(() => {\r\n        createAssessmentService.Verify(queryResponse).then(response => {\r\n            if(response.verifyMR){\r\n                return\r\n            }else{\r\n                showToast('error', 'Erro!', String(response.error))\r\n                setTimeout(() => {\r\n                    history.push('/medicalRecords')\r\n                }, 2500)\r\n            }\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function checkInput(type: number, e: any) {\r\n        if (type == 1) {\r\n            if (e === '') {\r\n                setResultadoCulturas(null);\r\n            } else {\r\n                setResultadoCulturas(e)\r\n            }\r\n        }\r\n        if (type == 2) {\r\n            if (e === '') {\r\n                setResCulturasAcao(null);\r\n            } else {\r\n                setResCulturasAcao(e)\r\n            }\r\n        }\r\n        if (type == 3) {\r\n            if (e === '') {\r\n                setAlertaDotDescricao(null);\r\n            } else {\r\n                setAlertaDotDescricao(e)\r\n            }\r\n        }\r\n        if (type == 4) {\r\n            if (e === '') {\r\n                setNovoAtb(null);\r\n            } else {\r\n                setNovoAtb(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDoseCorretaChange = (e: { value: string }) => {\r\n        setDoseCorreta(e.value);\r\n    };\r\n\r\n    const onPosologiaCorretaChange = (e: { value: string }) => {\r\n        setPosologiaCorreta(e.value);\r\n    };\r\n\r\n    const onAlertaDotChange = (e: { value: string }) => {\r\n        setAlertaDot(e.value);\r\n    };\r\n\r\n    const onAlteracaoPrescricaoChange = (e: { value: string }) => {\r\n        setAlteracaoPrescricao(e.value);\r\n    };\r\n\r\n    const onAtbContraindicacaoChange = (e: { value: string }) => {\r\n        setAtbContraindicacao(e.value);\r\n    };\r\n\r\n    const onAtbDiluicaoInfusaoChange = (e: { value: string }) => {\r\n        setAtbDiluicaoInfusao(e.value);\r\n    };\r\n\r\n    const onInteracaoAtbMedicamentoChange = (e: { value: string }) => {\r\n        setInteracaoAtbMedicamento(e.value);\r\n    };\r\n\r\n    const onHemodialiseChange = (e: { value: string }) => {\r\n        setHemodialise(e.value);\r\n    };\r\n\r\n    const onAtbOralChange = (e: { value: string }) => {\r\n        setAtbOral(e.value);\r\n    };\r\n\r\n    const onTrocaAtbChange = (e: { value: string }) => {\r\n        setTrocaAtb(e.value);\r\n    };\r\n\r\n    let options = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options2 = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Sim intermitente', value: 'SI' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options3 = [\r\n        { label: 'Sim', value: 'S' },\r\n        { label: 'Não aplica', value: 'NA' },\r\n        { label: 'Não', value: 'N' }\r\n    ]\r\n\r\n    let options4 = [\r\n        { name: 'Código', cod: 'E' },\r\n        { name: 'Princípio', cod: 'P' },\r\n    ];\r\n\r\n    const header2 = \r\n    <>\r\n        <p style={{textAlign:'left'}} className=\"p-clearfix d-inline\">Medicamentos</p>\r\n    </>;\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [\"domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n        monthNamesShort: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n            getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n            getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n            getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb\r\n        }\r\n\r\n        try{\r\n            const schema = Yup.object().shape({\r\n                getNroAvaliacao: Yup.number().required(),\r\n                getDataAvaliacao: Yup.date().required(),\r\n                getResultadoCulturas: Yup.string().nullable(),\r\n                getResCulturasAcao: Yup.string().nullable(),\r\n                getDoseCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getPosologiaCorreta: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDot: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAlertaDotDescricao: Yup.string().nullable(),\r\n                getDisfuncaoRenal: Yup.string().required(),\r\n                getHemodialise: Yup.string().oneOf([\"S\", \"SI\", \"N\"]).required(),\r\n                getAtbOral: Yup.string().oneOf([\"S\", \"NA\", \"N\"]).required(),\r\n                getAtbContraindicacao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getAlteracaoPrescricao: Yup.string().nullable().oneOf([null, \"S\", \"N\"]),\r\n                getAtbDiluicaoInfusao: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getInteracaoAtbMedicamento: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getTrocaAtb: Yup.string().oneOf([\"S\", \"N\"]).required(),\r\n                getNovoAtb: Yup.string().nullable()\r\n            });\r\n\r\n            await schema.validate(data, {\r\n                abortEarly: false,\r\n            });\r\n\r\n            createAssessmentService.Create(queryResponse, getNroAvaliacao, getDataAvaliacao, getResultadoCulturas, getResCulturasAcao,\r\n                getDoseCorreta, getPosologiaCorreta, getAlertaDot, getAlertaDotDescricao, getDisfuncaoRenal,\r\n                getHemodialise, getAtbOral, getAtbContraindicacao, getAlteracaoPrescricao, getAtbDiluicaoInfusao,\r\n                getInteracaoAtbMedicamento, getTrocaAtb, getNovoAtb)\r\n            .then((response) => {\r\n                if (response.CreatedAssessment) {\r\n                    showToast('success', 'Sucesso!', `Avaliação criada com sucesso!`);\r\n                    setTimeout(() => {\r\n                        history.push(`/medicalRecords/assessment/?seqProntuario=${queryResponse}`)\r\n                    }, 3500)\r\n                } else {\r\n                    if (response.error.sqlMessage) {\r\n                        if (response.error.sqlState == 23000) {\r\n                            console.log(response.error.sqlState)\r\n                            if (String(response.error.sqlMessage).includes(\"(`NovoAtb`)\")) {\r\n                                showToast('error', 'Erro!', `O campo Novo Atb está incorreto`);\r\n                            } else {\r\n                                showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                            }\r\n                        } else {\r\n                            showToast('error', 'Erro!', String(response.error.sqlMessage));\r\n                        }\r\n                    } else {\r\n                        showToast('error', 'Erro!', String(response.error));\r\n                    }\r\n                }\r\n            })\r\n        }catch(error){\r\n            if (error instanceof Yup.ValidationError)\r\n                showToast('error', 'Erro!', `Verifique se todos os campos foram preenchidos corretamente!`);\r\n        }\r\n    }\r\n\r\n    function showToast(messageType: string, messageTitle: string, messageContent: string) {\r\n        setToast(false)\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => {\r\n            setToast(false);\r\n        }, 4500)\r\n    }\r\n\r\n    const onOptionChange2 = (e: { value: any }) => {\r\n        setOptionState2(e.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading1(true);\r\n        setTimeout(() => {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                setTotalRecords2(data.length);\r\n                getMedicinesFunction(data);\r\n            });\r\n        }, 1000);\r\n    }, []);\r\n\r\n    function getMedicinesFunction(data?: any) {\r\n        setLoading(true);\r\n        setMedicines([]);\r\n\r\n        if (!data) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                console.log(data);\r\n\r\n                setDatasource(data.medicines);\r\n                setMedicines(datasource.slice(0, rows));\r\n                setLoading(false);\r\n                setLoading1(false);\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            console.log(data);\r\n\r\n            setDatasource(data.medicines);\r\n            setMedicines(data.medicines.slice(0, rows));\r\n            setLoading(false);\r\n            setLoading1(false);\r\n            return\r\n        }\r\n    }\r\n\r\n    const onPage2 = (event: any) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const startIndex2 = event.first2;\r\n            const endIndex2 = event.first2 + rows;\r\n\r\n            medicinesService.getMedicinesPaginate(endIndex2).then(data => {\r\n                getMedicinesFunction(data.medicines);\r\n            });\r\n\r\n            setFirst2(startIndex2);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function handleSearch2() {\r\n        if (!getOptionState2) {\r\n            showToast('error', 'Erro!', 'Selecione um filtro para buscar.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        if (!searchInput2) {\r\n            medicinesService.getMedicinesPaginate(10).then(data => {\r\n                getMedicinesFunction(data);\r\n                setLoading(false);\r\n                showToast('error', 'Erro!', 'Digite algum valor para pesquisar.');\r\n            });\r\n\r\n            return;\r\n        }\r\n        setMode2('S');\r\n        medicinesService.searchMedicineGlobal(searchInput2, getOptionState2.cod, first2 + rows).then(data => {\r\n            if (!data.medicines) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            getMedicinesFunction(data);\r\n        });\r\n    }\r\n\r\n    let newMedicines = true\r\n    function onMedicinesSelect (e: any) {\r\n        newMedicines = false;\r\n        setMedicinesChange(e.value)\r\n        MedicinesData = e.data;\r\n        \r\n        setNovoAtb(MedicinesData.EAN)\r\n        setTimeout(() => {\r\n            setDisplayDialog(false)\r\n        }, 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row m-5\">\r\n            <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                <p className=\"text-dark h3 text-center\">Cadastro de Avaliação</p>\r\n                <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <label htmlFor=\"NroAvaliacao\">Número da Avaliação</label>\r\n                                <InputText keyfilter=\"pint\" style={{ width: '100%' }} id=\"NroAvaliacao\" name=\"NroAvaliacao\"\r\n                                    defaultValue={getNroAvaliacao} onChange={(e) => setNroAvaliacao(Number((e.target as HTMLInputElement).value))}\r\n                                    placeholder=\"Digite o número da avaliação\" min=\"1\" max=\"999999999\" required autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <label htmlFor=\"DataAvaliacao\" className=\"mt\">Data da Avaliação</label>\r\n                                <Calendar id=\"DataInternacao\" style={{ width: '100%' }} value={getDataAvaliacao}\r\n                                    onChange={(e) => setDataAvaliacao(e.value)} locale={pt_br} dateFormat=\"dd/mm/yy\"\r\n                                    placeholder=\"Selecione a data da internação\" showButtonBar monthNavigator\r\n                                    showIcon showOnFocus={false} required />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"ResultadoCulturas\" className=\"mt-4\">Resultado das Culturas</label>\r\n                        <InputText style={{ width: '100%' }} id=\"ResultadoCulturas\" name=\"ResultadoCulturas\"\r\n                            defaultValue={getResultadoCulturas} onChange={(e) => { checkInput(1, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite o resultado das culturas\" />\r\n\r\n                        <label htmlFor=\"ResCulturasAcao\" className=\"mt-4\">Ação do Resultado das Culturas</label>\r\n                        <InputText style={{ width: '100%' }} id=\"ResCulturasAcao\" name=\"ResCulturasAcao\"\r\n                            defaultValue={getResCulturasAcao} onChange={(e) => { checkInput(2, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite a ação do resultado das culturas\" />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"DoseCorreta\">Dose Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getDoseCorreta} options={options}\r\n                                    onChange={onDoseCorretaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"PosologiaCorreta\">Posologia Correta</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getPosologiaCorreta} options={options}\r\n                                    onChange={onPosologiaCorretaChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AlertaDot\">Alerta Dot</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAlertaDot} options={options}\r\n                                    onChange={onAlertaDotChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <label htmlFor=\"AlertaDotDescricao\" className=\"mt-4\">Descrição do Alerta Dot</label>\r\n                        <InputText style={{ width: '100%' }} id=\"AlertaDotDescricao\" name=\"AlertaDotDescricao\"\r\n                            defaultValue={getAlertaDotDescricao} onChange={(e) => { checkInput(3, (e.target as HTMLInputElement).value) }}\r\n                            placeholder=\"Digite a descrição do alerta dot\" />\r\n\r\n                        <label htmlFor=\"DisfuncaoRenal\" className=\"mt-4\">Disfuncao Renal</label>\r\n                        <InputText style={{ width: '100%' }} id=\"DisfuncaoRenal\" name=\"DisfuncaoRenal\"\r\n                            defaultValue={getDisfuncaoRenal} onChange={(e) => setDisfuncaoRenal((e.target as HTMLInputElement).value)}\r\n                            placeholder=\"Digite a disfunção renal\" required />\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbContraindicacao\">Contraindicação de Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbContraindicacao} options={options}\r\n                                    onChange={onAtbContraindicacaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AlteracaoPrescricao\">Alteração da Prescrição</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAlteracaoPrescricao} options={options}\r\n                                    onChange={onAlteracaoPrescricaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbDiluicaoInfusao\">Diluição e/ou Infusão de Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbDiluicaoInfusao} options={options}\r\n                                    onChange={onAtbDiluicaoInfusaoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"InteracaoAtbMedicamento\">Interação Atb e Medicamento</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getInteracaoAtbMedicamento} options={options}\r\n                                    onChange={onInteracaoAtbMedicamentoChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row mt-4\">\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"Hemodialise\">Hemodialise</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getHemodialise} options={options2}\r\n                                    onChange={onHemodialiseChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col mr-4\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"AtbOral\">Atb Oral</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getAtbOral} options={options3}\r\n                                    onChange={onAtbOralChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <DropdownReact />\r\n                                <label htmlFor=\"TrocaAtb\">Troca do Atb</label>\r\n                                <br></br>\r\n                                <Dropdown className=\"\" value={getTrocaAtb} options={options}\r\n                                    onChange={onTrocaAtbChange} placeholder=\"Selecione uma opção\" style={{ width: '100%' }} required />\r\n\r\n                                <DropdownReact />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <label htmlFor=\"NovoAtb\" className=\"mt-4 ml-1\"  style={{ width: '100%' }}>Novo Atb</label>\r\n                            <InputText style={{ width: '82%' }} className=\"ml-1\" id=\"NovoAtb\" name=\"NovoAtb\"\r\n                                defaultValue={getNovoAtb} onChange={(e) => { checkInput(4, (e.target as HTMLInputElement).value) }}\r\n                                placeholder=\"Digite o novo Atb\" required />\r\n                            <Button variant=\"primary\" style={{ width: '16%' }} className=\"ml-1\" onClick={() => {setDisplayDialog(true);}}>Buscar</Button><br/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-info btn-primary mt-3 mb-3\">Cadastrar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <Dialog visible={displayDialog} style={{width: '75%'}} modal={true} onHide={() => {setDisplayDialog(false); setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null); setOpen2(false)}}>\r\n                <div className=\"form-row\">\r\n                    <Button variant=\"outline-secondary\" className=\"mb-2 ml-2\" onClick={() => setOpen2(!open2)} aria-controls=\"example-collapse-text\" aria-expanded={open2} style={{borderRadius: '0', height:'41.5px'}}>Buscar medicamento específico</Button>\r\n                    <Collapse in={open2} timeout={200}>\r\n                        <div className=\"ml-1\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText id=\"float-input\" type=\"search\" value={searchInput2} onChange={(e) => {setSearchInput2((e.target as HTMLInputElement).value)}} onKeyPress={(ev) => {if (ev.key === 'Enter') {handleSearch2(); ev.preventDefault();}}}  style={{minWidth:'4em', borderRadius: '0'}} size={30} />\r\n                                    {getOptionState2 === null\r\n                                        ? <label htmlFor=\"float-input\">Buscar</label>\r\n                                        : <label htmlFor=\"float-input\">Buscar por {getOptionState2.name}</label>\r\n                                    }\r\n                                </span>\r\n                                {searchInput2 === ''\r\n                                    ? <></>\r\n                                    :\r\n                                        <>\r\n                                            <Dropdown className=\"mx-1\" value={getOptionState2} options={options4} onChange={onOptionChange2} placeholder=\"Selecione um filtro\" optionLabel=\"name\" style={{width: '12em'}}/>\r\n                                            <Button tabIndex={2} variant=\"outline-danger\" className=\"p-0 mr-1\" style={{width: '17px', borderRadius: '0'}} onClick={() => {setSearchInput2(''); getMedicinesFunction(); setMode2('N'); setOptionState2(null)}}><AiOutlineClose size={15}/></Button>\r\n                                            <Button onClick={handleSearch2} style={{borderRadius: '0'}}><FiSearch size={15}/></Button>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n\r\n                <div className=\"ml-auto\"></div>\r\n\r\n                <DataTable value={medicines} paginator={true} rows={rows}\r\n                    header={header2} totalRecords={totalRecords2}\r\n                    emptyMessage=\"Nenhum resultado encontrado\" className=\"p-datatable-responsive-demo\"\r\n                    resizableColumns={true} loading={loading} first={first2} onPage={onPage2} lazy={true}\r\n                    selectionMode=\"single\" selection={selectedMedicines}\r\n                    onSelectionChange={e => setSelectedMedicines(e.value)} onRowSelect={(e) => {onMedicinesSelect(e);}}>\r\n                    <Column field=\"EAN\" header=\"Código\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                    <Column field=\"PrincipioAtivo\" header=\"Principio Ativo\" style={{ width: \"33.4%\", textAlign: \"center\" }} />\r\n                    <Column field=\"Apresentacao\" header=\"Apresentação\" style={{ width: \"33.3%\", textAlign: \"center\" }} />\r\n                </DataTable>\r\n            </Dialog>\r\n\r\n            {getToast &&\r\n                <ToastComponent messageType={getMessageType} messageTitle={getMessageTitle} messageContent={getMessageContent} />\r\n            }\r\n            {loading1 &&\r\n                <Loading/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssessmentForm","import api from \"../../services/api\";\r\nimport { IMicrobiology } from \"./MicrobiologyModel\";\r\n\r\ninterface IData{\r\n  page: number;\r\n  filter?: string;\r\n  filterValue?: string;\r\n}\r\n\r\nclass MicrobiologyService {\r\n  async getMicrobiologies(data:IData) {\r\n    let { page, filter, filterValue } = data;\r\n    if (filter && filterValue) {\r\n      return await api.get(\"/microbiology\", { params: { page, filter, filterValue } }).then(response => response.data);\r\n    } else {\r\n      return await api.get(\"/microbiology\", { params: { page } }).then(response => response.data);\r\n    }\r\n  }\r\n\r\n  async getById(id:number) {\r\n    return await api.get<IMicrobiology>(`/microbiology/${id}`).then(response => response.data);\r\n  }\r\n\r\n  async delete(id:number, email: any) {\r\n    return  await api.delete(`/microbiology/delete/${id}/${email}`).then(response => response.data);\r\n  }\r\n\r\n  async view(id: number) {\r\n    return await api.get(`/microbiology/view/${id}`).then(response => response.data);\r\n  }\r\n\r\n  async create(microbiologyData: IMicrobiology, email: any){\r\n    await api.post(\"/microbiology\", { microbiologyData, email }).then(response => response.data);\r\n  }\r\n\r\n  async update(microbiologyData: IMicrobiology, id:number, email: any) {\r\n    return await api.put(`/microbiology/update/${id}`, {microbiologyData, email }).then(response => response.data);\r\n  }\r\n}\r\n\r\nexport default new MicrobiologyService();\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport ToastComponent from \"../../../components/Toast\";\r\nimport MicrobiologyService from \"../MicrobiologyService\"\r\n\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n    id: number;\r\n    view: boolean;\r\n    setView: any;\r\n}\r\n\r\nconst MicrobiologyView: React.FC<Props> = ({ view, id, setView }) => {\r\n    const [IdMicrobiologia, setIdMicrobiologia] = useState<number>(0);\r\n    const [NroPaciente, setNroPaciente] = useState<number>(0);\r\n    const [NroProntuario, setNroProntuario] = useState<number>(0);\r\n    const [IdPaciente, setIdPaciente] = useState<number>(0);\r\n    const [IdProntuario, setIdProntuario] = useState<number>(0);\r\n    const [DataColeta, setDataColeta] = useState<string>(\"\");\r\n    const [NomePaciente, setNomePaciente] = useState<string>(\"\");\r\n    const [DataResultado, setDataResultado] = useState<string>(\"\");\r\n    const [SwabNasalObservacoes, setSwabNasalObservacoes] = useState<string>( \"\");\r\n    const [SwabRetalObservacoes, setSwabRetalObservacoes] = useState<string>( \"\" );\r\n    const [SangueObservacoes, setSangueObservacoes] = useState<string>(\"\");\r\n    const [UrinaObservacoes, setUrinaObservacoes] = useState<string>(\"\");\r\n    const [SecrecaoTraquealObservacoes,setSecrecaoTraquealObservacoes] = useState<string>();\r\n    const [OutrosObservacoes, setOutrosObservacoes] = useState<string>(\"\");\r\n    const [PerfilSensibilidade, setPerfilSensibilidade] = useState<string>(\"\");\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        function loadMicrobiology() {\r\n            MicrobiologyService.view(id)\r\n                .then(data => {\r\n                    const [microbiologyData] = data;\r\n                    setIdMicrobiologia(microbiologyData.IdMicrobiologia);\r\n                    setNroPaciente(microbiologyData.NroPaciente);\r\n                    setNroProntuario(microbiologyData.NroProntuario);\r\n                    setIdPaciente(microbiologyData.IdPaciente);\r\n                    setIdProntuario(microbiologyData.IdProntuario);\r\n                    setDataColeta(microbiologyData.DataColeta);\r\n                    setDataResultado(microbiologyData.DataResultado);\r\n                    setNomePaciente(microbiologyData.NomePaciente);\r\n                    setSwabNasalObservacoes(microbiologyData.SwabNasalObservacoes);\r\n                    setSwabRetalObservacoes(microbiologyData.SwabRetalObservacoes);\r\n                    setSangueObservacoes(microbiologyData.SangueObservacoes);\r\n                    setUrinaObservacoes(microbiologyData.UrinaObservacoes);\r\n                    setSecrecaoTraquealObservacoes(microbiologyData.SecrecaoTraquealObservacoes);\r\n                    setOutrosObservacoes(microbiologyData.OutrosObservacoes);\r\n                    setPerfilSensibilidade(microbiologyData.PerfilSensibilidade);\r\n                    setLoading(false);\r\n                })    \r\n               .catch(error => {\r\n                    setLoading(false);\r\n                    HandleToast(\"error\", \"Erro!\", \"Falha ao carregar os dados.\");\r\n                });\r\n        }\r\n        loadMicrobiology();\r\n    }, [id]);\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                visible={view}\r\n                style={{ width: \"50%\" }}\r\n                modal={true}\r\n                onHide={setView}\r\n                maximizable\r\n            >\r\n                <main>\r\n                    <h2 className=\"text-dark text-center mb-4\">\r\n                        Microbiologia de número {IdMicrobiologia}\r\n                    </h2>\r\n                    <section className=\"text-dark\">\r\n                        <h4>Dados do paciente</h4>\r\n                        <ul>\r\n                            <li> Nome: {NomePaciente}.</li>\r\n                            <li> Sequência: {IdPaciente}.</li>\r\n                            <li> Número: {NroPaciente}.</li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section>\r\n                        <h4>Dados do prontuário</h4>\r\n                        <ul>\r\n                            <li>Sequência: {IdProntuario}.</li>\r\n                            <li>Número: {NroProntuario}.</li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section>\r\n                            <h4>Datas</h4>\r\n                            <ul>\r\n                                <li>Data da coleta: {DataColeta}.</li>\r\n                                <li>Data do resultado: {DataResultado}.</li>\r\n                            </ul>\r\n                    </section>\r\n\r\n                    {SwabNasalObservacoes && (\r\n                        <section>\r\n                                <h4>Observações sobre a swab nasal</h4>\r\n                                <p>{SwabNasalObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SwabRetalObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre a swab retal</h4> \r\n                                <p>{SwabRetalObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SangueObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre o sangue</h4> \r\n                                <p>{SangueObservacoes}</p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {UrinaObservacoes && (\r\n                        <section>\r\n                                <h4>Observações sobre a urina</h4>\r\n                                <p>{UrinaObservacoes} </p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {SecrecaoTraquealObservacoes && (\r\n                        <section>\r\n                               <h4>Observações sobre a secreção traqueal</h4> \r\n                                <p>{SecrecaoTraquealObservacoes} </p>\r\n                        </section>\r\n                    )}\r\n\r\n                    {OutrosObservacoes && (\r\n                        <section>\r\n                                <h4>Outras observações</h4>\r\n                                <p>{OutrosObservacoes}</p>\r\n                        </section> \r\n                    )}\r\n\r\n                    {PerfilSensibilidade && (\r\n                        <section>\r\n                                <h4>Perfil de sensibilidade</h4> \r\n                                <p>{PerfilSensibilidade} </p>\r\n                        </section>\r\n                    )}\r\n                \r\n                </main>\r\n                {toast && (\r\n                    <ToastComponent\r\n                        messageType={getMessageType}\r\n                        messageTitle={getMessageTitle}\r\n                        messageContent={getMessageContent}\r\n                    />\r\n                )}\r\n            </Dialog>\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\nexport default MicrobiologyView;\r\n","import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Dropdown as DropdownReact } from \"react-bootstrap\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport ToastComponent from \"../../../components/Toast\";\r\n\r\nimport MicrobiologyService from \"../MicrobiologyService\";\r\nimport { IMicrobiology } from \"../MicrobiologyModel\";\r\n\r\nimport { useHistory} from 'react-router-dom';\r\n\r\ninterface Props {\r\n    id?: number;\r\n}\r\n\r\nconst MicrobiologyForm: React.FC<Props> = ({ id }) => {\r\n    const [title, setTitle] = useState<string>(\"Cadastro de microbiologia\");\r\n    const [buttonLabel, setButtonLabel] = useState<string>(\"Cadastrar\");\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [IdPaciente, setIdPaciente] = useState<number>(0);\r\n    const [IdProntuario, setIdProntuario] = useState<number>(0);\r\n    const [DataColeta, setDataColeta] = useState<any>();\r\n    const [DataResultado, setDataResultado] = useState<any>(null);\r\n    const [SwabNasal, setSwabNasal] = useState<string>(\"\");\r\n    const [SwabNasalObservacoes, setSwabNasalObservacoes] = useState<string>(\"\");\r\n    const [SwabRetal, setSwabRetal] = useState<string>(\"\");\r\n    const [SwabRetalObservacoes, setSwabRetalObservacoes] = useState<string>( \"\");\r\n    const [Sangue, setSangue] = useState<string>(\"\");\r\n    const [SangueObservacoes, setSangueObservacoes] = useState<string>(\"\");\r\n    const [Urina, setUrina] = useState<string>(\"\");\r\n    const [UrinaObservacoes, setUrinaObservacoes] = useState<string>(\"\");\r\n    const [SecrecaoTraqueal, setSecrecaoTraqueal] = useState<string>(\"\");\r\n    const [SecrecaoTraquealObservacoes, setSecrecaoTraquealObservacoes] = useState<string>(\"\");\r\n    const [Outros, setOutros] = useState<string>(\"\");\r\n    const [OutrosObservacoes, setOutrosObservacoes] = useState<string>(\"\");\r\n    const [PerfilSensibilidade, setPerfilSensibilidade] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const [viewNasal, setViewNasal] = useState<boolean>(false);\r\n    const [viewRetal, setViewRetal] = useState<boolean>(false);\r\n    const [viewSangue, setViewSangue] = useState<boolean>(false);\r\n    const [viewUrina, setViewUrina] = useState<boolean>(false);\r\n    const [viewSec, setViewSec] = useState<boolean>(false);\r\n    const [viewOutros, setViewOutros] = useState<boolean>(false);\r\n\r\n\r\n    const pt_br = {\r\n        firstDayOfWeek: 1,\r\n        dayNames: [ \"domingo\",\"Segunda\",\"Terça\",\"Quarta\",\"Quinta\",\"Sexta\",\"Sábado\",],\r\n        dayNamesShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        dayNamesMin: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\r\n        // dayNamesMin: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n        monthNames: [\r\n            \"Janeiro\",\r\n            \"Fevereiro\",\r\n            \"Março\",\r\n            \"Abril\",\r\n            \"Maio\",\r\n            \"Junho\",\r\n            \"Julho\",\r\n            \"Agosto\",\r\n            \"Setembro\",\r\n            \"Outubro\",\r\n            \"Novembro\",\r\n            \"Dezembro\",\r\n        ],\r\n        monthNamesShort: [\r\n            \"Jan\",\r\n            \"Fev\",\r\n            \"Mar\",\r\n            \"Abr\",\r\n            \"Mai\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Ago\",\r\n            \"Set\",\r\n            \"Out\",\r\n            \"Nov\",\r\n            \"Dez\",\r\n        ],\r\n        today: \"Hoje\",\r\n        clear: \"Limpar\",\r\n    };\r\n\r\n    const options = [\r\n        { label: \"Sim\", value: \"S\" },\r\n        { label: \"Não\", value: \"N\" },\r\n    ];\r\n\r\n    const history = useHistory();\r\n    const email = localStorage.getItem('@gafio-user/email');\r\n\r\n    useEffect(() => {\r\n        // Formatação de dados\r\n        function formatDate(date: any) {\r\n            const newDate = date.split(\"/\");\r\n            const formatedDate = new Date(\r\n                newDate[2],\r\n                newDate[1] - 1,\r\n                newDate[0]\r\n            );\r\n            return formatedDate;\r\n        }\r\n\r\n       //Carrega os dados \r\n       function loadMicrobiologyInfo(id:number) {\r\n            MicrobiologyService.getById(id)\r\n                .then(microbiology => {\r\n                    setIdPaciente(Number(microbiology.IdPaciente));\r\n                    setIdProntuario(microbiology.IdProntuario);\r\n\r\n                    const dataColeta = formatDate(microbiology.DataColeta);\r\n                    setDataColeta(dataColeta);\r\n\r\n                    if (microbiology.DataResultado) {\r\n                           const dataResultado = formatDate(microbiology.DataResultado);\r\n                          setDataResultado(dataResultado);\r\n                    }\r\n\r\n                    setSwabNasal(microbiology.SwabNasal);\r\n                    if (microbiology.SwabNasalObservacoes) {\r\n                        setSwabNasalObservacoes(microbiology.SwabNasalObservacoes);\r\n                        setViewNasal(true);\r\n                    }\r\n                    \r\n                    setSwabRetal(microbiology.SwabRetal);\r\n                    if (microbiology.SwabRetalObservacoes){\r\n                        setSwabRetalObservacoes(microbiology.SwabRetalObservacoes);\r\n                        setViewRetal(true);\r\n                    }\r\n\r\n                    setSangue(microbiology.Sangue);\r\n                    if (microbiology.SangueObservacoes){\r\n                        setSangueObservacoes(microbiology.SangueObservacoes);\r\n                        setViewSangue(true);\r\n                    }\r\n\r\n                    setUrina(microbiology.Urina);\r\n                    if (microbiology.UrinaObservacoes) {\r\n                         setUrinaObservacoes(microbiology.UrinaObservacoes);\r\n                         setViewUrina(true);                       \r\n                    }\r\n\r\n                    setSecrecaoTraqueal(microbiology.SecrecaoTraqueal);\r\n                    if (microbiology.SecrecaoTraquealObservacoes){\r\n                        setSecrecaoTraquealObservacoes(microbiology.SecrecaoTraquealObservacoes);\r\n                        setViewSec(true);\r\n                    }\r\n\r\n                    setOutros(microbiology.Outros);\r\n                    if (microbiology.OutrosObservacoes) {\r\n                        setOutrosObservacoes(microbiology.OutrosObservacoes);\r\n                        setViewOutros(true);\r\n                    }\r\n\r\n                    if (microbiology.PerfilSensibilidade)\r\n                        setPerfilSensibilidade(microbiology.PerfilSensibilidade);\r\n\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoading(false);\r\n                    HandleToast(\"error\", \"Erro!\", \"Falha ao carregar os dados.\");\r\n                });\r\n        }\r\n        if (id) {\r\n            setLoading(true);\r\n            setButtonLabel(\"Atualizar\");\r\n            setTitle(\"Edição de microbiologia\");\r\n            loadMicrobiologyInfo(id);\r\n        }\r\n    }, [id]);\r\n\r\n    //Envio de formulário\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault();\r\n        const data: IMicrobiology = {\r\n            IdPaciente,\r\n            IdProntuario,\r\n            DataColeta,\r\n            DataResultado,\r\n            SwabNasal,\r\n            SwabNasalObservacoes,\r\n            SwabRetal,\r\n            SwabRetalObservacoes,\r\n            Sangue,\r\n            SangueObservacoes,\r\n            Urina,\r\n            UrinaObservacoes,\r\n            SecrecaoTraqueal,\r\n            SecrecaoTraquealObservacoes,\r\n            Outros,\r\n            OutrosObservacoes,\r\n            PerfilSensibilidade,\r\n        };\r\n        try {\r\n            setLoading(true);\r\n            //validação dos dados\r\n            const schema = Yup.object().shape({\r\n                IdPaciente: Yup.number().required(),\r\n                IdProntuario: Yup.number().required(),\r\n                DataColeta: Yup.date().required(),\r\n                DataResultado: Yup.date().nullable(),\r\n                SwabNasal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SwabNasalObservacoes: Yup.string().max(250),\r\n                SwabRetal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SwabRetalObservacoes: Yup.string().max(250),\r\n                Sangue: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SangueObservacoes: Yup.string().max(250),\r\n                Urina: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                UrinaObservacoes: Yup.string().max(250),\r\n                SecrecaoTraqueal: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                SecrecaoTraquealObservacoes: Yup.string().max(250),\r\n                Outros: Yup.string().nullable().oneOf([null, \"S\", \"N\"]).required(),\r\n                OutrosObservacoes: Yup.string().max(250),\r\n                PerfilSensibilidade: Yup.string(),\r\n            });\r\n            \r\n            await schema.validate(data, {abortEarly: false, });\r\n            \r\n            if (id) {\r\n                MicrobiologyService.update(data, id, email).then(() => {\r\n                    HandleToast(\"success\", \"Sucesso!\", \"Microbiologia atualizada com sucesso.\");\r\n                    setLoading(false);\r\n                }).catch(err => {\r\n                    const message = err.response.data.error;\r\n                    HandleToast(\"error\", \"Erro!\", `${message}`)\r\n                    setLoading(false);\r\n                });\r\n            } else {\r\n                MicrobiologyService.create(data, email).then(() => {\r\n                    HandleToast(\"success\", \"Sucesso!\", \"Microbiologia criada com sucesso.\");\r\n                    setLoading(false);\r\n                    setTimeout(() => {\r\n                        history.push(\"/microbiology\");\r\n                    }, 1500);\r\n                }).catch(err => {\r\n                    const message = err.response.data.error;\r\n                    HandleToast(\"error\", \"Erro!\", `${message}`)\r\n                    setLoading(false);\r\n                });\r\n            }\r\n        } catch (err) {\r\n            setLoading(false);\r\n            if (err instanceof Yup.ValidationError) {\r\n                HandleToast(\"error\", \"Erro!\", \"Verifique se todos os campos foram preenchidos corretamente!\");\r\n            }\r\n            else return;\r\n        }\r\n    }\r\n\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() => setToast(false), 4500)\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"row m-5\">\r\n                    <div className=\"card shadow-lg p-3 col-sm-6 offset-md-3 border\">\r\n                        <p className=\"text-dark h3 text-center\">{title}</p>\r\n                        <form className=\"was-validated\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label htmlFor=\"IdPaciente\">\r\n                                            Número do Paciente\r\n                                        </label>\r\n                                        <InputNumber\r\n                                            id=\"IdPaciente\"\r\n                                            name=\"IdPaciente\"\r\n                                            value={IdPaciente}\r\n                                            min={1}\r\n                                            max={9999999999}\r\n                                            onChange={(e) =>setIdPaciente(Number(e.value)) }\r\n                                            showButtons\r\n                                            style={{ width: \"100%\" }}\r\n                                            placeholder=\"Digite o número do paciente\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"IdProntuario\">\r\n                                            Número do Prontuário\r\n                                        </label>\r\n                                        <InputNumber\r\n                                            id=\"IdProntuario\"\r\n                                            name=\"IdProntuario\"\r\n                                            value={IdProntuario}\r\n                                            min={1}\r\n                                            max={9999999999}\r\n                                            onChange={(e) =>setIdProntuario(Number(e.value))}\r\n                                            showButtons\r\n                                            style={{ width: \"100%\" }}\r\n                                            placeholder=\"Digite o número do prontuário\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-4\">\r\n                                        <label\r\n                                            htmlFor=\"DataColeta\"\r\n                                            className=\"mt-2\"\r\n                                        >\r\n                                            Data da Coleta\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"DataColeta\"\r\n                                            name=\"DataColeta\"\r\n                                            value={DataColeta} \r\n                                            onChange={(e) =>setDataColeta(e.value)}\r\n                                            style={{ width: \"100%\" }}\r\n                                            locale={pt_br}\r\n                                            dateFormat=\"dd/mm/yy\"\r\n                                            placeholder=\"Selecione a data de coleta\"\r\n                                            showButtonBar\r\n                                            monthNavigator\r\n                                            showIcon\r\n                                            showOnFocus={false}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label  htmlFor=\"DataResultado\"  className=\"mt-2\">\r\n                                            Data do resultado\r\n                                        </label>\r\n                                        <Calendar\r\n                                            id=\"DataResultado\"\r\n                                            name=\"DataResultado\"\r\n                                            value={DataResultado}onChange={(e) =>setDataResultado(e.value)}\r\n                                            style={{ width: \"100%\" }}\r\n                                            locale={pt_br}\r\n                                            dateFormat=\"dd/mm/yy\"\r\n                                            placeholder=\"Selecione a data do resultado\"\r\n                                            showButtonBar\r\n                                            monthNavigator\r\n                                            showOnFocus={false}\r\n                                            showIcon\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                              <div className=\"form-row mt-4\">\r\n                                        <div className=\"col mr-2\">\r\n                                            <DropdownReact />\r\n                                           <label>Swab Nasal</label>\r\n                                            <br></br>\r\n                                            <Dropdown\r\n                                                options={options}\r\n                                                placeholder=\"Selecione uma opção\"\r\n                                                value={SwabNasal}\r\n                                                onChange={(e: { value: string }) => {\r\n                                                    if (e.value === \"S\") setViewNasal(true);\r\n                                                    else {\r\n                                                        if (SwabNasalObservacoes) setSwabNasalObservacoes(\"\");\r\n                                                        setViewNasal(false)\r\n                                                    };\r\n                                                    setSwabNasal(e.value);\r\n                                               }}\r\n                                              style={{ width: \"100%\" }}\r\n                                            />\r\n                                            <DropdownReact />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col\">\r\n                                            <DropdownReact />\r\n                                           <label>Swab Retal</label>\r\n                                            <br></br>\r\n                                            <Dropdown\r\n                                                options={options}\r\n                                                placeholder=\"Selecione uma opção\"\r\n                                                value={SwabRetal}\r\n                                                onChange={(e: { value: string }) => {\r\n                                                    if (e.value === \"S\") setViewRetal(true);\r\n                                                    else {\r\n                                                        if (SwabRetalObservacoes) setSwabRetalObservacoes(\"\");\r\n                                                        setViewRetal(false);\r\n                                                    }\r\n                                                    setSwabRetal(e.value);\r\n                                                }}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                            <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-2\">\r\n                                        <DropdownReact />\r\n                                        <label>Sangue</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Sangue}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewSangue(true);\r\n                                                else {\r\n                                                    if (SangueObservacoes) setSangueObservacoes(\"\");\r\n                                                    setViewSangue(false)\r\n                                                };\r\n                                                setSangue(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact />\r\n                                        <label>Urina</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Urina}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewUrina(true);\r\n                                                else {\r\n                                                    if (UrinaObservacoes) setUrinaObservacoes(\"\");\r\n                                                    setViewUrina(false)\r\n                                                };\r\n                                                setUrina(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                \r\n                                <div className=\"form-row mt-4\">\r\n                                    <div className=\"col mr-2\">\r\n                                        <DropdownReact />\r\n                                        <label>Secreção Traqueal</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={SecrecaoTraqueal}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") setViewSec(true);\r\n                                                else {\r\n                                                    if (SecrecaoTraquealObservacoes) setSecrecaoTraquealObservacoes(\"\");\r\n                                                    setViewSec(false);\r\n                                                }\r\n                                                setSecrecaoTraqueal(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <DropdownReact />\r\n                                        <label>Outros</label>\r\n                                        <br></br>\r\n                                        <Dropdown\r\n                                            options={options}\r\n                                            placeholder=\"Selecione uma opção\"\r\n                                            value={Outros}\r\n                                            onChange={(e: { value: string }) => {\r\n                                                if (e.value === \"S\") {\r\n                                                    setViewOutros(true);\r\n                                                }\r\n                                                else {\r\n                                                    if (OutrosObservacoes) setOutrosObservacoes(\"\");\r\n                                                    setViewOutros(false)\r\n                                                };\r\n                                                setOutros(e.value);\r\n                                            }}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                        <DropdownReact />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {viewNasal && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"SwabNasal\">Observações da Swab Nasal</label>\r\n                                        <InputTextarea\r\n                                                   maxLength={250}\r\n                                                   autoResize\r\n                                                    keyfilter=\"alpha\"\r\n                                                    style={{ width: \"100%\" }}\r\n                                                    id=\"SwabNasal\"\r\n                                                    name=\"SwabNasal\"\r\n                                                    placeholder=\"Digite a observação...\"\r\n                                                    defaultValue={SwabNasalObservacoes}\r\n                                                    onChange={(e: any) => setSwabNasalObservacoes((e.target as HTMLInputElement).value)}\r\n                                                    autoFocus\r\n                                                    required\r\n                                                />\r\n                                </div>\r\n                                )}\r\n\r\n                                {viewRetal && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"SwabRetal\">Observações da Swab Retal</label>\r\n                                        <InputTextarea\r\n                                            autoResize\r\n                                            maxLength={250}\r\n                                            keyfilter=\"alpha\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"SwabRetal\"\r\n                                            name=\"SwabRetal\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SwabRetalObservacoes}\r\n                                            onChange={(e: any) => setSwabRetalObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewSangue && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Sangue\">Observações do Sangue</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            keyfilter=\"alpha\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Sangue\"\r\n                                            name=\"Sangue\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SangueObservacoes}\r\n                                            onChange={(e: any) => setSangueObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewUrina && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Urina\">Observações da Urina</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            keyfilter=\"alpha\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Urina\"\r\n                                            name=\"Urina\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={UrinaObservacoes}\r\n                                            onChange={(e: any) => setUrinaObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {viewSec && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Secrecao\">Observações da Secreção Traqueal</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            keyfilter=\"alpha\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Secrecao\"\r\n                                            name=\"Secrecao\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={SecrecaoTraquealObservacoes}\r\n                                            onChange={(e: any) => {\r\n                                                setSecrecaoTraquealObservacoes((e.target as HTMLInputElement).value);\r\n                                            }}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {viewOutros && (\r\n                                    < div className=\"mt-4\">\r\n                                        <label htmlFor=\"Outros\">Observações</label>\r\n                                        <InputTextarea\r\n                                            maxLength={250}\r\n                                            autoResize\r\n                                            keyfilter=\"alpha\"\r\n                                            style={{ width: \"100%\" }}\r\n                                            id=\"Outros\"\r\n                                            name=\"Outros\"\r\n                                            placeholder=\"Digite a observação...\"\r\n                                            defaultValue={OutrosObservacoes}\r\n                                            onChange={(e: any) => setOutrosObservacoes((e.target as HTMLInputElement).value)}\r\n                                            autoFocus\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"mt-4\">\r\n                                    <label\r\n                                        htmlFor=\"PerfilSensibilidade\"\r\n                                    >\r\n                                        Perfil Sensibilidade\r\n                                </label>\r\n                                    <InputTextarea\r\n                                        maxLength={250}\r\n                                        autoResize\r\n                                        id=\"PerfilSensibilidade\"\r\n                                        name=\"PerfilSensibilidade\"\r\n                                        defaultValue={PerfilSensibilidade}\r\n                                        onChange={(e) => setPerfilSensibilidade((e.target as HTMLInputElement).value)}\r\n                                        keyfilter=\"alpha\"\r\n                                        style={{ width: \"100%\" }}\r\n                                        placeholder=\"Digite o perfil de sensibilidade\"\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>       \r\n                            <button type=\"submit\" className=\"btn btn-info btn-primary mt-3\" >\r\n                                {buttonLabel}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )}\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MicrobiologyForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ToastComponent from \"../../components/Toast\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport View from \"./MicrobiologyView\";\r\nimport Form from \"./MicrobiologyForm\";\r\nimport {IMicrobiology } from \"./MicrobiologyModel\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport MicrobiologyService from \"./MicrobiologyService\"\r\n\r\nconst Microbiology = () => {\r\n    const [microbiologies, setMicrobiologies] = useState<IMicrobiology[]>([]);\r\n    const [records, setRecords] = useState<number>(0);\r\n    const [first, setFirst] = useState<number>(0);\r\n    const [id, setId] = useState<number>(0);\r\n    const [view, setView] = useState<boolean>(false);\r\n    const [update, setUpdate] = useState<boolean>(false);\r\n    const [deleteDialog, setDeleteDialog] = useState<boolean>(false);\r\n    const [displayDialog, setDisplayDialog] = useState<boolean>(false);\r\n    const [selectedMicrobiology, setselectedMicrobiology] = useState<any>(null);\r\n    const [toast, setToast] = useState<boolean>(false);\r\n    const [getMessageType, setMessageType] = useState<string>(\"\");\r\n    const [getMessageTitle, setMessageTitle] = useState<string>(\"\");\r\n    const [getMessageContent, setMessageContent] = useState<string>(\"\");\r\n    const [tableloading, setTableLoading] = useState<boolean>(true);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [optionState, setOptionState] = useState<any>(null);\r\n    const [filter, setFilter] = useState<string>(\"\");\r\n    const [filterValue, setFilterValue] = useState<any>(\"\");\r\n    const [successfulSearch, setSuccessfulSearch] = useState<boolean>(false);\r\n\r\n    const rows = 10;\r\n\r\n    const dropdownOptions = [\r\n        { name: \"Id\", filter: \"id\" },\r\n        { name: \"Paciente\", filter: \"paciente\" },\r\n        { name: \"Prontuário\", filter: \"prontuario\" },\r\n        { name: \"Data da coleta\", filter: \"dataColeta\" },\r\n        { name: \"Data do Resultado\", filter: \"dataResultado\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        //carrega os dados da tabela e a quantidade total de registros\r\n       function loadMicrobiologies() {\r\n           MicrobiologyService.getMicrobiologies({ page: 1 })\r\n               .then(data => {\r\n                   const { results } = data;\r\n                   const { count } = data.count;\r\n                   const microbiologiesData = results.map(handleFormat);\r\n                   setRecords(Number(count));\r\n                   setMicrobiologies(microbiologiesData);\r\n                   setLoading(false);\r\n                   setTableLoading(false);\r\n               })\r\n               .catch(error => {\r\n                   setLoading(false);\r\n                   setTableLoading(false);\r\n               });\r\n        }\r\n\r\n        loadMicrobiologies();\r\n    }, []);\r\n\r\n    //formatação de dados\r\n    function handleFormat(microbiology: IMicrobiology) {  \r\n        const verifica = (item: string) => {\r\n            if (item === \"S\") return \"Sim\";\r\n            else return \"Não\";\r\n        }\r\n\r\n        let SwabNasal, SwabRetal, Sangue, Urina, SecrecaoTraqueal, Outros;\r\n        SwabNasal = verifica(microbiology.SwabNasal);\r\n        SwabRetal = verifica(microbiology.SwabRetal);\r\n        Sangue = verifica(microbiology.Sangue);\r\n        Urina = verifica(microbiology.Urina);\r\n        SecrecaoTraqueal = verifica(microbiology.SecrecaoTraqueal);\r\n        Outros = verifica(microbiology.Outros);\r\n\r\n        return {\r\n            ...microbiology,\r\n            SwabNasal,\r\n            SwabRetal,\r\n            Sangue,\r\n            Urina,\r\n            SecrecaoTraqueal,\r\n            Outros\r\n        }\r\n    }\r\n\r\n    // Toast\r\n    function HandleToast(\r\n        messageType: string,\r\n        messageTitle: string,\r\n        messageContent: string\r\n    ) {\r\n        setToast(false);\r\n        setMessageType(messageType);\r\n        setMessageTitle(messageTitle);\r\n        setMessageContent(messageContent);\r\n        setToast(true);\r\n        setTimeout(() =>  setToast(false), 4500);\r\n    }\r\n\r\n    //Busca os registros por página\r\n    function handlePage(event: any) {\r\n         setTableLoading(true);\r\n            const index = event.first;\r\n            const page = Number(index) / 10 + 1;\r\n            let response;\r\n            if (filter && successfulSearch) {\r\n                MicrobiologyService.getMicrobiologies({ page, filter, filterValue }).then(data => {\r\n                    response = data;\r\n                    const { results } = response;\r\n                    const microbiologiesData = results.map(handleFormat);\r\n                    setMicrobiologies(microbiologiesData);\r\n                    setFirst(index);\r\n                    setTableLoading(false);\r\n                }).catch(err => setTableLoading(false));\r\n            } else {\r\n                MicrobiologyService.getMicrobiologies({page}).then(data => {\r\n                    response = data;\r\n                    const { results } = response;\r\n                    const microbiologiesData = results.map(handleFormat);\r\n                    setMicrobiologies(microbiologiesData);\r\n                    setFirst(index);\r\n                    setTableLoading(false);\r\n                }).catch(err => setTableLoading(false));\r\n            } \r\n    }\r\n\r\n    function onMicrobiologySelect(e: any) {\r\n        const microbiologyData = e.data;\r\n        const { IdMicrobiologia } = microbiologyData;\r\n        setId(IdMicrobiologia);\r\n        setDisplayDialog(true);\r\n    }\r\n\r\n    //Atualiza os dados da tabela\r\n    function handleTableUpdate() {\r\n        setTableLoading(true);\r\n        setFirst(1);\r\n        MicrobiologyService.getMicrobiologies({ page: 1 })\r\n            .then(data => {\r\n                const { results } = data;\r\n                const { count } = data.count;\r\n                setRecords(Number(count));\r\n                const microbiologiesData = results.map(handleFormat);\r\n                setMicrobiologies(microbiologiesData);\r\n                setTableLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setTableLoading(false);\r\n                HandleToast(\"error\", \"Erro!\", \"Falha ao atualizar os registros.\");\r\n            });\r\n    }\r\n\r\n    //Deleta microbiologia\r\n    function handleDelete() {\r\n        const email = localStorage.getItem('@gafio-user/email');\r\n        MicrobiologyService.delete(id, email)\r\n            .then(() => {\r\n                setDeleteDialog(false);\r\n                HandleToast(\"success\", \"Sucesso!\", \"A microbiologia foi excluída.\");\r\n                handleTableUpdate();\r\n            })\r\n            .catch(error => {\r\n                setDeleteDialog(false);\r\n                HandleToast(\"error\", \"Erro!\", \"Falha ao excluir a microbiologia.\");\r\n            });\r\n    }\r\n\r\n    function handleUpdate() {\r\n        setUpdate(false);\r\n        handleTableUpdate();\r\n    }\r\n\r\n    //Para filtragem\r\n    function handleSearch() {\r\n        if (!optionState) {\r\n            HandleToast(\"error\", \"Erro!\", \"Selecione um filtro para buscar.\");\r\n            return;\r\n        }\r\n        if (!filterValue) {\r\n            HandleToast(\"error\", \"Erro!\", \"Digite algum valor para pesquisar.\");\r\n            return;\r\n        }\r\n        setFirst(1);\r\n        setLoading(true);\r\n        setTableLoading(true);\r\n        MicrobiologyService.getMicrobiologies({ page: 1, filter, filterValue })\r\n            .then(data => {\r\n                const { results } = data;\r\n                const { count } = data.count;\r\n                setRecords(Number(count));\r\n                const microbiologiesData = results.map(handleFormat);\r\n                setMicrobiologies(microbiologiesData);\r\n                setLoading(false);\r\n                setTableLoading(false);\r\n                let res = \"resultado\";\r\n                if (count > 1) res += \"s\";\r\n                HandleToast(\"info\", \"Resultado Encontrado!\", `Foi encontrado ${count} ${res}.`);\r\n                setSuccessfulSearch(true);\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                setTableLoading(false);\r\n                const message = err.response.data.error;\r\n                HandleToast(\"error\", \"Sem resultado!\", `${message}`);\r\n            });\r\n    }\r\n\r\n    function handleReset() {\r\n        setFilterValue(\"\");\r\n        setOptionState(null);\r\n        setSuccessfulSearch(false);\r\n        handleTableUpdate();\r\n    }\r\n\r\n    function onOptionChange(e: { value: any }) {\r\n        setOptionState(e.value);\r\n        setFilter(e.value.filter);\r\n    }\r\n\r\n    // Para as colunas da tabela\r\n    const IdBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Id</span>\r\n                <span>{rowData.IdMicrobiologia}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const PacienteBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Paciente</span>\r\n                <span>{rowData.IdPaciente}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const ProntuarioBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Prontuário</span>\r\n                <span>{rowData.IdProntuario}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const DataColetaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Coleta</span>\r\n                <span>{rowData.DataColeta}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const DataResultadoBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Resultado</span>\r\n                <span>{rowData.DataResultado}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SwabNasalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Swab Nasal</span>\r\n                <span>{rowData.SwabNasal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SwabRetalBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Swab Retal</span>\r\n                <span>{rowData.SwabRetal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SangueBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Sangue</span>\r\n                <span>{rowData.Sangue}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const UrinaBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Urina</span>\r\n                <span>{rowData.Urina}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const SecrecaoTraquealBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Secrecao Traqueal</span>\r\n                <span>{rowData.SecrecaoTraqueal}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const OutrosBodyTemplate = (rowData: any) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">Outros</span>\r\n                <span>{rowData.Outros}</span>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-5 px-5\">\r\n                <Link to=\"/microbiology/create\">\r\n                    <Button\r\n                        variant=\"outline-dark\"\r\n                        className=\"mb-2\"\r\n                        style={{ borderRadius: \"0\", height: \"41.5px\" }}\r\n                    >\r\n                        Cadastrar Microbiologia\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    variant=\"outline-secondary\"\r\n                    className=\"mb-2 ml-2\"\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                    onClick={() => setOpen(!open)}\r\n                    style={{ borderRadius: \"0\" }}\r\n                >\r\n                    Buscar por microbiologia\r\n                </Button>\r\n\r\n                <Collapse in={open} timeout={200}>\r\n                    <div className=\"ml-2\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"float-input\"\r\n                                    type=\"search\"\r\n                                    value={filterValue}\r\n                                    onChange={(e) => {  setFilterValue( (e.target as HTMLInputElement).value);\r\n                                        if ((e.target as HTMLInputElement).value === \"\" &&  successfulSearch ) handleReset();\r\n                                    }}\r\n                                    onKeyPress={(ev) => {\r\n                                        if (ev.key === \"Enter\") {\r\n                                            handleSearch();\r\n                                            ev.preventDefault();\r\n                                        }\r\n                                    }}\r\n                                    style={{minWidth: \"4em\",borderRadius: \"0\", }}\r\n                                    size={30}\r\n                                />\r\n                                {optionState === null ? (\r\n                                    <label htmlFor=\"float-input\">Buscar</label>\r\n                                ) : (\r\n                                    <label htmlFor=\"float-input\">\r\n                                        Buscar por {optionState.name}\r\n                                    </label>\r\n                                )}\r\n                            </span>\r\n                            {filterValue && (\r\n                                <>\r\n                                    <Dropdown\r\n                                        className=\"mx-1\"\r\n                                        value={optionState}\r\n                                        options={dropdownOptions}\r\n                                        onChange={onOptionChange}\r\n                                        placeholder=\"Selecione um filtro\"\r\n                                        optionLabel=\"name\"\r\n                                        style={{ width: \"12em\" }}\r\n                                    />\r\n                                    <Button\r\n                                        tabIndex={2}\r\n                                        variant=\"outline-danger\"\r\n                                        className=\"p-0 mr-1\"\r\n                                        style={{ width: \"17px\", borderRadius: \"0\", }}\r\n                                        onClick={() => {\r\n                                            if (successfulSearch) handleReset();\r\n                                            else {\r\n                                                setFilterValue(\"\");\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <AiOutlineClose size={15} />\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={handleSearch}\r\n                                        style={{ borderRadius: \"0\", }}\r\n                                    >\r\n                                        <FiSearch size={15} />\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <DataTable\r\n                        value={microbiologies}\r\n                        loading={tableloading}\r\n                        paginator={true}\r\n                        rows={rows}\r\n                        totalRecords={records}\r\n                        first={first}\r\n                        onPage={handlePage}\r\n                        header=\"Microbiologias\"\r\n                        emptyMessage=\"Nenhum resultado encontrado\"\r\n                        lazy={true}\r\n                        selectionMode=\"single\"\r\n                        className=\"p-datatable-responsive-demo\"\r\n                        resizableColumns={true}\r\n                        selection={selectedMicrobiology}\r\n                        onSelectionChange={(e) => setselectedMicrobiology(e.value) }\r\n                        onRowSelect={(e) => onMicrobiologySelect(e)}\r\n                    >\r\n                        <Column\r\n                            field=\"IdMicrobiologia\"\r\n                            header=\"Id\"\r\n                            body={IdBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"IdPaciente\"\r\n                            header=\"Paciente\"\r\n                            body={PacienteBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"IdProntuario\"\r\n                            header=\"Prontuário\"\r\n                            body={ProntuarioBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"DataColeta\"\r\n                            header=\"Coleta\"\r\n                            body={DataColetaBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"DataResultado\"\r\n                            header=\"Resultado\"\r\n                            body={DataResultadoBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SwabNasal\"\r\n                            header=\"Swab Nasal\"\r\n                            body={SwabNasalBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SwabRetal\"\r\n                            header=\"Swab Retal\"\r\n                            body={SwabRetalBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Sangue\"\r\n                            header=\"Sangue\"\r\n                            body={SangueBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Urina\"\r\n                            header=\"Urina\"\r\n                            body={UrinaBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"SecrecaoTraqueal\"\r\n                            header=\"Secreção Traqueal\"\r\n                            body={SecrecaoTraquealBodyTemplate}\r\n                        />\r\n                        <Column\r\n                            field=\"Outros\"\r\n                            header=\"Outros\"\r\n                            body={OutrosBodyTemplate}\r\n                        />\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Dialog\r\n                    visible={displayDialog}\r\n                    style={{ width: \"55%\" }}\r\n                    header=\"Ações\"\r\n                    modal={true}\r\n                    onHide={() => setDisplayDialog(false)}\r\n                >\r\n                    <div className=\"form-row text-center\">\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"info\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setView(true);\r\n                                }}\r\n                            >\r\n                                Visualizar microbiologia\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setUpdate(true);\r\n                                }}\r\n                            >\r\n                                Atualizar microbiologia\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                className=\"mt-2 mb-2 p-3\"\r\n                                onClick={() => {\r\n                                    setDisplayDialog(false);\r\n                                    setDeleteDialog(true);\r\n                                }}\r\n                            >\r\n                                Excluir microbiologia\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    visible={deleteDialog}\r\n                    style={{ width: \"50%\" }}\r\n                    modal={true}\r\n                    header=\"Exclusão de microbiologia\"\r\n                    onHide={() => setDeleteDialog(false)}\r\n                >\r\n                    <p className=\"text-dark h5 mt-2\">\r\n                        Deseja realmente exluir esta microbiologia?\r\n                    </p>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"outline-danger\"\r\n                                onClick={() => handleDelete()}\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Sim\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Button\r\n                                variant=\"outline-info\"\r\n                                onClick={() => setDeleteDialog(false)}\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                Não\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    visible={update}\r\n                    style={{ width: \"80%\" }}\r\n                    modal={true}\r\n                    maximizable\r\n                    maximized\r\n                    onHide={() => handleUpdate()}\r\n                >\r\n                    <Form id={id} />\r\n                </Dialog>\r\n\r\n                {view && (\r\n                    <View view={view} id={id} setView={() => setView(false)} />\r\n                )}\r\n            </div>\r\n            {toast && (\r\n                <ToastComponent\r\n                    messageType={getMessageType}\r\n                    messageTitle={getMessageTitle}\r\n                    messageContent={getMessageContent}\r\n                />\r\n            )}\r\n            {loading && <Loading />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Microbiology;\r\n","import React, { useState } from 'react';\r\n\r\n// import PDFFile from '../../static/ProvaTeoricaLogica.pdf';\r\n\r\nconst Recomendations = () => {    \r\n    return (\r\n        <>\r\n            <div className=\"card shadow-lg mb-4 mx-auto p-2 col-sm-8 offset-md-3\">\r\n                <p>ESTE É UM ARQUIVO DE EXEMPLO</p>\r\n                <embed src=\"http://mozilla.github.io/pdf.js/web/viewer.html\" width=\"100%\" height=\"500vh\" type=\"application/pdf\"></embed>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Recomendations;","import React from 'react';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\n\r\nimport Root from './pages/Root/Root';\r\nimport Home from './pages/Home/Home';\r\n\r\nimport Login from './pages/Login/Login';\r\nimport SignUp from './pages/SignUp/SignUp';\r\nimport MyProfile from './pages/Header/MyProfile/MyProfile';\r\nimport Users from './pages/Users/Users';\r\n\r\nimport Notifications from './pages/Header/Notifications/Notifications';\r\nimport HeaderNotLogin from './pages/Header/HeaderNotLogin';\r\nimport Header from './pages/Header/Header';\r\nimport Footer from './pages/Footer/Footer';\r\n\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\n\r\nimport MedicalRecords from './pages/MedicalRecords/MedicalRecords';\r\nimport MedicalRecordsCreate from './pages/MedicalRecords/Create/Create';\r\n\r\nimport Registrations from './pages/Registrations/Registrations';\r\n\r\nimport Patient from './pages/Registrations/Patient/Patient';\r\nimport PatientCreate from './pages/Registrations/Patient/Create/Create';\r\n\r\nimport Diseases from './pages/Registrations/Diseases/Diseases';\r\nimport CreateDisease from './pages/Registrations/Diseases/create/CreateDisease';\r\n\r\nimport Medicines from './pages/Registrations/Medicines/Medicines';\r\n\r\nimport CreateMedicine from './pages/Registrations/Medicines/create/CreateMedicine';\r\n\r\nimport History from './pages/History/History';\r\n\r\nimport NotFound from './pages/NotFound/NotFound';\r\n\r\nimport UnderDevelopment from './pages/UnderDevelopment/UnderDevelopment';\r\n\r\nimport Assessment from './pages/MedicalRecords/Assessment/Assessment'\r\nimport AssessmentCreate from './pages/MedicalRecords/Assessment/Create/Create'\r\n\r\nimport Microbiology from './pages/Microbiology';\r\nimport MicrobiologyForm from \"./pages/Microbiology/MicrobiologyForm\";\r\nimport Recomendations from './pages/Recomendations/Recomendations';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <Root />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/login\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <Login />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/signup\"\r\n                    render={() => (\r\n                        <div>\r\n                            <HeaderNotLogin />\r\n                            <SignUp />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/home\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Home />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/registrations\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Registrations />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/medicines\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Medicines />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/medicines/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <CreateMedicine />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/diseases\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Diseases />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/diseases/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <CreateDisease />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/patient\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Patient />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/registrations/patient/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <PatientCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/medicalRecords/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MedicalRecordsCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MedicalRecords />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords/assessment\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Assessment />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/medicalRecords/assessment/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <AssessmentCreate />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Dashboard />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/history\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <History />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/myProfile\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MyProfile />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/users\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Users />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/notifications\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Notifications />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/notFound\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <NotFound />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path=\"/underDevelopment\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <UnderDevelopment />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/microbiology\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Microbiology />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                    exact\r\n                />\r\n\r\n                <Route\r\n                    path=\"/microbiology/create\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <MicrobiologyForm />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                />\r\n                <Route\r\n                    path=\"/recomendations\"\r\n                    render={() => (\r\n                        <div>\r\n                            <Header />\r\n                            <Recomendations />\r\n                            <Footer />\r\n                        </div>\r\n                    )}\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, { useEffect } from 'react';\r\n\r\nimport './global.css';\r\nimport './App.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n\r\n    useEffect(() => {\r\n        document.title = 'GAFio';\r\n    }, []);\r\n\r\n    return (\r\n        <Routes />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import axios from 'axios';\r\n\r\ndeclare module 'axios' {\r\n    export interface AxiosRequestConfig {\r\n        Email?: string,\r\n        baseURL?: string,\r\n    }\r\n}\r\n\r\nconst api = axios.create({\r\n    // baseURL: 'http://localhost:3333'\r\n    // baseURL: 'http://192.168.100.11:3333'\r\n    baseURL: 'http://ec2-3-88-186-254.compute-1.amazonaws.com:3333'\r\n});\r\n\r\nexport default api;"],"sourceRoot":""}